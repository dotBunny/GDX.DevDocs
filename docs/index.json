{
  "api/GDX.AddressablesExtensions.html": {
    "href": "api/GDX.AddressablesExtensions.html",
    "title": "Class AddressablesExtensions | GDX",
    "keywords": "Class AddressablesExtensions Addressables Based Extension Methods Inheritance System.Object AddressablesExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class AddressablesExtensions Remarks Requires UnityEngine.CoreModule.dll to function correctly. Requires com.unity.addressables Package. Methods | Improve this Doc View Source CanInstantiate(AssetReference) Can targetAssetReference be instantiated at runtime? Declaration public static bool CanInstantiate(this AssetReference targetAssetReference) Parameters Type Name Description UnityEngine.AddressableAssets.AssetReference targetAssetReference The target UnityEngine.AddressableAssets.AssetReference . Returns Type Description System.Boolean true/false Remarks Checks that it is not empty, has a runtime key, and makes sure the key is valid. | Improve this Doc View Source CanRelease(AsyncOperationHandle<GameObject>, Boolean) Can the targetAsyncOperationHandle be released? Declaration public static bool CanRelease(this AsyncOperationHandle<GameObject> targetAsyncOperationHandle, bool autoRelease = false) Parameters Type Name Description UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle < UnityEngine.GameObject > targetAsyncOperationHandle A target UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle<TObject> typed as UnityEngine.GameObject . System.Boolean autoRelease If it can, should the handle release? Returns Type Description System.Boolean true/false | Improve this Doc View Source HasRuntimeKey(AssetReference) Does targetAssetReference have a runtime key? Declaration public static bool HasRuntimeKey(this AssetReference targetAssetReference) Parameters Type Name Description UnityEngine.AddressableAssets.AssetReference targetAssetReference The target UnityEngine.AddressableAssets.AssetReference . Returns Type Description System.Boolean true/false Remarks Will return false if the reference is null . | Improve this Doc View Source IsEmpty(AssetReference) Is targetAssetReference empty? Declaration public static bool IsEmpty(this AssetReference targetAssetReference) Parameters Type Name Description UnityEngine.AddressableAssets.AssetReference targetAssetReference The target UnityEngine.AddressableAssets.AssetReference . Returns Type Description System.Boolean true/false"
  },
  "api/GDX.Array2DExtensions.html": {
    "href": "api/GDX.Array2DExtensions.html",
    "title": "Class Array2DExtensions | GDX",
    "keywords": "Class Array2DExtensions Array2D Based Extension Methods Inheritance System.Object Array2DExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class Array2DExtensions Methods | Improve this Doc View Source Scale(ref Array2D<Single>, Int32) Generate an array scaled by bilinear interpolation. Declaration public static Array2D<float> Scale(this ref Array2D<float> inputArray, int scaleFactor = 2) Parameters Type Name Description Array2D < System.Single > inputArray The existing Array2D<T> to scale. System.Int32 scaleFactor The multiple to scale by. Returns Type Description Array2D < System.Single > Remarks Works with System.Single values."
  },
  "api/GDX.ArrayExtensions.html": {
    "href": "api/GDX.ArrayExtensions.html",
    "title": "Class ArrayExtensions | GDX",
    "keywords": "Class ArrayExtensions Array Based Extension Methods Inheritance System.Object ArrayExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class ArrayExtensions Methods | Improve this Doc View Source Clear<T>(T[]) Set all elements in an array to the default values. Declaration public static void Clear<T>(this T[] targetArray) Parameters Type Name Description T[] targetArray The array to be defaulted. Type Parameters Name Description T The type of the array. Remarks This does not alter the targetArray 's length. | Improve this Doc View Source ContainsItem<T>(T[], T) Does targetArray contain targetValue ? Declaration public static bool ContainsItem<T>(this T[] targetArray, T targetValue) where T : class Parameters Type Name Description T[] targetArray The System.Array to look in. T targetValue The target item to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Array . | Improve this Doc View Source ContainsReference<T>(T[], T) Does targetArray contain targetItem ? Declaration public static bool ContainsReference<T>(this T[] targetArray, T targetItem) where T : class Parameters Type Name Description T[] targetArray The System.Array to look in. T targetItem The target item to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Array . Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source ContainsValue<T>(T[], T) Does targetArray contain targetValue ? Declaration public static bool ContainsValue<T>(this T[] targetArray, T targetValue) where T : IEquatable<T> Parameters Type Name Description T[] targetArray The System.Array to look in. T targetValue The target value to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Array . | Improve this Doc View Source FirstIndexOfItem<T>(T[], T) Find the first index of targetItem in targetArray . Declaration public static int FirstIndexOfItem<T>(this T[] targetArray, T targetItem) where T : class Parameters Type Name Description T[] targetArray The array which to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source FirstIndexOfValue<T>(T[], T) Find the first index of targetValue in targetArray . Declaration public static int FirstIndexOfValue<T>(this T[] targetArray, T targetValue) where T : struct Parameters Type Name Description T[] targetArray The array which to look in. T targetValue The value to be found. Returns Type Description System.Int32 The index of targetValue in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source LastIndexOfItem<T>(T[], T) Find the last index of targetItem in targetArray . Declaration public static int LastIndexOfItem<T>(this T[] targetArray, T targetItem) where T : class Parameters Type Name Description T[] targetArray The array which to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source LastIndexOfValue<T>(T[], T) Find the last index of targetValue in targetArray . Declaration public static int LastIndexOfValue<T>(this T[] targetArray, T targetValue) where T : struct Parameters Type Name Description T[] targetArray The array which to look in. T targetValue The value to be found. Returns Type Description System.Int32 The index of targetValue in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array."
  },
  "api/GDX.BoxColliderExtensions.html": {
    "href": "api/GDX.BoxColliderExtensions.html",
    "title": "Class BoxColliderExtensions | GDX",
    "keywords": "Class BoxColliderExtensions UnityEngine.BoxCollider Based Extension Methods Inheritance System.Object BoxColliderExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class BoxColliderExtensions Methods | Improve this Doc View Source ContainsPosition(BoxCollider, Vector3) Is the worldPosition inside of the targetBoxCollider ? Declaration public static bool ContainsPosition(this BoxCollider targetBoxCollider, Vector3 worldPosition) Parameters Type Name Description UnityEngine.BoxCollider targetBoxCollider The UnityEngine.BoxCollider to use for evaluation. UnityEngine.Vector3 worldPosition A UnityEngine.Vector3 point in world space. Returns Type Description System.Boolean true/false if the world position is contained within the targetBoxCollider . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.ByteExtensions.html": {
    "href": "api/GDX.ByteExtensions.html",
    "title": "Class ByteExtensions | GDX",
    "keywords": "Class ByteExtensions System.Byte Based Extension Methods Inheritance System.Object ByteExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class ByteExtensions Methods | Improve this Doc View Source GetStableHashCode(Byte[]) Get the stable hash code of targetBytes , an array of System.Byte . Declaration public static int GetStableHashCode(this byte[] targetBytes) Parameters Type Name Description System.Byte [] targetBytes The target array of System.Byte . Returns Type Description System.Int32 A System.Int32 value. Remarks Does NOT get the object's hashcode. | Improve this Doc View Source IsSame(Byte[], Byte[]) Are the two provided System.Byte arrays the same. Declaration public static bool IsSame(this byte[] sourceBytes, byte[] targetBytes) Parameters Type Name Description System.Byte [] sourceBytes The left hand side System.Byte array to compare. System.Byte [] targetBytes The right hand side System.Byte array to compare. Returns Type Description System.Boolean true if they are identical, will also return true if both are null."
  },
  "api/GDX.CameraExtensions.html": {
    "href": "api/GDX.CameraExtensions.html",
    "title": "Class CameraExtensions | GDX",
    "keywords": "Class CameraExtensions UnityEngine.Camera Based Extension Methods Inheritance System.Object CameraExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class CameraExtensions Methods | Improve this Doc View Source RenderToPNG(Camera, String, Int32, Int32, Int32) Forces a UnityEngine.Camera through RenderToTexture(Camera, Int32, Int32, Int32) encoding to PNG. Declaration public static bool RenderToPNG(this Camera targetCamera, string outputPath, int width = 1920, int height = 1080, int depthBuffer = 24) Parameters Type Name Description UnityEngine.Camera targetCamera The target UnityEngine.Camera to use. System.String outputPath The full path to output the PNG bytes. System.Int32 width The desired width of the rendered texture. System.Int32 height The desired height of the rendered texture. System.Int32 depthBuffer The desired depth of the rendered texture. Returns Type Description System.Boolean true/false if the capture was successful. Remarks This does not indicate if the writing of the PNG was successful. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source RenderToTexture(Camera, Int32, Int32, Int32) Forces a UnityEngine.Camera to render it's view into a texture. Declaration public static Texture2D RenderToTexture(this Camera targetCamera, int width = 1920, int height = 1080, int depthBuffer = 24) Parameters Type Name Description UnityEngine.Camera targetCamera The target UnityEngine.Camera to use. System.Int32 width The desired width of the rendered texture. System.Int32 height The desired height of the rendered texture. System.Int32 depthBuffer The desired depth of the rendered texture. Returns Type Description UnityEngine.Texture2D The rendered view. Remarks This behaves differently then using UnityEngine.ScreenCapture . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.CapsuleColliderExtensions.html": {
    "href": "api/GDX.CapsuleColliderExtensions.html",
    "title": "Class CapsuleColliderExtensions | GDX",
    "keywords": "Class CapsuleColliderExtensions UnityEngine.CapsuleCollider Based Extension Methods Inheritance System.Object CapsuleColliderExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class CapsuleColliderExtensions Methods | Improve this Doc View Source Direction(CapsuleCollider) Get a UnityEngine.Vector3 based orientation of the targetCapsuleCollider . Declaration public static Vector3 Direction(this CapsuleCollider targetCapsuleCollider) Parameters Type Name Description UnityEngine.CapsuleCollider targetCapsuleCollider The capsule collider Returns Type Description UnityEngine.Vector3 The direction of a UnityEngine.CapsuleCollider in its local space. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OutSphereCenters(CapsuleCollider, out Vector3, out Vector3) Return into topPosition and bottomPosition , the respective world-space position of a UnityEngine.CapsuleCollider 's spheres centers. Declaration public static void OutSphereCenters(CapsuleCollider targetCapsuleCollider, out Vector3 topPosition, out Vector3 bottomPosition) Parameters Type Name Description UnityEngine.CapsuleCollider targetCapsuleCollider The UnityEngine.CapsuleCollider having its spheres evaluated. UnityEngine.Vector3 topPosition The determined top spheres center position in world-space. UnityEngine.Vector3 bottomPosition The determined bottom spheres center position in world-space. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Collections.BitArray128.html": {
    "href": "api/GDX.Collections.BitArray128.html",
    "title": "Struct BitArray128 | GDX",
    "keywords": "Struct BitArray128 A 128-bit array. Namespace : GDX.Collections Syntax public struct BitArray128 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray128[1]) { BeAwesome(); } Fields | Improve this Doc View Source Bits0 First reserved System.Int32 memory block. Declaration public int Bits0 Field Value Type Description System.Int32 Remarks Indices 0-31 | Improve this Doc View Source Bits1 Second reserved System.Int32 memory block. Declaration public int Bits1 Field Value Type Description System.Int32 Remarks Indices 32-63 | Improve this Doc View Source Bits2 Third reserved System.Int32 memory block. Declaration public int Bits2 Field Value Type Description System.Int32 Remarks Indices 64-95 | Improve this Doc View Source Bits3 Fourth reserved System.Int32 memory block. Declaration public int Bits3 Field Value Type Description System.Int32 Remarks Indices 96-127 Properties | Improve this Doc View Source Item[Int32] Access bit in array. Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray16.html": {
    "href": "api/GDX.Collections.BitArray16.html",
    "title": "Struct BitArray16 | GDX",
    "keywords": "Struct BitArray16 A 16-bit array. Namespace : GDX.Collections Syntax public struct BitArray16 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray16[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray16(UInt16) Create a new BitArray16 based on provided bits0 . Declaration public BitArray16(ushort bits0) Parameters Type Name Description System.UInt16 bits0 An existing value to be used to create the backing data for a BitArray16 Fields | Improve this Doc View Source Bits0 First reserved System.UInt16 memory block (16-bits). Declaration public ushort Bits0 Field Value Type Description System.UInt16 Remarks Indices 0-15 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray256.html": {
    "href": "api/GDX.Collections.BitArray256.html",
    "title": "Struct BitArray256 | GDX",
    "keywords": "Struct BitArray256 A 256-bit array. Namespace : GDX.Collections Syntax public struct BitArray256 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray256[1]) { BeAwesome(); } Fields | Improve this Doc View Source Bits0 First reserved System.Int32 memory block. Declaration public int Bits0 Field Value Type Description System.Int32 Remarks Indices 0-31 | Improve this Doc View Source Bits1 Second reserved System.Int32 memory block. Declaration public int Bits1 Field Value Type Description System.Int32 Remarks Indices 32-63 | Improve this Doc View Source Bits2 Third reserved System.Int32 memory block. Declaration public int Bits2 Field Value Type Description System.Int32 Remarks Indices 64-95 | Improve this Doc View Source Bits3 Fourth reserved System.Int32 memory block. Declaration public int Bits3 Field Value Type Description System.Int32 Remarks Indices 96-127 | Improve this Doc View Source Bits4 Fifth reserved System.Int32 memory block. Declaration public int Bits4 Field Value Type Description System.Int32 Remarks Indices 128-159 | Improve this Doc View Source Bits5 Sixth reserved System.Int32 memory block. Declaration public int Bits5 Field Value Type Description System.Int32 Remarks Indices 160-191 | Improve this Doc View Source Bits6 Seventh reserved System.Int32 memory block. Declaration public int Bits6 Field Value Type Description System.Int32 Remarks Indices 192-223 | Improve this Doc View Source Bits7 Eighth reserved System.Int32 memory block. Declaration public int Bits7 Field Value Type Description System.Int32 Remarks Indices 224-255 Properties | Improve this Doc View Source Item[Int32] Access bit in array. Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray32.html": {
    "href": "api/GDX.Collections.BitArray32.html",
    "title": "Struct BitArray32 | GDX",
    "keywords": "Struct BitArray32 A 32-bit array. Namespace : GDX.Collections Syntax public struct BitArray32 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray32[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray32(UInt32) Create a new BitArray32 based on provided bits0 . Declaration public BitArray32(uint bits0) Parameters Type Name Description System.UInt32 bits0 An existing value to be used to create the backing data for a BitArray32 Fields | Improve this Doc View Source Bits0 First reserved System.UInt32 memory block (32-bits). Declaration public uint Bits0 Field Value Type Description System.UInt32 Remarks Indices 0-31 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray512.html": {
    "href": "api/GDX.Collections.BitArray512.html",
    "title": "Struct BitArray512 | GDX",
    "keywords": "Struct BitArray512 A 512-bit array. Namespace : GDX.Collections Syntax public struct BitArray512 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray512[1]) { BeAwesome(); } Fields | Improve this Doc View Source Bits0 First reserved System.Int32 memory block. Declaration public int Bits0 Field Value Type Description System.Int32 Remarks Indices 0-31 | Improve this Doc View Source Bits1 Second reserved System.Int32 memory block. Declaration public int Bits1 Field Value Type Description System.Int32 Remarks Indices 32-63 | Improve this Doc View Source Bits10 Eleventh reserved System.Int32 memory block. Declaration public int Bits10 Field Value Type Description System.Int32 Remarks Indices 320-351 | Improve this Doc View Source Bits11 Twelfth reserved System.Int32 memory block. Declaration public int Bits11 Field Value Type Description System.Int32 Remarks Indices 352-383 | Improve this Doc View Source Bits12 Thirteenth reserved System.Int32 memory block. Declaration public int Bits12 Field Value Type Description System.Int32 Remarks Indices 384-415 | Improve this Doc View Source Bits13 Fourteenth reserved System.Int32 memory block. Declaration public int Bits13 Field Value Type Description System.Int32 Remarks Indices 416-447 | Improve this Doc View Source Bits14 Fifteenth reserved System.Int32 memory block. Declaration public int Bits14 Field Value Type Description System.Int32 Remarks Indices 448-479 | Improve this Doc View Source Bits15 Sixteenth reserved System.Int32 memory block. Declaration public int Bits15 Field Value Type Description System.Int32 Remarks Indices 480-511 | Improve this Doc View Source Bits2 Third reserved System.Int32 memory block. Declaration public int Bits2 Field Value Type Description System.Int32 Remarks Indices 64-95 | Improve this Doc View Source Bits3 Fourth reserved System.Int32 memory block. Declaration public int Bits3 Field Value Type Description System.Int32 Remarks Indices 96-127 | Improve this Doc View Source Bits4 Fifth reserved System.Int32 memory block. Declaration public int Bits4 Field Value Type Description System.Int32 Remarks Indices 128-159 | Improve this Doc View Source Bits5 Sixth reserved System.Int32 memory block. Declaration public int Bits5 Field Value Type Description System.Int32 Remarks Indices 160-191 | Improve this Doc View Source Bits6 Seventh reserved System.Int32 memory block. Declaration public int Bits6 Field Value Type Description System.Int32 Remarks Indices 192-223 | Improve this Doc View Source Bits7 Eighth reserved System.Int32 memory block. Declaration public int Bits7 Field Value Type Description System.Int32 Remarks Indices 224-255 | Improve this Doc View Source Bits8 Ninth reserved System.Int32 memory block. Declaration public int Bits8 Field Value Type Description System.Int32 Remarks Indices 256-287 | Improve this Doc View Source Bits9 Tenth reserved System.Int32 memory block. Declaration public int Bits9 Field Value Type Description System.Int32 Remarks Indices 288-319 Properties | Improve this Doc View Source Item[Int32] Access bit in array. Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray64.html": {
    "href": "api/GDX.Collections.BitArray64.html",
    "title": "Struct BitArray64 | GDX",
    "keywords": "Struct BitArray64 A 64-bit array. Namespace : GDX.Collections Syntax public struct BitArray64 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray64[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray64(Int64) Create a new BitArray64 based on provided bits0 . Declaration public BitArray64(long bits0) Parameters Type Name Description System.Int64 bits0 An existing value to be used to create the backing data for a BitArray64 Fields | Improve this Doc View Source Bits0 First reserved System.Int64 memory block (64-bits). Declaration public long Bits0 Field Value Type Description System.Int64 Remarks Indices 0-63 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray8.html": {
    "href": "api/GDX.Collections.BitArray8.html",
    "title": "Struct BitArray8 | GDX",
    "keywords": "Struct BitArray8 A 8-bit array. Namespace : GDX.Collections Syntax public struct BitArray8 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray8[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray8(Byte) Create a new BitArray8 based on provided bits0 . Declaration public BitArray8(byte bits0) Parameters Type Name Description System.Byte bits0 An existing value to be used to create the backing data for a BitArray8 Fields | Improve this Doc View Source Bits0 First reserved System.Byte memory block (8-bits). Declaration public byte Bits0 Field Value Type Description System.Byte Remarks Indices 0-7 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.FreeList.html": {
    "href": "api/GDX.Collections.FreeList.html",
    "title": "Struct FreeList | GDX",
    "keywords": "Struct FreeList An array where indices are allocated from and stored in an in-place linked list. Allocating or deallocating a single int from this array is very fast, as is single datum lookup, but neither the allocated indices nor the free indices can be reliably iterated without an external data structure. This structure can be adapted to an arbitrary of external, parallel arrays. Namespace : GDX.Collections Syntax public struct FreeList Constructors | Improve this Doc View Source FreeList(Int32) Declaration public FreeList(int initialCapacity) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the array. Fields | Improve this Doc View Source Count The total number of currently-allocated indices. Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source CurrentFreeIndex The next available index of the free-list. Declaration public int CurrentFreeIndex Field Value Type Description System.Int32 | Improve this Doc View Source Indices Data storage for allocated indices as well as the in-place free-list. Declaration public int[] Indices Field Value Type Description System.Int32 [] Methods | Improve this Doc View Source AddUnchecked(Int32) Allocates an index from the free-list and stores an integer there, without checking for expansion. Declaration public int AddUnchecked(int data) Parameters Type Name Description System.Int32 data The integer value to store at the allocated index. Returns Type Description System.Int32 The index allocated from the free-list. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32) Allocates an index from the free-list and stores an integer there, expanding the array by twice the current size if necessary. Declaration public bool AddWithExpandCheck(int data, out int allocatedIndex) Parameters Type Name Description System.Int32 data The integer value to store at the allocated index. System.Int32 allocatedIndex The index allocated from the free-list. Returns Type Description System.Boolean True if the array expanded. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, Int32) Allocates an index from the free-list and stores an integer there, expanding the array if necessary. Declaration public bool AddWithExpandCheck(int data, out int allocatedIndex, int expandBy) Parameters Type Name Description System.Int32 data The integer value to store at the allocated index. System.Int32 allocatedIndex The index allocated from the free-list. System.Int32 expandBy How much the array should expand by when out of space. Returns Type Description System.Boolean True if the array expanded. | Improve this Doc View Source Clear() Removes all allocated data and rebuilds the free-list. Declaration public void Clear() | Improve this Doc View Source GetAndRemoveAt(Int32) Retrieves the value stored at the given index and deallocates the index, adding it to the free-list. Declaration public int GetAndRemoveAt(int index) Parameters Type Name Description System.Int32 index The index to add to the free-list. Returns Type Description System.Int32 The value stored at the given index. | Improve this Doc View Source RemoveAt(Int32) Deallocates the given index and adds it to the free-list. Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The index to add to the free-list."
  },
  "api/GDX.Collections.Generic.Array2D-1.html": {
    "href": "api/GDX.Collections.Generic.Array2D-1.html",
    "title": "Struct Array2D<T> | GDX",
    "keywords": "Struct Array2D<T> A 2-dimensional array backed by a flat array. Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct Array2D<T> Type Parameters Name Description T Type of objects. Remarks Mimics multi-dimensional array format. Constructors | Improve this Doc View Source Array2D(Int32, Int32) Create a Array2D<T> . Declaration public Array2D(int rowCount, int columnCount) Parameters Type Name Description System.Int32 rowCount The number of rows (X). System.Int32 columnCount The number of columns (Y). | Improve this Doc View Source Array2D(Int32, Int32, T[]) Create a Array2D<T> providing an existing arrayToUse . Declaration public Array2D(int rowCount, int columnCount, T[] arrayToUse) Parameters Type Name Description System.Int32 rowCount The number of rows (X). System.Int32 columnCount The number of columns (Y). T[] arrayToUse An existing array to use in the Array2D<T> . Fields | Improve this Doc View Source Array The backing flat array. Declaration public T[] Array Field Value Type Description T[] | Improve this Doc View Source ColumnCount The length of each pseudo-array in the dataset. Declaration public int ColumnCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source RowCount The number of pseudo-arrays created to support the dimensionality. Declaration public int RowCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32, Int32] Get a typed object at a specific 2-dimensional index in Array . Declaration public T this[int x, int y] { get; set; } Parameters Type Name Description System.Int32 x The row/line number (vertical axis). System.Int32 y The column number (horizontal axis). Property Value Type Description T Methods | Improve this Doc View Source AddColumns(Int32) Add additional columns to the dataset. Declaration public void AddColumns(int numberOfNewColumns) Parameters Type Name Description System.Int32 numberOfNewColumns The number of columns add. | Improve this Doc View Source AddRows(Int32) Add additional rows to the dataset. Declaration public void AddRows(int numberOfNewRows) Parameters Type Name Description System.Int32 numberOfNewRows The number of rows/arrays to add. | Improve this Doc View Source GetColumnIndex(Int32) Get the column index of the provided index . Declaration public int GetColumnIndex(int index) Parameters Type Name Description System.Int32 index A valid index contained within Array . Returns Type Description System.Int32 The column index. | Improve this Doc View Source GetRowIndex(Int32) Get the row index of the provided index . Declaration public int GetRowIndex(int index) Parameters Type Name Description System.Int32 index A valid index contained within Array . Returns Type Description System.Int32 The row index. | Improve this Doc View Source ReverseColumns() Reverse the order of the columns in the backing Array . Declaration public void ReverseColumns() | Improve this Doc View Source ReverseRows() Reverse the order of the rows in the backing Array . Declaration public void ReverseRows() | Improve this Doc View Source RotateClockwise() Rotate internal dataset clockwise. Declaration public void RotateClockwise() | Improve this Doc View Source RotateCounterClockwise() Rotate internal dataset counter-clockwise. Declaration public void RotateCounterClockwise() | Improve this Doc View Source ToMultiDimensionalArray() Creates a copy of the internal array as a traditional multi-dimensional array. Declaration public T[, ] ToMultiDimensionalArray() Returns Type Description T[,] A new copy of the backing Array in multi-dimensional form. Remarks Useful for scenarios where fills need to be done with [,] structured multi-dimensional arrays."
  },
  "api/GDX.Collections.Generic.CircularBuffer-1.html": {
    "href": "api/GDX.Collections.Generic.CircularBuffer-1.html",
    "title": "Struct CircularBuffer<T> | GDX",
    "keywords": "Struct CircularBuffer<T> A sized buffer which loops back over itself as elements are used. Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct CircularBuffer<T> Type Parameters Name Description T The type of System.Object s contained within. Constructors | Improve this Doc View Source CircularBuffer(Int32) Create a CircularBuffer<T> with a capacity . Declaration public CircularBuffer(int capacity) Parameters Type Name Description System.Int32 capacity The maximum number of items allowed in the CircularBuffer<T> | Improve this Doc View Source CircularBuffer(Int32, T[]) Create a CircularBuffer<T> with a capacity , filling with targetItems . Declaration public CircularBuffer(int capacity, T[] targetItems) Parameters Type Name Description System.Int32 capacity The maximum number of items allowed in the CircularBuffer<T> T[] targetItems An array of values to fill the CircularBuffer<T> with. Exceptions Type Condition System.ArgumentException Invalid number of entries provided to the CircularBuffer<T> constructor. System.ArgumentNullException No items were provided to the CircularBuffer<T> constructor. Fields | Improve this Doc View Source Array Internal array of backed data for the CircularBuffer<T> . Declaration public readonly T[] Array Field Value Type Description T[] | Improve this Doc View Source Capacity The cached array length for Array . Declaration public readonly int Capacity Field Value Type Description System.Int32 | Improve this Doc View Source Count The current size of occupied elements in the CircularBuffer<T> . Declaration public int Count Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source EndIndex The index of the last item in Array . Declaration public int EndIndex Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source StartIndex The index of the first item in Array . Declaration public int StartIndex Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32] Access item at pseudoIndex . Declaration public T this[int pseudoIndex] { get; set; } Parameters Type Name Description System.Int32 pseudoIndex Property Value Type Description T Exceptions Type Condition System.IndexOutOfRangeException Provided index is out of buffers range. Methods | Improve this Doc View Source Add(T) Add an item to the Array . Declaration public void Add(T item) Parameters Type Name Description T item The typed System.Object to add. | Improve this Doc View Source Clear() Clear all values of the Array . Declaration public void Clear() | Improve this Doc View Source GetBack() Get the last item in the Array . Declaration public T GetBack() Returns Type Description T The last typed object in Array . | Improve this Doc View Source GetFront() Get the first item in the Array . Declaration public T GetFront() Returns Type Description T The first typed object in Array . | Improve this Doc View Source IsEmpty() Does the Array have any items in it? Declaration public bool IsEmpty() Returns Type Description System.Boolean true/false | Improve this Doc View Source IsFull() Is the Array at capacity? Declaration public bool IsFull() Returns Type Description System.Boolean true/false | Improve this Doc View Source PopBack() Remove an item from the end of the Array . Declaration public void PopBack() | Improve this Doc View Source PopFront() Remove an item from the start of the Array . Declaration public void PopFront() | Improve this Doc View Source PushBack(T) Add an item to the end of the Array . Declaration public void PushBack(T targetItem) Parameters Type Name Description T targetItem The item to add to the end of Array . | Improve this Doc View Source PushFront(T) Add an item to the start of the Array . Declaration public void PushFront(T targetItem) Parameters Type Name Description T targetItem The item to add to the start of Array . | Improve this Doc View Source ToArray() Copy Array to an array of the same type. Declaration public T[] ToArray() Returns Type Description T[] A copied version of the Array as an array."
  },
  "api/GDX.Collections.Generic.DictionaryPrimes.html": {
    "href": "api/GDX.Collections.Generic.DictionaryPrimes.html",
    "title": "Class DictionaryPrimes | GDX",
    "keywords": "Class DictionaryPrimes A default selection of prime numbers used with different collections. Inheritance System.Object DictionaryPrimes Namespace : GDX.Collections.Generic Syntax public static class DictionaryPrimes Methods | Improve this Doc View Source GetNextSize(Int32) Returns size of hashtable to grow to. Declaration public static int GetNextSize(int oldSize) Parameters Type Name Description System.Int32 oldSize Returns Type Description System.Int32 | Improve this Doc View Source GetPrime(Int32) Get the nearest prime number greater then or equal to the provided minimum . Declaration public static int GetPrime(int minimum) Parameters Type Name Description System.Int32 minimum The lowest possible value. Returns Type Description System.Int32 A prime number. | Improve this Doc View Source GetPrimeAtIndex(Int32) Get the prime number in GDX.Collections.Generic.DictionaryPrimes.s_Primes at index. Declaration public static int GetPrimeAtIndex(int index) Parameters Type Name Description System.Int32 index The valid array index requested. Returns Type Description System.Int32 A prime number. Remarks No out of bounds detection. | Improve this Doc View Source GetPrimesLength() Get the number of prime numbers Declaration public static int GetPrimesLength() Returns Type Description System.Int32 | Improve this Doc View Source SetDefaultPrimes() Establish the default prime numbers in GDX.Collections.Generic.DictionaryPrimes.s_Primes . Declaration public static void SetDefaultPrimes() | Improve this Doc View Source SetPrimes(Int32[]) Set the GDX.Collections.Generic.DictionaryPrimes.s_Primes array with the provided primes . Declaration public static void SetPrimes(int[] primes) Parameters Type Name Description System.Int32 [] primes An array of prime numbers."
  },
  "api/GDX.Collections.Generic.html": {
    "href": "api/GDX.Collections.Generic.html",
    "title": "Namespace GDX.Collections.Generic | GDX",
    "keywords": "Namespace GDX.Collections.Generic Classes DictionaryPrimes A default selection of prime numbers used with different collections. SerializableDictionary<TKey, TValue> A Unity serializable System.Collections.Generic.Dictionary<TKey, TValue> . Structs Array2D<T> A 2-dimensional array backed by a flat array. CircularBuffer<T> A sized buffer which loops back over itself as elements are used. NativeArray2D<T> A 2-dimension Unity.Collections.NativeArray<T> backed array. NativeUniformArray3D<T> A 3-Dimensional Unity.Collections.NativeArray<T> backed array. SimpleList<T> A System.Collections.Generic.List<T> -like data structure. StringKeyDictionary<TValue> StringKeyEntry<T> Enums IteratorState State of Iterator"
  },
  "api/GDX.Collections.Generic.IteratorState.html": {
    "href": "api/GDX.Collections.Generic.IteratorState.html",
    "title": "Enum IteratorState | GDX",
    "keywords": "Enum IteratorState State of Iterator Namespace : GDX.Collections.Generic Syntax public enum IteratorState : byte Fields Name Description Finished Unable to iterate any further. FoundEntry Found an entry meeting criteria. InvalidVersion The data being iterated over has changed. Extension Methods EnumExtensions.HasFlags<IteratorState>(IteratorState)"
  },
  "api/GDX.Collections.Generic.NativeArray2D-1.html": {
    "href": "api/GDX.Collections.Generic.NativeArray2D-1.html",
    "title": "Struct NativeArray2D<T> | GDX",
    "keywords": "Struct NativeArray2D<T> A 2-dimension Unity.Collections.NativeArray<T> backed array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct NativeArray2D<T> : IDisposable where T : struct Type Parameters Name Description T Type of objects. Remarks Use X (horizontal) and Y (vertical) arrangement. Constructors | Improve this Doc View Source NativeArray2D(Int32, Int32, Allocator, NativeArrayOptions) Create a NativeArray2D<T> . Declaration public NativeArray2D(int rowCount, int columnCount, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 rowCount The number of rows (X). System.Int32 columnCount The number of columns (Y). Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Fields | Improve this Doc View Source Array The backing Unity.Collections.NativeArray<T> . Declaration public NativeArray<T> Array Field Value Type Description Unity.Collections.NativeArray <T> | Improve this Doc View Source ColumnCount The length of each pseudo-array in the dataset. Declaration public int ColumnCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source RowCount The number of pseudo-arrays created to support the dimensionality. Declaration public int RowCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32, Int32] Get a typed object at a specific 2-dimensional index in Array . Declaration public T this[int x, int y] { get; set; } Parameters Type Name Description System.Int32 x The row/line number (vertical axis). System.Int32 y The column number (horizontal axis). Property Value Type Description T Methods | Improve this Doc View Source AddColumns(Int32, Allocator, NativeArrayOptions) Add additional columns to the dataset. Declaration public void AddColumns(int numberOfNewColumns, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 numberOfNewColumns The number of columns add. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? | Improve this Doc View Source AddRows(Int32, Allocator, NativeArrayOptions) Add additional rows to the dataset. Declaration public void AddRows(int numberOfNewRows, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 numberOfNewRows The number of rows/arrays to add. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? | Improve this Doc View Source Dispose() Properly dispose of Array . Declaration public void Dispose() | Improve this Doc View Source ReverseColumns() Reverse the order of the columns in the backing Array . Declaration public void ReverseColumns() | Improve this Doc View Source ReverseRows() Reverse the order of the rows in the backing Array . Declaration public void ReverseRows() | Improve this Doc View Source ToMultiDimensionalArray() Creates a copy of the internal array as a traditional multi-dimensional array. Declaration public T[, ] ToMultiDimensionalArray() Returns Type Description T[,] A new copy of the backing Array in multi-dimensional form. Remarks Useful for scenarios where fills need to be done with [,] structured multi-dimensional arrays. Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.NativeUniformArray3D-1.html": {
    "href": "api/GDX.Collections.Generic.NativeUniformArray3D-1.html",
    "title": "Struct NativeUniformArray3D<T> | GDX",
    "keywords": "Struct NativeUniformArray3D<T> A 3-Dimensional Unity.Collections.NativeArray<T> backed array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct NativeUniformArray3D<T> : IDisposable where T : struct Type Parameters Name Description T Type of objects. Constructors | Improve this Doc View Source NativeUniformArray3D(Int32, Allocator, NativeArrayOptions) Create a NativeUniformArray3D<T> with a uniform dimensional length. Declaration public NativeUniformArray3D(int stride, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 stride X length, Y length and Z length will all be set to this value. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Fields | Improve this Doc View Source Array The backing Unity.Collections.NativeArray<T> . Declaration public NativeArray<T> Array Field Value Type Description Unity.Collections.NativeArray <T> | Improve this Doc View Source Length The length of Array . Declaration public readonly int Length Field Value Type Description System.Int32 | Improve this Doc View Source Stride The stride of each dimensional segment in Array . Declaration public readonly int Stride Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[Int32, Int32, Int32] Access a specific location in the voxel. Declaration public T this[int x, int y, int z] { get; set; } Parameters Type Name Description System.Int32 x X location index. System.Int32 y Y location index. System.Int32 z Z location index. Property Value Type Description T | Improve this Doc View Source Item[int3] Access a specific location in the voxel. Declaration public T this[int3 index] { get; set; } Parameters Type Name Description Unity.Mathematics.int3 index A 3-Dimensional index. Property Value Type Description T Methods | Improve this Doc View Source Dispose() Properly dispose of the NativeUniformArray3D<T> . Declaration public void Dispose() | Improve this Doc View Source GetFromIndex(Int32) Get the 3-Dimensional index of a flat array index. Declaration public int3 GetFromIndex(int idx) Parameters Type Name Description System.Int32 idx A flat array index. Returns Type Description Unity.Mathematics.int3 A 3-Dimensional voxel index. Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.SerializableDictionary-2.html": {
    "href": "api/GDX.Collections.Generic.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | GDX",
    "keywords": "Class SerializableDictionary<TKey, TValue> A Unity serializable System.Collections.Generic.Dictionary<TKey, TValue> . Inheritance System.Object System.Collections.Generic.Dictionary <TKey, TValue> SerializableDictionary<TKey, TValue> Implements System.Collections.Generic.IDictionary <TKey, TValue> System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.Generic.IReadOnlyDictionary <TKey, TValue> System.Collections.Generic.IReadOnlyCollection < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable UnityEngine.ISerializationCallbackReceiver Namespace : GDX.Collections.Generic Syntax [Serializable] [VisualScriptingCompatible((short)1)] public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey The dictionary's key System.Type . TValue The dictionary's value System.Type . Remarks This will NOT work with System.Object based objects, use UnityEngine.Object if you must. While .NET has solutions for creating custom serialization paths, Unity uses its own system to serialize data into YAML structures. This also assumes that the types provided can be serialized by Unity. The process of serializing and deserializing this dictionary should not be considered performant. Constructors | Improve this Doc View Source SerializableDictionary() Type constructor. Declaration public SerializableDictionary() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source GetSerializedDataLength() Get the length of the serialized data arrays. Declaration public int GetSerializedDataLength() Returns Type Description System.Int32 An integer value representing the count. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsSerializableType(Type) Is the type capable of being serialized by the SerializableDictionary<TKey, TValue> , utilizing Unity's own serialization system? Declaration public static bool IsSerializableType(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean true/false if the type is valid. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source LoadSerializedData(Boolean) Load the data into the System.Collections.Generic.Dictionary<TKey, TValue> cached in the serialized data. Declaration public void LoadSerializedData(bool clearAfterLoad = true) Parameters Type Name Description System.Boolean clearAfterLoad Should the serialized data be cleared after loading? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnAfterDeserialize() Rehydrate the serialized data arrays back into a cohesive System.Collections.Generic.Dictionary<TKey, TValue> . Declaration public void OnAfterDeserialize() Remarks Invoked by Unity, calls LoadSerializedData(Boolean) . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnBeforeSerialize() Build out serialized data arrays and associative data, used to rehydrate during deserialization. Declaration public void OnBeforeSerialize() Remarks Invoked by Unity, calls SaveSerializedData() . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OverwriteSerializedData(TKey[], TValue[]) Overwrite data in the serialized arrays with the provided data. Declaration public void OverwriteSerializedData(TKey[] keyArray, TValue[] valueArray) Parameters Type Name Description TKey[] keyArray An array of keys. TValue[] valueArray An array of values. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source SaveSerializedData() Fill serializable arrays from dictionary data. Declaration public void SaveSerializedData() Remarks We will always create the arrays so the property drawers function nicely. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GDX.Collections.Generic.SimpleList-1.html": {
    "href": "api/GDX.Collections.Generic.SimpleList-1.html",
    "title": "Struct SimpleList<T> | GDX",
    "keywords": "Struct SimpleList<T> A System.Collections.Generic.List<T> -like data structure. Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct SimpleList<T> Type Parameters Name Description T The type of the System.Object s contained within. Constructors | Improve this Doc View Source SimpleList(T[]) Create a SimpleList<T> providing an existing arrayToUse . Declaration public SimpleList(T[] arrayToUse) Parameters Type Name Description T[] arrayToUse An existing array to use in the SimpleList<T> . | Improve this Doc View Source SimpleList(T[], Int32) Create a SimpleList<T> providing an existing arrayToUse and setting the Count . Declaration public SimpleList(T[] arrayToUse, int count) Parameters Type Name Description T[] arrayToUse An existing array to use in the SimpleList<T> . System.Int32 count An existing element count. | Improve this Doc View Source SimpleList(Int32) Create a SimpleList<T> with an initial capacity . Declaration public SimpleList(int capacity) Parameters Type Name Description System.Int32 capacity An initial sizing for the Array . Fields | Improve this Doc View Source Array Internal array of backed data for the SimpleList<T> . Declaration public T[] Array Field Value Type Description T[] | Improve this Doc View Source Count The current number of occupied elements in the CircularBuffer<T> . Declaration public int Count Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Methods | Improve this Doc View Source AddExpandClearBoth(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Clears old and new arrays on resize. Declaration public void AddExpandClearBoth(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddExpandClearNew(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Clears unused indices of the new array on resize. Declaration public void AddExpandClearNew(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddExpandClearOld(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Clears the old array on resize after copying its contents. Declaration public void AddExpandClearOld(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddExpandNoClear(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Declaration public void AddExpandNoClear(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddUnchecked(T) Add an item to the SimpleList<T> without checking the Array size. Declaration public void AddUnchecked(T item) Parameters Type Name Description T item A typed System.Object to add. | Improve this Doc View Source AddWithExpandCheck(T) Add an item to the SimpleList<T> , checking if Array needs to be resized. Declaration public void AddWithExpandCheck(T item) Parameters Type Name Description T item A typed System.Object to add. | Improve this Doc View Source AddWithExpandCheck(T, Int32) Add an item to the SimpleList<T> , checking if Array needs to be resized. Declaration public void AddWithExpandCheck(T item, int howMuchToExpand) Parameters Type Name Description T item A typed System.Object to add. System.Int32 howMuchToExpand How much to expand the array by. | Improve this Doc View Source Clear() Clear out the Array in SimpleList<T> and sets the Count to 0. Declaration public void Clear() | Improve this Doc View Source Insert(T, Int32) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void Insert(T item, int index) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. | Improve this Doc View Source InsertExpandClearBoth(T, Int32, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Clears old and new arrays on resize. Declaration public void InsertExpandClearBoth(T item, int index, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertExpandClearNew(T, Int32, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Clears unused indices of the new array on resize. Declaration public void InsertExpandClearNew(T item, int index, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertExpandClearOld(T, Int32, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Clears the old array on resize after copying its contents. Declaration public void InsertExpandClearOld(T item, int index, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertExpandNoClear(T, Int32, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void InsertExpandNoClear(T item, int index, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertUnchecked(T, Int32) Insert an item into the SimpleList<T> without checking the Array size. Declaration public void InsertUnchecked(T item, int index) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. | Improve this Doc View Source InsertWithExpandCheck(T, Int32) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void InsertWithExpandCheck(T item, int index) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. | Improve this Doc View Source InsertWithExpandCheck(T, Int32, Int32) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void InsertWithExpandCheck(T item, int index, int howMuchToExpand) Parameters Type Name Description T item A typed System.Object to insert. System.Int32 index The index in Array to add the item at. System.Int32 howMuchToExpand The number of elements to add at the end of the array when expanding. | Improve this Doc View Source RemoveAt(Int32) Remove an item from the SimpleList<T> at a specific index . Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The target index. | Improve this Doc View Source RemoveAtSwapBack(Int32) Remove an item from the SimpleList<T> at a specific index , swapping it with the item from the highest used index. Declaration public void RemoveAtSwapBack(int index) Parameters Type Name Description System.Int32 index The target index. | Improve this Doc View Source RemoveFromBack() Remove the last element in the SimpleList<T> . Declaration public void RemoveFromBack() | Improve this Doc View Source Reserve(Int32) Resizes the Array , ensuring there are the provided number of empty spots in it. Declaration public void Reserve(int numberToReserve) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. | Improve this Doc View Source ReserveClearBoth(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Clears old and new arrays on resize. Declaration public void ReserveClearBoth(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source ReserveClearNew(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Clears unused indices of the new array on resize. Declaration public void ReserveClearNew(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source ReserveClearOld(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Clears the old array on resize after copying its contents. Declaration public void ReserveClearOld(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source ReserveNoClear(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Declaration public void ReserveNoClear(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source Reverse() Reverse the order of Array . Declaration public void Reverse()"
  },
  "api/GDX.Collections.Generic.StringKeyDictionary-1.html": {
    "href": "api/GDX.Collections.Generic.StringKeyDictionary-1.html",
    "title": "Struct StringKeyDictionary<TValue> | GDX",
    "keywords": "Struct StringKeyDictionary<TValue> Namespace : GDX.Collections.Generic Syntax [Serializable] public struct StringKeyDictionary<TValue> Type Parameters Name Description TValue Constructors | Improve this Doc View Source StringKeyDictionary(Int32) Initializes the dictionary with at least minCapacity capacity. Declaration public StringKeyDictionary(int minCapacity) Parameters Type Name Description System.Int32 minCapacity The minimal initial capacity to reserve. Fields | Improve this Doc View Source Buckets Declaration public int[] Buckets Field Value Type Description System.Int32 [] | Improve this Doc View Source Count Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source Entries Declaration public StringKeyEntry<TValue>[] Entries Field Value Type Description StringKeyEntry <TValue>[] | Improve this Doc View Source FreeListHead Declaration public int FreeListHead Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[String] Directly access a value by key. Declaration public TValue this[string key] { get; set; } Parameters Type Name Description System.String key The target key to look for a value identified by. Property Value Type Description TValue Exceptions Type Condition System.ArgumentNullException Thrown when a null key is provided to lookup. System.Collections.Generic.KeyNotFoundException Thrown when the key is not found in the StringKeyDictionary<TValue> . Methods | Improve this Doc View Source AddSafe(String, TValue) Adds the key value pair to the dictionary, checking for duplicate entries and expanding if necessary. Declaration public bool AddSafe(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. Returns Type Description System.Boolean True if the entry was successfully created. | Improve this Doc View Source AddUnchecked(String, TValue) Adds the key value pair to the dictionary, without checking for available capacity or duplicate entries. Declaration public void AddUnchecked(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. | Improve this Doc View Source AddWithExpandCheck(String, TValue) Adds the key value pair to the dictionary, expanding if necessary but not checking for duplicate entries. Declaration public void AddWithExpandCheck(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. | Improve this Doc View Source AddWithUniqueCheck(String, TValue) Adds the key value pair to the dictionary, checking for duplicates but not expanding if necessary. Declaration public bool AddWithUniqueCheck(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. Returns Type Description System.Boolean True if the entry was successfully created. | Improve this Doc View Source Clear() Clears the dictionary. Declaration public void Clear() | Improve this Doc View Source ContainsKey(String) Checks if the dictionary contains the given key. Declaration public bool ContainsKey(string key) Parameters Type Name Description System.String key The key to check for. Returns Type Description System.Boolean True if the dictionary contains the key. | Improve this Doc View Source ExpandWhenFull() Resizes the dictionary with the assumption that it is full. Do not use otherwise. Declaration public void ExpandWhenFull() | Improve this Doc View Source IndexOf(String) Finds the index of the entry corresponding to a key. Declaration public int IndexOf(string key) Parameters Type Name Description System.String key The key to find the index of. Returns Type Description System.Int32 The index of the entry, or -1 if the entry does not exist. | Improve this Doc View Source MoveNext(ref Int32) Iterates the dictionary. NOTE: if you suspect the dictionary might be modified while iterating, this will not catch the error -- use the other overload instead. Declaration public bool MoveNext(ref int iteratedIndexCount) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. Returns Type Description System.Boolean Whether or not the iterator found an entry | Improve this Doc View Source MoveNext(ref Int32, out StringKeyEntry<TValue>) Iterates the dictionary. NOTE: if you suspect the dictionary might be modified while iterating, this will not catch the error -- use the other overload instead. Declaration public bool MoveNext(ref int iteratedIndexCount, out StringKeyEntry<TValue> entry) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. StringKeyEntry <TValue> entry The entry returned by the iterator Returns Type Description System.Boolean Whether or not the iterator found an entry | Improve this Doc View Source MoveNext(ref Int32, Int32, in Int32, out StringKeyEntry<TValue>) Iterates the dictionary. Declaration public IteratorState MoveNext(ref int iteratedIndexCount, int iteratorVersion, in int dictionaryVersion, out StringKeyEntry<TValue> entry) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. System.Int32 iteratorVersion The version when iteration started. System.Int32 dictionaryVersion The current version of the dictionary - update this on add, remove, or clear operations. StringKeyEntry <TValue> entry The entry returned by the iterator Returns Type Description IteratorState Whether the iterator found an entry, finished iteration, or could not continue due to an invalid version. | Improve this Doc View Source Reserve(Int32) Expands the dictionary if it does not have enough empty space for capacityToReserve . Declaration public void Reserve(int capacityToReserve) Parameters Type Name Description System.Int32 capacityToReserve | Improve this Doc View Source TryGetValue(String, out TValue) Attempts to get the value for the given key; returns true if key was found, false otherwise. Declaration public bool TryGetValue(string key, out TValue value) Parameters Type Name Description System.String key The key to retrieve. TValue value The value of the entry found. Returns Type Description System.Boolean True if the entry was found; false otherwise. | Improve this Doc View Source TryModifyValue(String, TValue) Replaces the value of the entry if the entry exists. Declaration public bool TryModifyValue(string key, TValue value) Parameters Type Name Description System.String key The key of the entry to modify. TValue value The new value of the entry. Returns Type Description System.Boolean True if the entry was found. | Improve this Doc View Source TryRemove(String) Removes the entry if it exists. Declaration public bool TryRemove(string key) Parameters Type Name Description System.String key The key to remove. Returns Type Description System.Boolean True if the entry was found. | Improve this Doc View Source TryRemoveNoValueClear(String) Removes the entry if it exists, but does not remove the value of the key value pair. Declaration public bool TryRemoveNoValueClear(string key) Parameters Type Name Description System.String key The key to remove. Returns Type Description System.Boolean True if the entry was found."
  },
  "api/GDX.Collections.Generic.StringKeyEntry-1.html": {
    "href": "api/GDX.Collections.Generic.StringKeyEntry-1.html",
    "title": "Struct StringKeyEntry<T> | GDX",
    "keywords": "Struct StringKeyEntry<T> Namespace : GDX.Collections.Generic Syntax [Serializable] public struct StringKeyEntry<T> Type Parameters Name Description T Fields | Improve this Doc View Source HashCode Declaration public int HashCode Field Value Type Description System.Int32 | Improve this Doc View Source Key Declaration public string Key Field Value Type Description System.String | Improve this Doc View Source Next Declaration public int Next Field Value Type Description System.Int32 | Improve this Doc View Source Value Declaration public T Value Field Value Type Description T"
  },
  "api/GDX.Collections.html": {
    "href": "api/GDX.Collections.html",
    "title": "Namespace GDX.Collections | GDX",
    "keywords": "Namespace GDX.Collections Structs BitArray128 A 128-bit array. BitArray16 A 16-bit array. BitArray256 A 256-bit array. BitArray32 A 32-bit array. BitArray512 A 512-bit array. BitArray64 A 64-bit array. BitArray8 A 8-bit array. FreeList An array where indices are allocated from and stored in an in-place linked list. Allocating or deallocating a single int from this array is very fast, as is single datum lookup, but neither the allocated indices nor the free indices can be reliably iterated without an external data structure. This structure can be adapted to an arbitrary of external, parallel arrays. NativeSparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. SparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration."
  },
  "api/GDX.Collections.NativeSparseSet.html": {
    "href": "api/GDX.Collections.NativeSparseSet.html",
    "title": "Struct NativeSparseSet | GDX",
    "keywords": "Struct NativeSparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. Namespace : GDX.Collections Syntax public struct NativeSparseSet Constructors | Improve this Doc View Source NativeSparseSet(Int32, Allocator, NativeArrayOptions) Create a NativeSparseSet with an initialCapacity . Declaration public NativeSparseSet(int initialCapacity, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the sparse and dense int arrays. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Fields | Improve this Doc View Source Count How many indices are being used currently? Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source DenseArray Holds references to the sparse array for swapping indices. Declaration public NativeArray<int> DenseArray Field Value Type Description Unity.Collections.NativeArray < System.Int32 > | Improve this Doc View Source FreeIndex The first free (currently unused) index in the sparse array. Declaration public int FreeIndex Field Value Type Description System.Int32 | Improve this Doc View Source SparseArray Holds references to dense array indices. Declaration public NativeArray<int> SparseArray Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Its own indices are claimed and freed via a free-list. Methods | Improve this Doc View Source AddUnchecked(out Int32, out Int32) Adds a sparse/dense index pair to the set without checking if the set needs to expand. Declaration public void AddUnchecked(out int sparseIndex, out int denseIndex) Parameters Type Name Description System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, out Int32, Allocator, NativeArrayOptions) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck(int expandBy, out int sparseIndex, out int denseIndex, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 expandBy How many indices to expand by. System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Returns Type Description System.Boolean True if the index pool expanded. | Improve this Doc View Source Clear() Clear the dense and sparse arrays. Declaration public void Clear() | Improve this Doc View Source Clear(NativeArray<UInt64>) Clear the dense and sparse arrays. Declaration public void Clear(NativeArray<ulong> versionArray) Parameters Type Name Description Unity.Collections.NativeArray < System.UInt64 > versionArray Array containing version numbers to check against. | Improve this Doc View Source Expand(Int32, Allocator, NativeArrayOptions) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? | Improve this Doc View Source Expand(Int32, ref NativeArray<UInt64>, Allocator, NativeArrayOptions) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity, ref NativeArray<ulong> versionArray, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. Unity.Collections.NativeArray < System.UInt64 > versionArray Array containing version numbers to check against. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? | Improve this Doc View Source GetDenseIndexUnchecked(Int32) Gets the value of the sparse array at the given index without any data validation. Declaration public int GetDenseIndexUnchecked(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index to check in the sparse array. Returns Type Description System.Int32 The dense index at the given sparse index. | Improve this Doc View Source GetDenseIndexWithBoundsAndVersionCheck(Int32, UInt64, NativeArray<UInt64>) Gets the value of the sparse array at the given index, or -1 if the given sparse index is invalid.. Declaration public int GetDenseIndexWithBoundsAndVersionCheck(int sparseIndex, ulong version, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithBoundsCheck(Int32) Gets the value of the sparse array at the given index, or -1 if the dense and sparse indices don't point to each other or if the dense index is outside the dense bounds. Declaration public int GetDenseIndexWithBoundsCheck(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithVersionCheck(Int32, UInt64, NativeArray<UInt64>) Gets the value of the sparse array at the given index, or -1 if the version number does not match. Declaration public int GetDenseIndexWithVersionCheck(int sparseIndex, ulong version, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source RemoveUnchecked(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUnchecked(int sparseIndexToRemove) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. | Improve this Doc View Source RemoveUnchecked(Int32, out Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, out int indexToSwapTo, out int indexToSwapFrom) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. | Improve this Doc View Source RemoveUnchecked(Int32, NativeArray<UInt64>) Removes the associated sparse/dense index pair from active use and increments the version. Declaration public void RemoveUnchecked(int sparseIndexToRemove, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray The array where version numbers to check against are stored. | Improve this Doc View Source RemoveUnchecked(Int32, NativeArray<UInt64>, out Int32, out Int32) Removes the associated sparse/dense index pair from active use and increments the version. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, NativeArray<ulong> versionArray, out int indexToSwapTo, out int indexToSwapFrom) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, UInt64[]) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, ulong[] versionArray) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, NativeArray<UInt64>, out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, NativeArray<ulong> versionArray, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveWithBoundsAndVersionChecks(ref Int32, UInt64, NativeArray<UInt64>) Removes the associated sparse/dense index pair from active use. calls. Declaration public bool RemoveWithBoundsAndVersionChecks(ref int sparseIndexToRemove, ulong version, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. Unity.Collections.NativeArray < System.UInt64 > versionArray The array where version numbers to check against are stored. Returns Type Description System.Boolean True if the element was successfully removed. | Improve this Doc View Source RemoveWithNullValueCheck(ref Int32) Returns true if the element was successfully removed. WARNING: Will not protect against accidentally removing twice if the index in question was recycled between Remove calls. Declaration public bool RemoveWithNullValueCheck(ref int sparseIndexToRemove) Parameters Type Name Description System.Int32 sparseIndexToRemove Returns Type Description System.Boolean | Improve this Doc View Source Reserve(Int32, Allocator, NativeArrayOptions) Declaration public void Reserve(int numberToReserve, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 numberToReserve Unity.Collections.Allocator allocator Unity.Collections.NativeArrayOptions nativeArrayOptions | Improve this Doc View Source Reserve(Int32, ref NativeArray<UInt64>, Allocator, NativeArrayOptions) Declaration public void Reserve(int numberToReserve, ref NativeArray<ulong> versionArray, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 numberToReserve Unity.Collections.NativeArray < System.UInt64 > versionArray Unity.Collections.Allocator allocator Unity.Collections.NativeArrayOptions nativeArrayOptions | Improve this Doc View Source TryRemoveFromDenseIndexWithVersionCheck(Int32, UInt64, NativeArray<UInt64>) Attempts to remove the associated sparse/dense index pair from active use and increments the version if successful. Declaration public bool TryRemoveFromDenseIndexWithVersionCheck(int denseIndexToRemove, ulong version, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. System.UInt64 version The array where version numbers to check against are stored. Unity.Collections.NativeArray < System.UInt64 > versionArray The array where version numbers to check against are stored. Returns Type Description System.Boolean Whether or not the remove attempt succeeded. | Improve this Doc View Source TryRemoveWithVersionCheck(Int32, UInt64, NativeArray<UInt64>, out Int32, out Int32) Attempts to remove the associated sparse/dense index pair from active use and increments the version if successful. Out parameters used to manage parallel data arrays. Declaration public bool TryRemoveWithVersionCheck(int sparseIndexToRemove, ulong version, NativeArray<ulong> versionArray, out int indexToSwapTo, out int indexToSwapFrom) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. Unity.Collections.NativeArray < System.UInt64 > versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. Returns Type Description System.Boolean Whether or not the remove attempt succeeded."
  },
  "api/GDX.Collections.Pooling.ArrayPool-1.html": {
    "href": "api/GDX.Collections.Pooling.ArrayPool-1.html",
    "title": "Struct ArrayPool<T> | GDX",
    "keywords": "Struct ArrayPool<T> An object pool for arrays with power-of-two lengths. Namespace : GDX.Collections.Pooling Syntax public struct ArrayPool<T> Type Parameters Name Description T The data type contained by pooled arrays. Constructors | Improve this Doc View Source ArrayPool(Int32[], Int32[]) Initialize the array pool with initial and maximum sizes for each power-of-two, 0 through 30 inclusive (the maximum power-of-two length supported in C#). Declaration public ArrayPool(int[] initialPoolCounts, int[] maxPoolCapacities) Parameters Type Name Description System.Int32 [] initialPoolCounts System.Int32 [] maxPoolCapacities Fields | Improve this Doc View Source ArrayPools Declaration public JaggedArrayWithCount<T>[] ArrayPools Field Value Type Description JaggedArrayWithCount <T>[] | Improve this Doc View Source MaxPoolCapacities Declaration public int[] MaxPoolCapacities Field Value Type Description System.Int32 [] Methods | Improve this Doc View Source Get(Int32) Allocates an array from the pool. Finds an array of the smallest power-of-two length larger than or equal to the requested size. Declaration public T[] Get(int requestedSize) Parameters Type Name Description System.Int32 requestedSize The desired array length. The returned array will be the smallest power-of-two larger than or equal to this size. Returns Type Description T[] | Improve this Doc View Source Return(T[]) Return a power-of-two sized array to the pool. Only pass power-of-two sized arrays to this function. Does not clear the array. Declaration public void Return(T[] array) Parameters Type Name Description T[] array The power-of-two sized array to return to the pool. Power-of-two sizes only."
  },
  "api/GDX.Collections.Pooling.GameObjectPool.html": {
    "href": "api/GDX.Collections.Pooling.GameObjectPool.html",
    "title": "Class GameObjectPool | GDX",
    "keywords": "Class GameObjectPool UnityEngine.GameObject based functionality extending the SimpleListManagedPool to better support UnityEngine.GameObject patterns. Inheritance System.Object GameObjectPool Namespace : GDX.Collections.Pooling Syntax [VisualScriptingCompatible((short)1)] public static class GameObjectPool Methods | Improve this Doc View Source CreatePool(GameObject, Transform, Int32, Int32, Boolean, Boolean, Boolean) Create a UnityEngine.GameObject based SimpleListManagedPool for the provided gameObject . Declaration public static IManagedPool CreatePool(GameObject gameObject, Transform parent, int minimumObjects = 10, int maximumObjects = 50, bool allowCreateMore = true, bool allowReuseWhenCapped = false, bool allowManagedTearDown = false) Parameters Type Name Description UnityEngine.GameObject gameObject The object which going to be cloned. UnityEngine.Transform parent The container object. System.Int32 minimumObjects The minimum number of objects to be pooled. System.Int32 maximumObjects The maximum number of objects to be pooled. System.Boolean allowCreateMore Can more items be created as needed when starved for items? System.Boolean allowReuseWhenCapped Should we reuse oldest items when starving for items? System.Boolean allowManagedTearDown Does the pool allow a managed tear down event call? Returns Type Description IManagedPool Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Boolean) Get the next available item from the pool . Declaration public static GameObject Get(SimpleListManagedPool pool, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Transform, Boolean, Boolean, Boolean) Get the next available item from the pool and parent it to a UnityEngine.Transform . Declaration public static GameObject Get(SimpleListManagedPool pool, Transform parent, bool worldPositionStays = false, bool zeroLocalPosition = true, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . System.Boolean worldPositionStays Ensure that the world position of the item pulled from the SimpleListManagedPool remains the same through parenting. System.Boolean zeroLocalPosition Set the local position of the item pulled from the SimpleListManagedPool to being UnityEngine.Vector3.zero after parenting. System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Transform, Vector3, Quaternion, Boolean) Get the next available item from the pool , parent it to a UnityEngine.Transform , and then set it's local position and rotation. Declaration public static GameObject Get(SimpleListManagedPool pool, Transform parent, Vector3 localPosition, Quaternion localRotation, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . UnityEngine.Vector3 localPosition The local position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Quaternion localRotation The local rotation to set on the item pulled from the SimpleListManagedPool after parenting. System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Transform, Vector3, Vector3, Boolean) Get the next available item from the pool , parent it to a UnityEngine.Transform , and then setting it's local position and where it is looking. Declaration public static GameObject Get(SimpleListManagedPool pool, Transform parent, Vector3 localPosition, Vector3 worldLookAtPosition, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . UnityEngine.Vector3 localPosition The local position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Vector3 worldLookAtPosition The world position to have the item pulled from the SimpleListManagedPool look at System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Quaternion, Boolean) Get the next available item from the pool , and set its world position and rotation. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Quaternion worldRotation, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool . UnityEngine.Quaternion worldRotation The world rotation to set on the item pulled from the SimpleListManagedPool . System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Quaternion, Transform, Boolean) Get the next available item from the pool , and set its world position and rotation after parenting. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Quaternion worldRotation, Transform parent, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Quaternion worldRotation The world rotation to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Vector3, Boolean) Get the next available item from the pool , and set its world position and where it is looking. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Vector3 worldLookAtPosition, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool . UnityEngine.Vector3 worldLookAtPosition The world position to have the item pulled from the SimpleListManagedPool look at System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Vector3, Transform, Boolean) Get the next available item from the pool , and set its world position and look at position after parenting. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Vector3 worldLookAtPosition, Transform parent, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Vector3 worldLookAtPosition The world position to have the item pulled from the SimpleListManagedPool look at after parenting. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetOrCreatePool(GameObject, Transform, Int32, Int32, Boolean, Boolean, Boolean) Gets a pool for the gameObject , or creates a new SimpleListManagedPool for it. Declaration public static IManagedPool GetOrCreatePool(GameObject gameObject, Transform parent, int minimumObjects = 10, int maximumObjects = 50, bool allowCreateMore = true, bool allowReuseWhenCapped = false, bool allowManagedTearDown = false) Parameters Type Name Description UnityEngine.GameObject gameObject The object which going to be cloned. UnityEngine.Transform parent The container object. System.Int32 minimumObjects The minimum number of objects to be pooled. System.Int32 maximumObjects The maximum number of objects to be pooled. System.Boolean allowCreateMore Can more items be created as needed when starved for items? System.Boolean allowReuseWhenCapped Should we reuse oldest items when starving for items? System.Boolean allowManagedTearDown Does the pool allow a managed tear down event call? Returns Type Description IManagedPool Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Collections.Pooling.html": {
    "href": "api/GDX.Collections.Pooling.html",
    "title": "Namespace GDX.Collections.Pooling | GDX",
    "keywords": "Namespace GDX.Collections.Pooling Classes GameObjectPool UnityEngine.GameObject based functionality extending the SimpleListManagedPool to better support UnityEngine.GameObject patterns. ManagedPoolBuilder A time-slicing builder behaviour for IManagedPool . ManagedPools A managed pooling system implementation primarily meant for the object oriented patterns, based on the C# base object. SimpleListManagedPool A System.Object SimpleList<T> backed pool implementation. Structs ArrayPool<T> An object pool for arrays with power-of-two lengths. JaggedArrayWithCount<T> Interfaces IGameObjectPoolItem An interface describing the functionality needed for an item to be understood by GameObjectPool , if callbacks are to be made. IManagedPool An interface describing the functionality needed for a pool to be understood by ManagedPools ."
  },
  "api/GDX.Collections.Pooling.IGameObjectPoolItem.html": {
    "href": "api/GDX.Collections.Pooling.IGameObjectPoolItem.html",
    "title": "Interface IGameObjectPoolItem | GDX",
    "keywords": "Interface IGameObjectPoolItem An interface describing the functionality needed for an item to be understood by GameObjectPool , if callbacks are to be made. Namespace : GDX.Collections.Pooling Syntax public interface IGameObjectPoolItem Methods | Improve this Doc View Source GetGameObject() Declaration GameObject GetGameObject() Returns Type Description UnityEngine.GameObject Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetParentPool() Return the IManagedPool which the IGameObjectPoolItem is currently managed by. Declaration IManagedPool GetParentPool() Returns Type Description IManagedPool An IManagedPool if the IGameObjectPoolItem is attached to a pool, otherwise null. Remarks It is possible that a pooled item may exist without a parent in some custom scenario. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsValidItem() Is the IGameObjectPoolItem thought to be valid? Declaration bool IsValidItem() Returns Type Description System.Boolean true/false if the item is found to be valid. Remarks Sometimes a UnityEngine.GameObject may get destroyed without the pool knowing, this contains checks to validate if the item can be returned to a pool and reused appropriately. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnReturnedToPool() Called when this item is returned to the IManagedPool . Declaration void OnReturnedToPool() Remarks This should handle everything, including disabling the UnityEngine.GameObject . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnSpawnedFromPool() Called when this item is spawned from the IManagedPool . Declaration void OnSpawnedFromPool() Remarks This should handle everything, including enabling the UnityEngine.GameObject . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ReturnToPool() Return the item to the IManagedPool which it is associated too. Declaration void ReturnToPool() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source SetParentPool(IManagedPool) Set the IManagedPool which this item believes it belongs too. Declaration void SetParentPool(IManagedPool targetManagedPool) Parameters Type Name Description IManagedPool targetManagedPool The parent IManagedPool . Remarks This is used during creation to assign the parent that is creating the item. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Collections.Pooling.IManagedPool.html": {
    "href": "api/GDX.Collections.Pooling.IManagedPool.html",
    "title": "Interface IManagedPool | GDX",
    "keywords": "Interface IManagedPool An interface describing the functionality needed for a pool to be understood by ManagedPools . Namespace : GDX.Collections.Pooling Syntax public interface IManagedPool Methods | Improve this Doc View Source CreateItem() Create a pooled item and add it to the IManagedPool . Declaration void CreateItem() | Improve this Doc View Source ForceRemove(Object) Remove an item from an IManagedPool immediately, removing it from tracking and not calling any actions on it. Declaration void ForceRemove(object item) Parameters Type Name Description System.Object item The target System.Object to attempt to remove. | Improve this Doc View Source Get(Boolean) Get the next available item from an IManagedPool . Declaration object Get(bool triggerOnSpawnedFromPool = true) Parameters Type Name Description System.Boolean triggerOnSpawnedFromPool Returns Type Description System.Object An item if available, otherwise null. | Improve this Doc View Source GetBaseObject() Return the System.Object which the pool is built from. Declaration object GetBaseObject() Returns Type Description System.Object The System.Object the IManagedPool is modelled around. | Improve this Doc View Source GetKey() Get the unique identifier for the IManagedPool . Declaration uint GetKey() Returns Type Description System.UInt32 A unique identifier. | Improve this Doc View Source HasMinimumPooledItems() Does the IManagedPool contain the minimum number of items. Declaration bool HasMinimumPooledItems() Returns Type Description System.Boolean true/false if enough items are found contained in the IManagedPool . | Improve this Doc View Source IsAllowedManagedTearDown() Should the IManagedPool destroy itself when ManagedPools requests a tear down? Declaration bool IsAllowedManagedTearDown() Returns Type Description System.Boolean true/false if flagged to allow for managed tear down / clean up. | Improve this Doc View Source IsManaged(Object) Is the item managed by this IManagedPool ? Declaration bool IsManaged(object item) Parameters Type Name Description System.Object item The System.Object to evaluate. Returns Type Description System.Boolean true/false if the item is managed by the IManagedPool . | Improve this Doc View Source IsPooled(Object) Is the provided item found in the IManagedPool 's internal available pool of objects? Declaration bool IsPooled(object item) Parameters Type Name Description System.Object item The item to evaluate. Returns Type Description System.Boolean | Improve this Doc View Source Return(Object) Return the item to the IManagedPool 's internal collection. Declaration void Return(object item) Parameters Type Name Description System.Object item The item to return to the IManagedPool . | Improve this Doc View Source ReturnAll(Boolean) Return all spawned System.Object s to the IManagedPool . Declaration void ReturnAll(bool shouldShrink = true) Parameters Type Name Description System.Boolean shouldShrink Should the IManagedPool be shrunk to its original maximum size? Remarks Shrinking the pools helps with pools that have grown out of necessity past their maximum size | Improve this Doc View Source TearDown() Destroy all System.Object s associated with the IManagedPool . Declaration void TearDown()"
  },
  "api/GDX.Collections.Pooling.JaggedArrayWithCount-1.html": {
    "href": "api/GDX.Collections.Pooling.JaggedArrayWithCount-1.html",
    "title": "Struct JaggedArrayWithCount<T> | GDX",
    "keywords": "Struct JaggedArrayWithCount<T> Namespace : GDX.Collections.Pooling Syntax public struct JaggedArrayWithCount<T> Type Parameters Name Description T Fields | Improve this Doc View Source Count Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source Pool Declaration public T[][] Pool Field Value Type Description T[][]"
  },
  "api/GDX.Collections.Pooling.ManagedPoolBuilder.html": {
    "href": "api/GDX.Collections.Pooling.ManagedPoolBuilder.html",
    "title": "Class ManagedPoolBuilder | GDX",
    "keywords": "Class ManagedPoolBuilder A time-slicing builder behaviour for IManagedPool . Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ManagedPoolBuilder Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag Namespace : GDX.Collections.Pooling Syntax public class ManagedPoolBuilder : MonoBehaviour Remarks A demonstration of usage can be found in GameObjectPool . Fields | Improve this Doc View Source DestroyBuilderOnFinish Should the ManagedPoolBuilder destroy itself when finished? Declaration public static bool DestroyBuilderOnFinish Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source InstantiatesPerFrame The number of instantiates to make per frame. Declaration public static int InstantiatesPerFrame Field Value Type Description System.Int32 Remarks During defined loading periods this value could be increased for faster allocations, and then returned to a much more performant value afterwards. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source AddManagedPool(IManagedPool) Add an IManagedPool to the builder to be built out. Declaration public static void AddManagedPool(IManagedPool targetManagedPool) Parameters Type Name Description IManagedPool targetManagedPool The IManagedPool to build out. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source RemoveManagedPool(IManagedPool) Remove an IManagedPool from the builder. Declaration public static void RemoveManagedPool(IManagedPool targetManagedPool) Parameters Type Name Description IManagedPool targetManagedPool The IManagedPool to be removed. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Extension Methods MonoBehaviourExtensions.GetFirstComponentInChildrenComplex<T>(MonoBehaviour, Boolean, Boolean, Int32)"
  },
  "api/GDX.Collections.Pooling.ManagedPools.html": {
    "href": "api/GDX.Collections.Pooling.ManagedPools.html",
    "title": "Class ManagedPools | GDX",
    "keywords": "Class ManagedPools A managed pooling system implementation primarily meant for the object oriented patterns, based on the C# base object. Inheritance System.Object ManagedPools Namespace : GDX.Collections.Pooling Syntax [VisualScriptingCompatible((short)1)] public static class ManagedPools Methods | Improve this Doc View Source GetNextPoolKey() Get the next available pool key. Declaration public static uint GetNextPoolKey() Returns Type Description System.UInt32 A unique pool identifying key. Remarks Increments the previously issued stored value, and returns the new value. | Improve this Doc View Source GetPool(UInt32) Get a registered IManagedPool based on its key . Declaration public static IManagedPool GetPool(uint key) Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description IManagedPool An IManagedPool identified by the provided key . | Improve this Doc View Source GetPool<T>(UInt32) Get a registered IManagedPool based on its key . Declaration public static T GetPool<T>(uint key) Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description T A type casted pool identified by the provided key . Type Parameters Name Description T The type of the pool, used to cast the return pool | Improve this Doc View Source GetPoolWithContainsCheck(UInt32) Get a registered IManagedPool based on its key , first checking if it is registered. Declaration public static IManagedPool GetPoolWithContainsCheck(uint key) Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description IManagedPool An IManagedPool identified by the provided key , null if not found. | Improve this Doc View Source GetPoolWithContainsCheck<T>(UInt32) Get a registered IManagedPool based on its key , first checking if it is registered. Declaration public static T GetPoolWithContainsCheck<T>(uint key) where T : class Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description T A type casted pool identified by the provided key , null if not found. Type Parameters Name Description T The type of the pool, used to cast the return pool | Improve this Doc View Source HasPool(UInt32) Is an IManagedPool registered with the provided key ? Declaration public static bool HasPool(uint key) Parameters Type Name Description System.UInt32 key A unique pool key Returns Type Description System.Boolean true if a pool is found registered with this system, false otherwise. | Improve this Doc View Source Register(IManagedPool) Register a IManagedPool with the global management system. Declaration public static void Register(IManagedPool managedPool) Parameters Type Name Description IManagedPool managedPool Target IManagedPool | Improve this Doc View Source ReturnAll(Boolean) Attempts to return all spawned items to their original IManagedPool s. Declaration public static void ReturnAll(bool shouldShrink = true) Parameters Type Name Description System.Boolean shouldShrink Should the pool be shrunk (destroying created items) to its original set minimum size? | Improve this Doc View Source TearDown(Boolean) Execute TearDown() (destroying contents) on all registered IManagedPool which have been flagged to accept it, evaluated by IsAllowedManagedTearDown() . Declaration public static void TearDown(bool forceAll = false) Parameters Type Name Description System.Boolean forceAll Execute TearDown() regardless of the IsAllowedManagedTearDown() response. Remarks This will unregister the IManagedPool itself as well. | Improve this Doc View Source TryGetFirstPool(Object, out IManagedPool) Attempt to get an IManagedPool based on the baseObject . Declaration public static bool TryGetFirstPool(object baseObject, out IManagedPool pool) Parameters Type Name Description System.Object baseObject The System.Object which was used to create the pool. IManagedPool pool The first found IManagedPool created with baseObject . Returns Type Description System.Boolean true/false if an IManagedPool was found. | Improve this Doc View Source Unregister(IManagedPool) Unregister a IManagedPool from with the management system. Declaration public static void Unregister(IManagedPool managedPool) Parameters Type Name Description IManagedPool managedPool Target IManagedPool"
  },
  "api/GDX.Collections.Pooling.SimpleListManagedPool.html": {
    "href": "api/GDX.Collections.Pooling.SimpleListManagedPool.html",
    "title": "Class SimpleListManagedPool | GDX",
    "keywords": "Class SimpleListManagedPool A System.Object SimpleList<T> backed pool implementation. Inheritance System.Object SimpleListManagedPool Implements IManagedPool Namespace : GDX.Collections.Pooling Syntax public sealed class SimpleListManagedPool : IManagedPool Constructors | Improve this Doc View Source SimpleListManagedPool(Object, Func<SimpleListManagedPool, Object>, Int32, Int32, Object, Boolean, Boolean, Boolean, Boolean) Create a SimpleListManagedPool . Declaration public SimpleListManagedPool(object baseObject, Func<SimpleListManagedPool, object> createItemFunc, int minimumObjects = 10, int maximumObjects = 50, object containerObject = null, bool prewarmPool = true, bool allowCreateMore = true, bool allowReuseWhenCapped = false, bool allowManagedTearDown = false) Parameters Type Name Description System.Object baseObject The object which going to be cloned. System.Func < SimpleListManagedPool , System.Object > createItemFunc The function used to create new items for the pool. System.Int32 minimumObjects The minimum number of objects to be managed by the pool. System.Int32 maximumObjects The maximum number of objects to be managed by the pool. System.Object containerObject A reference to an object which should be used as the container for created items. System.Boolean prewarmPool Should this pool create its items during the constructor? System.Boolean allowCreateMore Can more items be created as needed when starved for items? System.Boolean allowReuseWhenCapped Should we reuse oldest items when starving for items? System.Boolean allowManagedTearDown Does the pool allow a managed tear down event call? Fields | Improve this Doc View Source BaseObject The object which the pool is based off of, used as a model when creating new items. Declaration public readonly object BaseObject Field Value Type Description System.Object | Improve this Doc View Source ContainerObject The object which serves as a container for all objects of the pool. Declaration public readonly object ContainerObject Field Value Type Description System.Object Remarks Used more by implementations of pools, then this base class. | Improve this Doc View Source Flags A BitArray8 used to store pool based flags, as well as provide additional spots for implementations. Declaration public BitArray8 Flags Field Value Type Description BitArray8 Remarks Index 0-3 ( GDX.Collections.Pooling.SimpleListManagedPool.k_AllowCreateMoreFlag , GDX.Collections.Pooling.SimpleListManagedPool.k_AllowManagedTeardownFlag , GDX.Collections.Pooling.SimpleListManagedPool.k_AllowReuseFlag , and GDX.Collections.Pooling.SimpleListManagedPool.k_PrewarmPoolFlag ) are used by the SimpleListManagedPool itself, leaving 4-7 for additional use. | Improve this Doc View Source InCachedCount A cached count of the number of items contained in InItems . Declaration public int InCachedCount Field Value Type Description System.Int32 | Improve this Doc View Source InItems A collection of items that are currently contained in the pool for use when spawning items upon request. Declaration public SimpleList<object> InItems Field Value Type Description SimpleList < System.Object > | Improve this Doc View Source OnDestroyItem A delegate call made when an item is destroyed by the SimpleListManagedPool . Declaration public Action<object> OnDestroyItem Field Value Type Description System.Action < System.Object > | Improve this Doc View Source OnReturnedToPool A delegate call made when an item is returned to the SimpleListManagedPool . Declaration public Action<SimpleListManagedPool, object> OnReturnedToPool Field Value Type Description System.Action < SimpleListManagedPool , System.Object > | Improve this Doc View Source OnSpawnedFromPool A delegate call made when an item is spawned from the SimpleListManagedPool . Declaration public Action<SimpleListManagedPool, object> OnSpawnedFromPool Field Value Type Description System.Action < SimpleListManagedPool , System.Object > | Improve this Doc View Source OnTearDown A delegate call made when a pool is tearing down, before the items are pooled. Declaration public Action<SimpleListManagedPool> OnTearDown Field Value Type Description System.Action < SimpleListManagedPool > | Improve this Doc View Source OutCachedCount A cached count of the number of items contained in GDX.Collections.Pooling.SimpleListManagedPool.m_OutItems . Declaration public int OutCachedCount Field Value Type Description System.Int32 Methods | Improve this Doc View Source CreateItem() Create a pooled item and add it to the IManagedPool . Declaration public void CreateItem() | Improve this Doc View Source Finalize() The SimpleListManagedPool destructor which unregisters itself from ManagedPools . Declaration protected void Finalize() | Improve this Doc View Source ForceRemove(Object) Remove an item from an IManagedPool immediately, removing it from tracking and not calling any actions on it. Declaration public void ForceRemove(object item) Parameters Type Name Description System.Object item The target System.Object to attempt to remove. | Improve this Doc View Source Get(Boolean) Get the next available item from an IManagedPool . Declaration public object Get(bool triggerOnSpawnedFromPool = true) Parameters Type Name Description System.Boolean triggerOnSpawnedFromPool Returns Type Description System.Object An item if available, otherwise null. | Improve this Doc View Source GetBaseObject() Return the System.Object which the pool is built from. Declaration public object GetBaseObject() Returns Type Description System.Object The System.Object the IManagedPool is modelled around. | Improve this Doc View Source GetKey() Get the unique identifier for the IManagedPool . Declaration public uint GetKey() Returns Type Description System.UInt32 A unique identifier. | Improve this Doc View Source HasMinimumPooledItems() Does the IManagedPool contain the minimum number of items. Declaration public bool HasMinimumPooledItems() Returns Type Description System.Boolean true/false if enough items are found contained in the IManagedPool . | Improve this Doc View Source IsAllowedManagedTearDown() Should the IManagedPool destroy itself when ManagedPools requests a tear down? Declaration public bool IsAllowedManagedTearDown() Returns Type Description System.Boolean true/false if flagged to allow for managed tear down / clean up. | Improve this Doc View Source IsManaged(Object) Is the item managed by this IManagedPool ? Declaration public bool IsManaged(object item) Parameters Type Name Description System.Object item The System.Object to evaluate. Returns Type Description System.Boolean true/false if the item is managed by the IManagedPool . | Improve this Doc View Source IsPooled(Object) Is the provided item found in the IManagedPool 's internal available pool of objects? Declaration public bool IsPooled(object item) Parameters Type Name Description System.Object item The item to evaluate. Returns Type Description System.Boolean | Improve this Doc View Source Return(Object) Return the item to the IManagedPool 's internal collection. Declaration public void Return(object item) Parameters Type Name Description System.Object item The item to return to the IManagedPool . | Improve this Doc View Source ReturnAll(Boolean) Return all spawned System.Object s to the IManagedPool . Declaration public void ReturnAll(bool shouldShrink = true) Parameters Type Name Description System.Boolean shouldShrink Should the IManagedPool be shrunk to its original maximum size? Remarks Shrinking the pools helps with pools that have grown out of necessity past their maximum size | Improve this Doc View Source TearDown() Destroy all System.Object s associated with the IManagedPool . Declaration public void TearDown() Implements IManagedPool"
  },
  "api/GDX.Collections.SparseSet.html": {
    "href": "api/GDX.Collections.SparseSet.html",
    "title": "Struct SparseSet | GDX",
    "keywords": "Struct SparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. Namespace : GDX.Collections Syntax public struct SparseSet Constructors | Improve this Doc View Source SparseSet(Int32) Create a SparseSet with an initialCapacity . Declaration public SparseSet(int initialCapacity) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the sparse and dense int arrays. Fields | Improve this Doc View Source Count How many indices are being used currently? Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source DenseArray Holds references to the sparse array for swapping indices. Declaration public int[] DenseArray Field Value Type Description System.Int32 [] | Improve this Doc View Source FreeIndex The first free (currently unused) index in the sparse array. Declaration public int FreeIndex Field Value Type Description System.Int32 | Improve this Doc View Source SparseArray Holds references to dense array indices. Declaration public int[] SparseArray Field Value Type Description System.Int32 [] Remarks Its own indices are claimed and freed via a free-list. Methods | Improve this Doc View Source AddUnchecked(out Int32, out Int32) Adds a sparse/dense index pair to the set without checking if the set needs to expand. Declaration public void AddUnchecked(out int sparseIndex, out int denseIndex) Parameters Type Name Description System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. | Improve this Doc View Source AddUnchecked<T0>(T0, T0[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0>(T0 obj0, T0[] array0) Parameters Type Name Description T0 obj0 T0[] array0 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 | Improve this Doc View Source AddUnchecked<T0, T1>(T0, T0[], T1, T1[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1>(T0 obj0, T0[] array0, T1 obj1, T1[] array1) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 | Improve this Doc View Source AddUnchecked<T0, T1, T2>(T0, T0[], T1, T1[], T2, T2[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3>(T0, T0[], T1, T1[], T2, T2[], T3, T3[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4, T5>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[], T5, T5[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4, T5>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4, T5 obj5, T5[] array5) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 T5 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4, T5, T6>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[], T5, T5[], T6, T6[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4, T5, T6>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4, T5 obj5, T5[] array5, T6 obj6, T6[] array6) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[], T5, T5[], T6, T6[], T7, T7[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4, T5 obj5, T5[] array5, T6 obj6, T6[] array6, T7 obj7, T7[] array7) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 T7 obj7 T7[] array7 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, out Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck(int expandBy, out int sparseIndex, out int denseIndex) Parameters Type Name Description System.Int32 expandBy How many indices to expand by. System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. Returns Type Description System.Boolean True if the index pool expanded. | Improve this Doc View Source AddWithExpandCheck<T0>(T0, ref T0[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0>(T0 obj0, ref T0[] array0, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 | Improve this Doc View Source AddWithExpandCheck<T0, T1>(T0, ref T0[], T1, ref T1[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2>(T0, ref T0[], T1, ref T1[], T2, ref T2[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4, T5>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], T5, ref T5[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4, T5>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, T5 obj5, ref T5[] array5, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 T5 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], T5, ref T5[], T6, ref T6[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, T5 obj5, ref T5[] array5, T6 obj6, ref T6[] array6, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6, T7>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], T5, ref T5[], T6, ref T6[], T7, ref T7[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6, T7>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, T5 obj5, ref T5[] array5, T6 obj6, ref T6[] array6, T7 obj7, ref T7[] array7, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 T7 obj7 T7[] array7 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Clear() Clear the dense and sparse arrays. Declaration public void Clear() | Improve this Doc View Source Clear(UInt64[]) Clear the dense and sparse arrays. Declaration public void Clear(ulong[] versionArray) Parameters Type Name Description System.UInt64 [] versionArray Array containing version numbers to check against. | Improve this Doc View Source Expand(Int32) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. | Improve this Doc View Source Expand(Int32, ref UInt64[]) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity, ref ulong[] versionArray) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. System.UInt64 [] versionArray Array containing version numbers to check against. | Improve this Doc View Source GetDenseIndexUnchecked(Int32) Gets the value of the sparse array at the given index without any data validation. Declaration public int GetDenseIndexUnchecked(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index to check in the sparse array. Returns Type Description System.Int32 The dense index at the given sparse index. | Improve this Doc View Source GetDenseIndexWithBoundsAndVersionCheck(Int32, UInt64, UInt64[]) Gets the value of the sparse array at the given index, or -1 if the given sparse index is invalid.. Declaration public int GetDenseIndexWithBoundsAndVersionCheck(int sparseIndex, ulong version, ulong[] versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. System.UInt64 [] versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithBoundsCheck(Int32) Gets the value of the sparse array at the given index, or -1 if the dense and sparse indices don't point to each other or if the dense index is outside the dense bounds. Declaration public int GetDenseIndexWithBoundsCheck(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithVersionCheck(Int32, UInt64, UInt64[]) Gets the value of the sparse array at the given index, or -1 if the version number does not match. Declaration public int GetDenseIndexWithVersionCheck(int sparseIndex, ulong version, ulong[] versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. System.UInt64 [] versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source RemoveUnchecked(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUnchecked(int sparseIndexToRemove) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. | Improve this Doc View Source RemoveUnchecked(Int32, out Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, out int indexToSwapTo, out int indexToSwapFrom) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. | Improve this Doc View Source RemoveUnchecked(Int32, UInt64[]) Removes the associated sparse/dense index pair from active use and increments the version. Declaration public void RemoveUnchecked(int sparseIndexToRemove, ulong[] versionArray) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. | Improve this Doc View Source RemoveUnchecked(Int32, UInt64[], out Int32, out Int32) Removes the associated sparse/dense index pair from active use and increments the version. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, ulong[] versionArray, out int indexToSwapTo, out int indexToSwapFrom) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. | Improve this Doc View Source RemoveUnchecked<T0>(Int32, T0[]) Declaration public void RemoveUnchecked<T0>(int sparseIndexToRemove, T0[] array0) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 Type Parameters Name Description T0 | Improve this Doc View Source RemoveUnchecked<T0, T1>(Int32, T0[], T1[]) Declaration public void RemoveUnchecked<T0, T1>(int sparseIndexToRemove, T0[] array0, T1[] array1) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 Type Parameters Name Description T0 T1 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2>(Int32, T0[], T1[], T2[]) Declaration public void RemoveUnchecked<T0, T1, T2>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 Type Parameters Name Description T0 T1 T2 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3>(Int32, T0[], T1[], T2[], T3[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 Type Parameters Name Description T0 T1 T2 T3 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4>(Int32, T0[], T1[], T2[], T3[], T4[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 Type Parameters Name Description T0 T1 T2 T3 T4 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4, T5>(Int32, T0[], T1[], T2[], T3[], T4[], T5[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4, T5>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4, T5[] array5) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 T5[] array5 Type Parameters Name Description T0 T1 T2 T3 T4 T5 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6>(Int32, T0[], T1[], T2[], T3[], T4[], T5[], T6[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4, T5[] array5, T6[] array6) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 T5[] array5 T6[] array6 Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(Int32, T0[], T1[], T2[], T3[], T4[], T5[], T6[], T7[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4, T5[] array5, T6[] array6, T7[] array7) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 T5[] array5 T6[] array6 T7[] array7 Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, UInt64[]) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, ulong[] versionArray) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, UInt64[], out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, ulong[] versionArray, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveWithBoundsAndVersionChecks(ref Int32, UInt64, ref UInt64[]) Removes the associated sparse/dense index pair from active use. calls. Declaration public bool RemoveWithBoundsAndVersionChecks(ref int sparseIndexToRemove, ulong version, ref ulong[] versionArray) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. System.UInt64 [] versionArray The array where version numbers to check against are stored. Returns Type Description System.Boolean True if the element was successfully removed. | Improve this Doc View Source RemoveWithNullValueCheck(ref Int32) Returns true if the element was successfully removed. WARNING: Will not protect against accidentally removing twice if the index in question was recycled between Remove calls. Declaration public bool RemoveWithNullValueCheck(ref int sparseIndexToRemove) Parameters Type Name Description System.Int32 sparseIndexToRemove Returns Type Description System.Boolean | Improve this Doc View Source Reserve(Int32) Declaration public void Reserve(int numberToReserve) Parameters Type Name Description System.Int32 numberToReserve | Improve this Doc View Source Reserve(Int32, ref UInt64[]) Declaration public void Reserve(int numberToReserve, ref ulong[] versionArray) Parameters Type Name Description System.Int32 numberToReserve System.UInt64 [] versionArray | Improve this Doc View Source TryRemoveFromDenseIndexWithVersionCheck(Int32, UInt64, UInt64[]) Attempts to remove the associated sparse/dense index pair from active use and increments the version if successful. Declaration public bool TryRemoveFromDenseIndexWithVersionCheck(int denseIndexToRemove, ulong version, ulong[] versionArray) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. System.UInt64 version The array where version numbers to check against are stored. System.UInt64 [] versionArray The array where version numbers to check against are stored. Returns Type Description System.Boolean Whether or not the remove attempt succeeded. | Improve this Doc View Source TryRemoveWithVersionCheck(Int32, UInt64, UInt64[], out Int32, out Int32) Attempts to remove the associated sparse/dense index pair from active use and increments the version if successful. Out parameters used to manage parallel data arrays. Declaration public bool TryRemoveWithVersionCheck(int sparseIndexToRemove, ulong version, ulong[] versionArray, out int indexToSwapTo, out int indexToSwapFrom) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. Returns Type Description System.Boolean Whether or not the remove attempt succeeded."
  },
  "api/GDX.Config.html": {
    "href": "api/GDX.Config.html",
    "title": "Class Config | GDX",
    "keywords": "Class Config Project-wide configuration configurable for runtime override. Inheritance System.Object Config Namespace : GDX Syntax public static class Config Fields | Improve this Doc View Source ConfigOutputPath The asset database relative path of the GDX config override file. Declaration public static string ConfigOutputPath Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoAssemblyDefinition Ensure that there is an assembly definition wrapping the generated content. Declaration public static bool DeveloperBuildInfoAssemblyDefinition Field Value Type Description System.Boolean | Improve this Doc View Source DeveloperBuildInfoBuildChangelistArgument The argument key for the build's changelist to be passed to the BuildInfoGenerator. Declaration public static string DeveloperBuildInfoBuildChangelistArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildDescriptionArgument The argument key for the build description to be passed to the BuildInfoGenerator. Declaration public static string DeveloperBuildInfoBuildDescriptionArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildNumberArgument The argument key for the build number to be passed to the BuildInfoGenerator. Declaration public static string DeveloperBuildInfoBuildNumberArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildStreamArgument The argument key for the build's stream to be passed to the BuildInfoGenerator. Declaration public static string DeveloperBuildInfoBuildStreamArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildTaskArgument The argument key for the build's task to be passed to the BuildInfoGenerator. Declaration public static string DeveloperBuildInfoBuildTaskArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoEnabled Should the BuildInfo file be written during builds? Declaration public static bool DeveloperBuildInfoEnabled Field Value Type Description System.Boolean | Improve this Doc View Source DeveloperBuildInfoNamespace The namespace where the BuildInfo should be placed. Declaration public static string DeveloperBuildInfoNamespace Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoPath The path to output the BuildInfo file. Declaration public static string DeveloperBuildInfoPath Field Value Type Description System.String | Improve this Doc View Source DeveloperCommandLineParserArgumentPrefix What should be used to denote arguments in the command line? Declaration public static string DeveloperCommandLineParserArgumentPrefix Field Value Type Description System.String | Improve this Doc View Source DeveloperCommandLineParserArgumentSplit What should be used to split arguments from their values in the command line? Declaration public static string DeveloperCommandLineParserArgumentSplit Field Value Type Description System.String | Improve this Doc View Source EnvironmentScriptingDefineSymbol Should a GDX scripting define symbol be added to all target build groups. Declaration public static bool EnvironmentScriptingDefineSymbol Field Value Type Description System.Boolean | Improve this Doc View Source LocalizationDefaultCulture The language to set the default thread culture too. Declaration public static Localization.Language LocalizationDefaultCulture Field Value Type Description Localization.Language | Improve this Doc View Source LocalizationSetDefaultCulture Should the default thread culture be set? Declaration public static bool LocalizationSetDefaultCulture Field Value Type Description System.Boolean | Improve this Doc View Source PlatformAutomationFolder The project relative path where automation should store its artifacts. Declaration public static string PlatformAutomationFolder Field Value Type Description System.String | Improve this Doc View Source PlatformCacheFolder The project relative path to use as a cache. Declaration public static string PlatformCacheFolder Field Value Type Description System.String | Improve this Doc View Source TraceDebugLevels What is the level of traces which should be processed and logged by GDX in debug builds? Declaration public static Trace.TraceLevel TraceDebugLevels Field Value Type Description Trace.TraceLevel | Improve this Doc View Source TraceDebugOutputToUnityConsole Should GDX based traces output to the Unity console in debug builds? Declaration public static bool TraceDebugOutputToUnityConsole Field Value Type Description System.Boolean | Improve this Doc View Source TraceDevelopmentLevels What is the level of traces which should be processed and logged by GDX in the editor or development builds? Declaration public static Trace.TraceLevel TraceDevelopmentLevels Field Value Type Description Trace.TraceLevel | Improve this Doc View Source TraceDevelopmentOutputToUnityConsole Should GDX based traces output to the Unity console in the editor or development builds? Declaration public static bool TraceDevelopmentOutputToUnityConsole Field Value Type Description System.Boolean | Improve this Doc View Source TraceReleaseLevels What is the level of traces which should be processed and logged by GDX in release builds? Declaration public static Trace.TraceLevel TraceReleaseLevels Field Value Type Description Trace.TraceLevel | Improve this Doc View Source UpdateProviderCheckForUpdates Should GDX check for updates at editor time? Declaration public static bool UpdateProviderCheckForUpdates Field Value Type Description System.Boolean"
  },
  "api/GDX.ConfigDefaults.html": {
    "href": "api/GDX.ConfigDefaults.html",
    "title": "Class ConfigDefaults | GDX",
    "keywords": "Class ConfigDefaults The default values used by Config . Inheritance System.Object ConfigDefaults Namespace : GDX Syntax public static class ConfigDefaults Fields | Improve this Doc View Source ConfigOutputPath The asset database relative path of the GDX config override file. Declaration public const string ConfigOutputPath = \"Generated/GDX.generated.cs\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoAssemblyDefinition Ensure that there is an assembly definition wrapping the generated content. Declaration public const bool DeveloperBuildInfoAssemblyDefinition = true Field Value Type Description System.Boolean | Improve this Doc View Source DeveloperBuildInfoBuildChangelistArgument The argument key for the build's changelist to be passed to the BuildInfoGenerator. Declaration public const string DeveloperBuildInfoBuildChangelistArgument = \"BUILD_CHANGELIST\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildDescriptionArgument The argument key for the build description to be passed to the BuildInfoGenerator. Declaration public const string DeveloperBuildInfoBuildDescriptionArgument = \"BUILD_DESC\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildNumberArgument The argument key for the build number to be passed to the BuildInfoGenerator. Declaration public const string DeveloperBuildInfoBuildNumberArgument = \"BUILD\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildStreamArgument The argument key for the build's stream to be passed to the BuildInfoGenerator. Declaration public const string DeveloperBuildInfoBuildStreamArgument = \"BUILD_STREAM\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildTaskArgument The argument key for the build's task to be passed to the BuildInfoGenerator. Declaration public const string DeveloperBuildInfoBuildTaskArgument = \"BUILD_TASK\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoEnabled Should the BuildInfo file be written during builds? Declaration public const bool DeveloperBuildInfoEnabled = false Field Value Type Description System.Boolean | Improve this Doc View Source DeveloperBuildInfoNamespace The namespace where the BuildInfo should be placed. Declaration public const string DeveloperBuildInfoNamespace = \"Generated.Build\" Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoPath The path to output the BuildInfo file. Declaration public const string DeveloperBuildInfoPath = \"Generated/Build/BuildInfo.cs\" Field Value Type Description System.String | Improve this Doc View Source DeveloperCommandLineParserArgumentPrefix What should be used to denote arguments in the command line? Declaration public const string DeveloperCommandLineParserArgumentPrefix = \"--\" Field Value Type Description System.String | Improve this Doc View Source DeveloperCommandLineParserArgumentSplit What should be used to split arguments from their values in the command line? Declaration public const string DeveloperCommandLineParserArgumentSplit = \"=\" Field Value Type Description System.String | Improve this Doc View Source EnvironmentScriptingDefineSymbol Should a GDX scripting define symbol be added to all target build groups. Declaration public const bool EnvironmentScriptingDefineSymbol = false Field Value Type Description System.Boolean | Improve this Doc View Source LocalizationDefaultCulture The language to set the default thread culture too. Declaration public const Localization.Language LocalizationDefaultCulture = Localization.Language.English Field Value Type Description Localization.Language | Improve this Doc View Source LocalizationSetDefaultCulture Should the default thread culture be set? Declaration public const bool LocalizationSetDefaultCulture = true Field Value Type Description System.Boolean | Improve this Doc View Source PlatformAutomationFolder The project relative path where automation should store its artifacts. Declaration public const string PlatformAutomationFolder = \"GDX_Automation\" Field Value Type Description System.String | Improve this Doc View Source PlatformCacheFolder The project relative path to use as a cache. Declaration public const string PlatformCacheFolder = \"GDX_Cache\" Field Value Type Description System.String | Improve this Doc View Source TraceDebugLevels What is the level of traces which should be processed and logged by GDX in debug builds? Declaration public const Trace.TraceLevel TraceDebugLevels = Trace.TraceLevel.Warning | Trace.TraceLevel.Error | Trace.TraceLevel.Exception | Trace.TraceLevel.Assertion Field Value Type Description Trace.TraceLevel | Improve this Doc View Source TraceDebugOutputToUnityConsole Should GDX based traces output to the Unity console in debug builds? Declaration public const bool TraceDebugOutputToUnityConsole = true Field Value Type Description System.Boolean | Improve this Doc View Source TraceDevelopmentLevels What is the level of traces which should be processed and logged by GDX in the editor or development builds? Declaration public const Trace.TraceLevel TraceDevelopmentLevels = Trace.TraceLevel.Log | Trace.TraceLevel.Warning | Trace.TraceLevel.Error | Trace.TraceLevel.Exception | Trace.TraceLevel.Assertion | Trace.TraceLevel.Fatal Field Value Type Description Trace.TraceLevel | Improve this Doc View Source TraceDevelopmentOutputToUnityConsole Should GDX based traces output to the Unity console in the editor or development builds? Declaration public const bool TraceDevelopmentOutputToUnityConsole = true Field Value Type Description System.Boolean | Improve this Doc View Source TraceReleaseLevels What is the level of traces which should be processed and logged by GDX in release builds? Declaration public const Trace.TraceLevel TraceReleaseLevels = Trace.TraceLevel.Fatal Field Value Type Description Trace.TraceLevel | Improve this Doc View Source UpdateProviderCheckForUpdates Should GDX check for updates at editor time? Declaration public const bool UpdateProviderCheckForUpdates = true Field Value Type Description System.Boolean"
  },
  "api/GDX.Core.html": {
    "href": "api/GDX.Core.html",
    "title": "Class Core | GDX",
    "keywords": "Class Core Inheritance System.Object Core Namespace : GDX Syntax public static class Core Fields | Improve this Doc View Source OverrideClass Declaration public const string OverrideClass = \"CustomConfig\" Field Value Type Description System.String | Improve this Doc View Source OverrideMethod Declaration public const string OverrideMethod = \"Init\" Field Value Type Description System.String | Improve this Doc View Source PerformanceCategory Declaration public const string PerformanceCategory = \"GDX.Performance\" Field Value Type Description System.String | Improve this Doc View Source Random A pseudorandom number generated seeded with StartTicks . Declaration public static WELL1024a Random Field Value Type Description WELL1024a Remarks Useful for generic randomness where determinism is not required. | Improve this Doc View Source StartTicks The point in tick based time when the core was initialized. Declaration public static readonly long StartTicks Field Value Type Description System.Int64 | Improve this Doc View Source TestCategory Declaration public const string TestCategory = \"GDX.Tests\" Field Value Type Description System.String Methods | Improve this Doc View Source InitializeOnMainThread() Main-thread initializer. Declaration [InitializeOnLoadMethod] public static void InitializeOnMainThread()"
  },
  "api/GDX.Developer.CommandLineParser.html": {
    "href": "api/GDX.Developer.CommandLineParser.html",
    "title": "Class CommandLineParser | GDX",
    "keywords": "Class CommandLineParser A simplified commandline parser that handles arguments which follow the --FLAG or --KEY=VALUE format. Automatically initialized during normal runtime operations, however can be manually triggered for author time use cases as well. Inheritance System.Object CommandLineParser Namespace : GDX.Developer Syntax public static class CommandLineParser Remarks The prefix and divider are configurable via the Config , however the always, the FLAG and KEY will be Uppercase. Fields | Improve this Doc View Source Arguments The processed arguments found after parsing the arguments Declaration public static StringKeyDictionary<string> Arguments Field Value Type Description StringKeyDictionary < System.String > | Improve this Doc View Source Flags The processed flags found in the arguments. Declaration public static readonly List<string> Flags Field Value Type Description System.Collections.Generic.List < System.String > Methods | Improve this Doc View Source ProcessArguments(String[], Boolean) Process an array of arguments into Arguments and Flags . Declaration public static void ProcessArguments(string[] argumentArray, bool shouldClear = true) Parameters Type Name Description System.String [] argumentArray An array of arguments to process. System.Boolean shouldClear Should the storage containers be cleared."
  },
  "api/GDX.Developer.Conditionals.html": {
    "href": "api/GDX.Developer.Conditionals.html",
    "title": "Class Conditionals | GDX",
    "keywords": "Class Conditionals Constant indicators about conditional supports within the GDX package. Helpful indicators of which features are available through preprocessor gating. Inheritance System.Object Conditionals Namespace : GDX.Developer Syntax public static class Conditionals Fields | Improve this Doc View Source HasAddressablesPackage Is a compatible version of the Addressables package present in the project? Declaration public const bool HasAddressablesPackage = true Field Value Type Description System.Boolean | Improve this Doc View Source HasPlatformsPackage Is a compatible version of the Platforms package present in the project? Declaration public const bool HasPlatformsPackage = true Field Value Type Description System.Boolean | Improve this Doc View Source HasVisualScriptingPackage Is a compatible version of the Visual Scripting package present in the project? Declaration public const bool HasVisualScriptingPackage = true Field Value Type Description System.Boolean"
  },
  "api/GDX.Developer.html": {
    "href": "api/GDX.Developer.html",
    "title": "Namespace GDX.Developer | GDX",
    "keywords": "Namespace GDX.Developer Classes CommandLineParser A simplified commandline parser that handles arguments which follow the --FLAG or --KEY=VALUE format. Automatically initialized during normal runtime operations, however can be manually triggered for author time use cases as well. Conditionals Constant indicators about conditional supports within the GDX package. Helpful indicators of which features are available through preprocessor gating. Profiling A set of functionality useful for creating profiling data to reason about the performance of an application. TextGenerator A formatted text generator useful for creating text based files with some semblance of organization. WaitForMilliseconds"
  },
  "api/GDX.Developer.Profiling.html": {
    "href": "api/GDX.Developer.Profiling.html",
    "title": "Class Profiling | GDX",
    "keywords": "Class Profiling A set of functionality useful for creating profiling data to reason about the performance of an application. Inheritance System.Object Profiling Namespace : GDX.Developer Syntax public class Profiling Methods | Improve this Doc View Source StartProfiling(String, Boolean) Setup a profiling session used during an import. This will create a binary file when finished profiling. Declaration public static void StartProfiling(string prefix = null, bool manageProfiles = true) Parameters Type Name Description System.String prefix Optional descriptor for profile run used in filename. System.Boolean manageProfiles Should the number of profiles be managed. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source StopProfiling() Finalize a profiling session during an import. Declaration public static void StopProfiling() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TakeMemorySnapshot(String, Action<String, Boolean>, CaptureFlags, Boolean) Take a memory snapshot and save it to GetOutputFolder(String) . Declaration public static void TakeMemorySnapshot(string prefix = null, Action<string, bool> finishCallback = null, CaptureFlags captureFlags = CaptureFlags.ManagedObjects | CaptureFlags.NativeObjects | CaptureFlags.NativeAllocations | CaptureFlags.NativeAllocationSites | CaptureFlags.NativeStackTraces, bool manageCaptures = true) Parameters Type Name Description System.String prefix Override the default prefix GDX.Developer.Profiling.k_MemoryCaptureFilePrefix . System.Action < System.String , System.Boolean > finishCallback Optional callback action once the memory capture has been made. UnityEngine.Profiling.Memory.Experimental.CaptureFlags captureFlags Override of the memory capture flags, defaults to GDX.Developer.Profiling.k_AllCaptureFlags . System.Boolean manageCaptures Should the number of captures found in the output folder be managed? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.BuildVerification.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.html",
    "title": "Namespace GDX.Developer.Reports.BuildVerification | GDX",
    "keywords": "Namespace GDX.Developer.Reports.BuildVerification Classes SimpleTestBehaviour TestRunner Interfaces ITestBehaviour A build verification test behaviour interface."
  },
  "api/GDX.Developer.Reports.BuildVerification.ITestBehaviour.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.ITestBehaviour.html",
    "title": "Interface ITestBehaviour | GDX",
    "keywords": "Interface ITestBehaviour A build verification test behaviour interface. Namespace : GDX.Developer.Reports.BuildVerification Syntax public interface ITestBehaviour Methods | Improve this Doc View Source Check() Declaration TestCase Check() Returns Type Description TestCase | Improve this Doc View Source GetIdentifier() Get some semblance of identifiable information for a test. Declaration string GetIdentifier() Returns Type Description System.String The System.String identifier for the test. | Improve this Doc View Source Setup() Setup for the test. Declaration void Setup() | Improve this Doc View Source TearDown() Tear down after the test. Declaration void TearDown()"
  },
  "api/GDX.Developer.Reports.BuildVerification.SimpleTestBehaviour.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.SimpleTestBehaviour.html",
    "title": "Class SimpleTestBehaviour | GDX",
    "keywords": "Class SimpleTestBehaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SimpleTestBehaviour Implements ITestBehaviour Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag Namespace : GDX.Developer.Reports.BuildVerification Syntax public abstract class SimpleTestBehaviour : MonoBehaviour, ITestBehaviour Methods | Improve this Doc View Source Check() Declaration public abstract TestCase Check() Returns Type Description TestCase | Improve this Doc View Source GetIdentifier() Declaration public abstract string GetIdentifier() Returns Type Description System.String | Improve this Doc View Source Setup() Setup for the test. Declaration public virtual void Setup() | Improve this Doc View Source TearDown() Tear down after the test. Declaration public virtual void TearDown() Implements ITestBehaviour Extension Methods MonoBehaviourExtensions.GetFirstComponentInChildrenComplex<T>(MonoBehaviour, Boolean, Boolean, Int32)"
  },
  "api/GDX.Developer.Reports.BuildVerification.TestRunner.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.TestRunner.html",
    "title": "Class TestRunner | GDX",
    "keywords": "Class TestRunner Inheritance System.Object TestRunner Namespace : GDX.Developer.Reports.BuildVerification Syntax public static class TestRunner Methods | Improve this Doc View Source AddTest(SimpleTestBehaviour) Declaration public static void AddTest(SimpleTestBehaviour simpleTest) Parameters Type Name Description SimpleTestBehaviour simpleTest | Improve this Doc View Source EvaluateTestScene(Int32, Single) Declaration public static async Task EvaluateTestScene(int sceneBuildIndex, float millisecondTimeout = 30000F) Parameters Type Name Description System.Int32 sceneBuildIndex System.Single millisecondTimeout Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source EvaluateTestScene(String, Single) Declaration public static async Task EvaluateTestScene(string scenePath, float millisecondTimeout = 30000F) Parameters Type Name Description System.String scenePath System.Single millisecondTimeout Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source RemoveTest(SimpleTestBehaviour) Declaration public static void RemoveTest(SimpleTestBehaviour simpleTest) Parameters Type Name Description SimpleTestBehaviour simpleTest | Improve this Doc View Source Reset() Declaration public static void Reset()"
  },
  "api/GDX.Developer.Reports.BuildVerificationReport.html": {
    "href": "api/GDX.Developer.Reports.BuildVerificationReport.html",
    "title": "Class BuildVerificationReport | GDX",
    "keywords": "Class BuildVerificationReport Inheritance System.Object BuildVerificationReport Namespace : GDX.Developer.Reports Syntax public static class BuildVerificationReport Methods | Improve this Doc View Source Assert(String, Boolean, String, Int32) Declaration public static TestCase Assert(string identifier, bool condition, string failMessage = null, int duration = 0) Parameters Type Name Description System.String identifier System.Boolean condition System.String failMessage System.Int32 duration Returns Type Description TestCase | Improve this Doc View Source OutputReport(String) Declaration public static string OutputReport(string outputPath) Parameters Type Name Description System.String outputPath Returns Type Description System.String | Improve this Doc View Source Panic(String) Declaration public static void Panic(string panicMessage) Parameters Type Name Description System.String panicMessage | Improve this Doc View Source Reset() Declaration public static void Reset() | Improve this Doc View Source Skip(String, String) Declaration public static TestCase Skip(string identifier, string skipMessage) Parameters Type Name Description System.String identifier System.String skipMessage Returns Type Description TestCase"
  },
  "api/GDX.Developer.Reports.html": {
    "href": "api/GDX.Developer.Reports.html",
    "title": "Namespace GDX.Developer.Reports | GDX",
    "keywords": "Namespace GDX.Developer.Reports Classes BuildVerificationReport NUnitReport ResourcesAuditReport An audit of loaded UnityEngine.Object for queried types. ResourcesDiffReport Structs ResourcesAuditReport.ResourcesQuery A structure that defines the string inputs necessary to query for loaded resources of a specific type."
  },
  "api/GDX.Developer.Reports.NUnit.html": {
    "href": "api/GDX.Developer.Reports.NUnit.html",
    "title": "Namespace GDX.Developer.Reports.NUnit | GDX",
    "keywords": "Namespace GDX.Developer.Reports.NUnit Classes Properties Property TestCase TestRun TestSuite"
  },
  "api/GDX.Developer.Reports.NUnit.Properties.html": {
    "href": "api/GDX.Developer.Reports.NUnit.Properties.html",
    "title": "Class Properties | GDX",
    "keywords": "Class Properties Inheritance System.Object Properties Namespace : GDX.Developer.Reports.NUnit Syntax public class Properties Properties | Improve this Doc View Source Property Declaration public List<Property> Property { get; set; } Property Value Type Description System.Collections.Generic.List < Property >"
  },
  "api/GDX.Developer.Reports.NUnit.Property.html": {
    "href": "api/GDX.Developer.Reports.NUnit.Property.html",
    "title": "Class Property | GDX",
    "keywords": "Class Property Inheritance System.Object Property Namespace : GDX.Developer.Reports.NUnit Syntax public class Property Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/GDX.Developer.Reports.NUnit.TestCase.html": {
    "href": "api/GDX.Developer.Reports.NUnit.TestCase.html",
    "title": "Class TestCase | GDX",
    "keywords": "Class TestCase Inheritance System.Object TestCase Namespace : GDX.Developer.Reports.NUnit Syntax public class TestCase Properties | Improve this Doc View Source Asserts Declaration public int Asserts { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ClassName Declaration public string ClassName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndTime Declaration public string EndTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source FullName Declaration public string FullName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source MethodName Declaration public string MethodName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Output Declaration public string Output { get; set; } Property Value Type Description System.String | Improve this Doc View Source Properties Declaration public Properties Properties { get; set; } Property Value Type Description Properties | Improve this Doc View Source Result Declaration public string Result { get; set; } Property Value Type Description System.String | Improve this Doc View Source RunState Declaration public string RunState { get; set; } Property Value Type Description System.String | Improve this Doc View Source Seed Declaration public string Seed { get; set; } Property Value Type Description System.String | Improve this Doc View Source StackTrace Declaration public string StackTrace { get; set; } Property Value Type Description System.String | Improve this Doc View Source StartTime Declaration public string StartTime { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetCategory() Declaration public string GetCategory() Returns Type Description System.String"
  },
  "api/GDX.Developer.Reports.NUnit.TestRun.html": {
    "href": "api/GDX.Developer.Reports.NUnit.TestRun.html",
    "title": "Class TestRun | GDX",
    "keywords": "Class TestRun Inheritance System.Object TestRun Namespace : GDX.Developer.Reports.NUnit Syntax public class TestRun Properties | Improve this Doc View Source Asserts Declaration public int Asserts { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CLRVersion Declaration public string CLRVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndTime Declaration public string EndTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source EngineVersion Declaration public string EngineVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source Failed Declaration public int Failed { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Inconclusive Declaration public int Inconclusive { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Passed Declaration public int Passed { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Result Declaration public string Result { get; } Property Value Type Description System.String | Improve this Doc View Source Skipped Declaration public int Skipped { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartTime Declaration public string StartTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source TestCaseCount Declaration public int TestCaseCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TestSuite Declaration public TestSuite TestSuite { get; } Property Value Type Description TestSuite | Improve this Doc View Source Total Declaration public int Total { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Process(String, String, String, String) Declaration public void Process(string passedResult = \"Passed\", string failedResult = \"Failed\", string inconclusiveResult = \"Inconclusive\", string skippedResult = \"Skipped\") Parameters Type Name Description System.String passedResult System.String failedResult System.String inconclusiveResult System.String skippedResult"
  },
  "api/GDX.Developer.Reports.NUnit.TestSuite.html": {
    "href": "api/GDX.Developer.Reports.NUnit.TestSuite.html",
    "title": "Class TestSuite | GDX",
    "keywords": "Class TestSuite Inheritance System.Object TestSuite Namespace : GDX.Developer.Reports.NUnit Syntax public class TestSuite Fields | Improve this Doc View Source TestCases Declaration public readonly List<TestCase> TestCases Field Value Type Description System.Collections.Generic.List < TestCase > | Improve this Doc View Source TestSuites Declaration public readonly List<TestSuite> TestSuites Field Value Type Description System.Collections.Generic.List < TestSuite > Properties | Improve this Doc View Source Asserts Declaration public int Asserts { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ClassName Declaration public string ClassName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndTime Declaration public string EndTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source Failed Declaration public int Failed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source FullName Declaration public string FullName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Inconclusive Declaration public int Inconclusive { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Label Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Passed Declaration public int Passed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Properties Declaration public Properties Properties { get; set; } Property Value Type Description Properties | Improve this Doc View Source Result Declaration public string Result { get; set; } Property Value Type Description System.String | Improve this Doc View Source RunState Declaration public string RunState { get; set; } Property Value Type Description System.String | Improve this Doc View Source Skipped Declaration public int Skipped { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StartTime Declaration public string StartTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source TestCaseCount Declaration public int TestCaseCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total Declaration public int Total { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetFailCount() Declaration public int GetFailCount() Returns Type Description System.Int32 | Improve this Doc View Source GetPassCount() Declaration public int GetPassCount() Returns Type Description System.Int32 | Improve this Doc View Source Process(String, String, String, String) Declaration public void Process(string passedResult, string failedResult, string inconclusiveResult, string skippedResult) Parameters Type Name Description System.String passedResult System.String failedResult System.String inconclusiveResult System.String skippedResult"
  },
  "api/GDX.Developer.Reports.NUnitReport.html": {
    "href": "api/GDX.Developer.Reports.NUnitReport.html",
    "title": "Class NUnitReport | GDX",
    "keywords": "Class NUnitReport Inheritance System.Object NUnitReport Namespace : GDX.Developer.Reports Syntax public class NUnitReport Constructors | Improve this Doc View Source NUnitReport(String, String, String) Declaration public NUnitReport(string name = null, string fullName = null, string className = null) Parameters Type Name Description System.String name System.String fullName System.String className Fields | Improve this Doc View Source FailedString Declaration public const string FailedString = \"Failed\" Field Value Type Description System.String | Improve this Doc View Source PassedString Declaration public const string PassedString = \"Passed\" Field Value Type Description System.String | Improve this Doc View Source SkippedString Declaration public const string SkippedString = \"Skipped\" Field Value Type Description System.String Methods | Improve this Doc View Source AddDurationResult(String, Single, Boolean, String, TestSuite) Declaration public TestCase AddDurationResult(string name, float seconds, bool passed = true, string failMessage = null, TestSuite testSuite = null) Parameters Type Name Description System.String name System.Single seconds System.Boolean passed System.String failMessage TestSuite testSuite Returns Type Description TestCase | Improve this Doc View Source AddSkippedTest(String, String, TestSuite) Declaration public TestCase AddSkippedTest(string name, string skipMessage = null, TestSuite testSuite = null) Parameters Type Name Description System.String name System.String skipMessage TestSuite testSuite Returns Type Description TestCase | Improve this Doc View Source GetResult() Declaration public string GetResult() Returns Type Description System.String | Improve this Doc View Source GetResultCount() Declaration public int GetResultCount() Returns Type Description System.Int32 | Improve this Doc View Source GetRootSuite() Declaration public TestSuite GetRootSuite() Returns Type Description TestSuite | Improve this Doc View Source Process() Declaration public void Process() | Improve this Doc View Source SetForceFail() Declaration public void SetForceFail() | Improve this Doc View Source ToString() Builds and returns the NUnit formatted report. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Remarks Can result in a UTF-16 based XML document."
  },
  "api/GDX.Developer.Reports.Resource.html": {
    "href": "api/GDX.Developer.Reports.Resource.html",
    "title": "Namespace GDX.Developer.Reports.Resource | GDX",
    "keywords": "Namespace GDX.Developer.Reports.Resource Classes ResourceReport ResourceReportContext Context for generating a ResourceReport based report."
  },
  "api/GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo.html",
    "title": "Class AssetBundleObjectInfo | GDX",
    "keywords": "Class AssetBundleObjectInfo Inheritance System.Object ObjectInfo AssetBundleObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class AssetBundleObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source AssetCount Declaration public int AssetCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsStreamedSceneAssetBundle Declaration public bool IsStreamedSceneAssetBundle Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.html",
    "title": "Namespace GDX.Developer.Reports.Resource.Objects | GDX",
    "keywords": "Namespace GDX.Developer.Reports.Resource.Objects Classes AssetBundleObjectInfo MeshObjectInfo ObjectInfo An information storage object for a target System.Object . ObjectInfoFactory ShaderObjectInfo TextureObjectInfo"
  },
  "api/GDX.Developer.Reports.Resource.Objects.MeshObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.MeshObjectInfo.html",
    "title": "Class MeshObjectInfo | GDX",
    "keywords": "Class MeshObjectInfo Inheritance System.Object ObjectInfo MeshObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class MeshObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source IsReadable Declaration public bool IsReadable Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source SubMeshCount Declaration public int SubMeshCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Triangles Declaration public int Triangles Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.MeshObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source VertexCount Declaration public int VertexCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.ObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.ObjectInfo.html",
    "title": "Class ObjectInfo | GDX",
    "keywords": "Class ObjectInfo An information storage object for a target System.Object . Inheritance System.Object ObjectInfo AssetBundleObjectInfo MeshObjectInfo ShaderObjectInfo TextureObjectInfo Implements System.IComparable Namespace : GDX.Developer.Reports.Resource.Objects Syntax public class ObjectInfo : IComparable Fields | Improve this Doc View Source CopyCount The number of copies of the Reference object known by Unity. Declaration public uint CopyCount Field Value Type Description System.UInt32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MemoryUsage The memory usage of the actual Reference object (in bytes). Declaration public long MemoryUsage Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Name The name of the Reference object. Declaration public string Name Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Reference A TransientReference to the target object. Declaration public TransientReference Reference Field Value Type Description TransientReference Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TotalMemoryUsage The total memory usage of the Reference object (in bytes). Declaration public long TotalMemoryUsage Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Type The cached Type of the Reference object. Declaration public Type Type Field Value Type Description System.Type Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition The fully qualified reflection definition of the ObjectInfo . Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.ObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public virtual ObjectInfo Clone() Returns Type Description ObjectInfo Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CompareTo(Object) Evaluate if the compared ObjectInfo utilizes more memory then this one. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj The ObjectInfo to compare against. Returns Type Description System.Int32 1 if larger, otherwise 0. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Get additional information about the specific Reference . Declaration public virtual string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String A System.String of additional information. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder, Boolean) Declaration public void Output(ResourceReportContext context, StringBuilder builder, bool stripUnicode = true) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder System.Boolean stripUnicode Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Populate an ObjectInfo from the targetObject . Optionally providing an existing reference created prior. Declaration public virtual void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject The System.Object which to cache information about. TransientReference reference An existing TransientReference targeting the targetObject . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.ObjectInfoFactory.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.ObjectInfoFactory.html",
    "title": "Class ObjectInfoFactory | GDX",
    "keywords": "Class ObjectInfoFactory Inheritance System.Object ObjectInfoFactory Namespace : GDX.Developer.Reports.Resource.Objects Syntax public static class ObjectInfoFactory Methods | Improve this Doc View Source GetObjectInfo(Type) Declaration public static ObjectInfo GetObjectInfo(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description ObjectInfo Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetObjectInfoType(Type) Declaration public static Type GetObjectInfoType(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description System.Type Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo.html",
    "title": "Class ShaderObjectInfo | GDX",
    "keywords": "Class ShaderObjectInfo Inheritance System.Object ObjectInfo ShaderObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class ShaderObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source IsSupported Declaration public bool IsSupported Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source PassCount Declaration public int PassCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Get additional information about the specific Reference . Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String A System.String of additional information. Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.TextureObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.TextureObjectInfo.html",
    "title": "Class TextureObjectInfo | GDX",
    "keywords": "Class TextureObjectInfo Inheritance System.Object ObjectInfo TextureObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class TextureObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source Format Declaration public GraphicsFormat Format Field Value Type Description UnityEngine.Experimental.Rendering.GraphicsFormat Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Height Declaration public int Height Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsReadable Declaration public bool IsReadable Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.TextureObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Width Declaration public int Width Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.ResourceReport.html": {
    "href": "api/GDX.Developer.Reports.Resource.ResourceReport.html",
    "title": "Class ResourceReport | GDX",
    "keywords": "Class ResourceReport Inheritance System.Object ResourceReport ResourcesAuditReport ResourcesDiffReport Namespace : GDX.Developer.Reports.Resource Syntax public abstract class ResourceReport Methods | Improve this Doc View Source CreateDivider(ResourceReportContext, Char) Create a sized divider string for use in generating reports. Declaration public static string CreateDivider(ResourceReportContext context, char divider = '-') Parameters Type Name Description ResourceReportContext context Contextual information regarding the generation of the report. System.Char divider The optional character to use as the divider. Returns Type Description System.String A sized string to be used as a divider. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CreateHeader(ResourceReportContext, String, Char) Create a header with title with repeated decorator s on the sides, filling out to CharacterWidth . Declaration public static string CreateHeader(ResourceReportContext context, string title, char decorator = '=') Parameters Type Name Description ResourceReportContext context Contextual information regarding the generation of the report. System.String title The text to be treated as the title for the header. System.Char decorator The optional character to be used as the decorator. Returns Type Description System.String A sized string to be used as a header. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CreateKeyValuePair(ResourceReportContext, String, String) Declaration public static string CreateKeyValuePair(ResourceReportContext context, string itemKey, string itemValue) Parameters Type Name Description ResourceReportContext context System.String itemKey System.String itemValue Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CreateYesNo(Boolean) Declaration public static string CreateYesNo(bool flag) Parameters Type Name Description System.Boolean flag Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext) Output the report format as an array of System.String . Declaration public string[] Output(ResourceReportContext context = null) Parameters Type Name Description ResourceReportContext context Returns Type Description System.String [] A generated report as an array of System.String . Remarks It is usually best to provide a System.Text.StringBuilder or System.IO.StreamWriter instead. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(StreamWriter, Int32, ResourceReportContext) Output the report format utilizing the provided writer , optionally limiting the write buffers by bufferSize . Declaration public bool Output(StreamWriter writer, int bufferSize = 1024, ResourceReportContext context = null) Parameters Type Name Description System.IO.StreamWriter writer A System.IO.StreamWriter instance to use for output. System.Int32 bufferSize The write buffer size. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if the report was successfully written to the provided writer . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(StringBuilder, ResourceReportContext) Output the report format utilizing the provided builder . Declaration public abstract bool Output(StringBuilder builder, ResourceReportContext context = null) Parameters Type Name Description System.Text.StringBuilder builder A System.Text.StringBuilder to use when generating the report. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if report was added to builder . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source PositiveSign(Int32) Declaration public static string PositiveSign(int targetValue) Parameters Type Name Description System.Int32 targetValue Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source PositiveSign(Int64) Declaration public static string PositiveSign(long targetValue) Parameters Type Name Description System.Int64 targetValue Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.ResourceReportContext.html": {
    "href": "api/GDX.Developer.Reports.Resource.ResourceReportContext.html",
    "title": "Class ResourceReportContext | GDX",
    "keywords": "Class ResourceReportContext Context for generating a ResourceReport based report. Inheritance System.Object ResourceReportContext Namespace : GDX.Developer.Reports.Resource Syntax public sealed class ResourceReportContext Constructors | Improve this Doc View Source ResourceReportContext(Int32) Declaration public ResourceReportContext(int characterWidth = 120) Parameters Type Name Description System.Int32 characterWidth Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source CharacterWidth Declaration public readonly int CharacterWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KeyValuePairInfoWidth Declaration public readonly int KeyValuePairInfoWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KeyValuePairWidth Declaration public readonly int KeyValuePairWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectInfoWidth Declaration public readonly int ObjectInfoWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectNameWidth Declaration public readonly int ObjectNameWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectSizeWidth Declaration public readonly int ObjectSizeWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectTypeWidth Declaration public readonly int ObjectTypeWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Sections.ApplicationSection.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.ApplicationSection.html",
    "title": "Struct ApplicationSection | GDX",
    "keywords": "Struct ApplicationSection Namespace : GDX.Developer.Reports.Resource.Sections Syntax public readonly struct ApplicationSection Constructors | Improve this Doc View Source ApplicationSection(String, DateTime, RuntimePlatform) Declaration public ApplicationSection(string activeScene, DateTime created, RuntimePlatform platform) Parameters Type Name Description System.String activeScene System.DateTime created UnityEngine.RuntimePlatform platform Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source ActiveScene The name of the scene that was known to the UnityEngine.SceneManagement as being the active scene when this ApplicationSection was created. Declaration public readonly string ActiveScene Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Created The time of creation for the ApplicationSection . Declaration public readonly DateTime Created Field Value Type Description System.DateTime Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Platform The platform that the ApplicationSection was created on. Declaration public readonly RuntimePlatform Platform Field Value Type Description UnityEngine.RuntimePlatform Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Get() Declaration public static ApplicationSection Get() Returns Type Description ApplicationSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder) Declaration public readonly void Output(ResourceReportContext context, StringBuilder builder) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Sections.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.html",
    "title": "Namespace GDX.Developer.Reports.Resource.Sections | GDX",
    "keywords": "Namespace GDX.Developer.Reports.Resource.Sections Structs ApplicationSection MemoryDiffSection MemorySection"
  },
  "api/GDX.Developer.Reports.Resource.Sections.MemoryDiffSection.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.MemoryDiffSection.html",
    "title": "Struct MemoryDiffSection | GDX",
    "keywords": "Struct MemoryDiffSection Namespace : GDX.Developer.Reports.Resource.Sections Syntax public readonly struct MemoryDiffSection Constructors | Improve this Doc View Source MemoryDiffSection(MemorySection, MemorySection) Declaration public MemoryDiffSection(MemorySection lhs, MemorySection rhs) Parameters Type Name Description MemorySection lhs MemorySection rhs Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source MonoHeapSize Declaration public readonly LongDiff MonoHeapSize Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MonoUsedSize Declaration public readonly LongDiff MonoUsedSize Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityGraphicsDriverAllocated Declaration public readonly LongDiff UnityGraphicsDriverAllocated Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalAllocatedMemory Declaration public readonly LongDiff UnityTotalAllocatedMemory Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalReservedMemory Declaration public readonly LongDiff UnityTotalReservedMemory Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalUnusedReservedMemory Declaration public readonly LongDiff UnityTotalUnusedReservedMemory Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Get(MemorySection, MemorySection) Declaration public static MemoryDiffSection Get(MemorySection lhs, MemorySection rhs) Parameters Type Name Description MemorySection lhs MemorySection rhs Returns Type Description MemoryDiffSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder, Boolean) Declaration public readonly void Output(ResourceReportContext context, StringBuilder builder, bool detailed = true) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder System.Boolean detailed Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Sections.MemorySection.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.MemorySection.html",
    "title": "Struct MemorySection | GDX",
    "keywords": "Struct MemorySection Namespace : GDX.Developer.Reports.Resource.Sections Syntax public readonly struct MemorySection Constructors | Improve this Doc View Source MemorySection(Int64, Int64, Int64, Int64, Int64, Int64) Declaration public MemorySection(long monoHeapSize, long monoUsedSize, long unityTotalAllocatedMemory, long unityTotalReservedMemory, long unityTotalUnusedReservedMemory, long unityGraphicsDriverAllocatedMemory) Parameters Type Name Description System.Int64 monoHeapSize System.Int64 monoUsedSize System.Int64 unityTotalAllocatedMemory System.Int64 unityTotalReservedMemory System.Int64 unityTotalUnusedReservedMemory System.Int64 unityGraphicsDriverAllocatedMemory Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source MonoHeapSize The size of the Mono heap when the ResourcesAuditReport was created. Declaration public readonly long MonoHeapSize Field Value Type Description System.Int64 Remarks This is cached so that the ResourcesAuditReport does not effect this value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MonoUsedSize The amount of the Mono heap used when the ResourcesAuditReport was created. Declaration public readonly long MonoUsedSize Field Value Type Description System.Int64 Remarks This is cached so that the ResourcesAuditReport does not effect this value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityGraphicsDriverAllocatedMemory Unity's allocated native memory for the graphics driver (in bytes). Declaration public readonly long UnityGraphicsDriverAllocatedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalAllocatedMemory Unity's total allocated memory (in bytes). Declaration public readonly long UnityTotalAllocatedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalReservedMemory Unity's total reserved memory (in bytes). Declaration public readonly long UnityTotalReservedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalUnusedReservedMemory Unity's total unused reserved memory (in bytes). Declaration public readonly long UnityTotalUnusedReservedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Get() Declaration public static MemorySection Get() Returns Type Description MemorySection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder, Boolean) Declaration public readonly void Output(ResourceReportContext context, StringBuilder builder, bool detailed = true) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder System.Boolean detailed Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.ResourcesAuditReport.html": {
    "href": "api/GDX.Developer.Reports.ResourcesAuditReport.html",
    "title": "Class ResourcesAuditReport | GDX",
    "keywords": "Class ResourcesAuditReport An audit of loaded UnityEngine.Object for queried types. Inheritance System.Object ResourceReport ResourcesAuditReport Inherited Members ResourceReport.Output(ResourceReportContext) ResourceReport.Output(StreamWriter, Int32, ResourceReportContext) ResourceReport.CreateDivider(ResourceReportContext, Char) ResourceReport.CreateHeader(ResourceReportContext, String, Char) ResourceReport.CreateKeyValuePair(ResourceReportContext, String, String) ResourceReport.CreateYesNo(Boolean) ResourceReport.PositiveSign(Int64) ResourceReport.PositiveSign(Int32) Namespace : GDX.Developer.Reports Syntax public class ResourcesAuditReport : ResourceReport Remarks Information is referenced to the target objects by a modified weak reference ( TransientReference ), thus this will not prevent garbage collection. Fields | Improve this Doc View Source ApplicationContext Declaration public readonly ApplicationSection ApplicationContext Field Value Type Description ApplicationSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KnownObjects A collection of known (loaded in memory) UnityEngine.Object keyed by type. Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> KnownObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KnownUsage A collection of known UnityEngine.Object types in memory and their total usage. Declaration public readonly Dictionary<Type, long> KnownUsage Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Int64 > Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source LastTouched The last time that the ResourcesAuditReport has had a query of types. Declaration public DateTime LastTouched Field Value Type Description System.DateTime Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MemoryContext Declaration public readonly MemorySection MemoryContext Field Value Type Description MemorySection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectCount The total number of objects which are known to the ResourcesAuditReport . Declaration public int ObjectCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Finalize() Process to destroy a ResourcesAuditReport . Declaration protected void Finalize() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(ResourcesAuditReport.ResourcesQuery[]) Generate a ResourcesAuditReport for the provided ResourcesAuditReport.ResourcesQuery array. Declaration public static ResourcesAuditReport Get(ResourcesAuditReport.ResourcesQuery[] queries) Parameters Type Name Description ResourcesAuditReport.ResourcesQuery [] queries A list of ResourcesAuditReport.ResourcesQuery to generate a report from. Returns Type Description ResourcesAuditReport A ResourcesAuditReport containing the outlined types. Remarks This method uses reflection to generate the necessary typed parameters, its often more efficient to create your own custom reports like in GetCommon() . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetAll() Get a ResourcesAuditReport of all UnityEngine.Object . Declaration public static ResourcesAuditReport GetAll() Returns Type Description ResourcesAuditReport A ResourcesAuditReport of all objects. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetCommon() Get a ResourcesAuditReport of a common subset of data which usually eats a large portion of memory, and often can reveal memory leaks. Declaration public static ResourcesAuditReport GetCommon() Returns Type Description ResourcesAuditReport A ResourcesAuditReport of textures, shaders, materials and animations. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(StringBuilder, ResourceReportContext) Output the report format utilizing the provided builder . Declaration public override bool Output(StringBuilder builder, ResourceReportContext context = null) Parameters Type Name Description System.Text.StringBuilder builder A System.Text.StringBuilder to use when generating the report. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if report was added to builder . Overrides ResourceReport.Output(StringBuilder, ResourceReportContext) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Query(ResourcesAuditReport.ResourcesQuery) Identify loaded UnityEngine.Object of the description provided in . Declaration public void Query(ResourcesAuditReport.ResourcesQuery query) Parameters Type Name Description ResourcesAuditReport.ResourcesQuery query Description of UnityEngine.Object type to search for. Remarks This method of querying uses reflection to allow for dynamic developer console calls, QueryForType<TType, TObjectInfo>(String) for a much faster typed operation. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source QueryForType<TType, TObjectInfo>(String) Identify loaded TType , using TObjectInfo for report generation. Declaration public void QueryForType<TType, TObjectInfo>(string nameFilter = null) where TType : Object where TObjectInfo : ObjectInfo, new() Parameters Type Name Description System.String nameFilter Type Parameters Name Description TType The object type to query for. TObjectInfo The ObjectInfo used to generate report entries. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Remove(Type) Remove all information regarding a specific type from the KnownObjects . Declaration public void Remove(Type type) Parameters Type Name Description System.Type type The type to remove from the KnownObjects . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.ResourcesAuditReport.ResourcesQuery.html": {
    "href": "api/GDX.Developer.Reports.ResourcesAuditReport.ResourcesQuery.html",
    "title": "Struct ResourcesAuditReport.ResourcesQuery | GDX",
    "keywords": "Struct ResourcesAuditReport.ResourcesQuery A structure that defines the string inputs necessary to query for loaded resources of a specific type. Namespace : GDX.Developer.Reports Syntax public readonly struct ResourcesQuery Remarks This forces the path through reflection when querying; there are faster methods available. These queries are built ideally to support dynamic developer console calls. Constructors | Improve this Doc View Source ResourcesQuery(String, String, String) Create a ResourcesAuditReport.ResourcesQuery for the given typeDefinition , while attempting to use the provided objectInfoTypeDefinition for report generation. Declaration public ResourcesQuery(string typeDefinition, string objectInfoTypeDefinition = null, string nameFilter = null) Parameters Type Name Description System.String typeDefinition The fully qualified type that is going to be evaluated. System.String objectInfoTypeDefinition The fully qualified type that is going to be used to generate a report on the type. If left null, system will attempt to find an appropriate info generator. System.String nameFilter A string that must be contained in an objects name for it to be valid in the query. Remarks Uses the default ObjectInfo for report generation if objectInfoTypeDefinition fails to qualify. Examples var queryTexture2D = new ResourcesQuery(\"UnityEngine.Texture2D,UnityEngine\", \"GDX.Developer.Reports.ObjectInfos.TextureObjectInfo,GDX\", \"Armor\"); Fields | Improve this Doc View Source NameFilter A System.String check against a UnityEngine.Object name. Declaration public readonly string NameFilter Field Value Type Description System.String Examples Armor | Improve this Doc View Source ObjectInfoTypeDefinition The fully qualified type that is going to be used to generate a report on the type. Declaration public readonly string ObjectInfoTypeDefinition Field Value Type Description System.String Examples GDX.Developer.Reports.ObjectInfo,GDX | Improve this Doc View Source TypeDefinition The fully qualified type that is going to be evaluated. Declaration public readonly string TypeDefinition Field Value Type Description System.String Examples UnityEngine.Texture2D,UnityEngine"
  },
  "api/GDX.Developer.Reports.ResourcesDiffReport.html": {
    "href": "api/GDX.Developer.Reports.ResourcesDiffReport.html",
    "title": "Class ResourcesDiffReport | GDX",
    "keywords": "Class ResourcesDiffReport Inheritance System.Object ResourceReport ResourcesDiffReport Inherited Members ResourceReport.Output(ResourceReportContext) ResourceReport.Output(StreamWriter, Int32, ResourceReportContext) ResourceReport.CreateDivider(ResourceReportContext, Char) ResourceReport.CreateHeader(ResourceReportContext, String, Char) ResourceReport.CreateKeyValuePair(ResourceReportContext, String, String) ResourceReport.CreateYesNo(Boolean) ResourceReport.PositiveSign(Int64) ResourceReport.PositiveSign(Int32) Namespace : GDX.Developer.Reports Syntax public class ResourcesDiffReport : ResourceReport Constructors | Improve this Doc View Source ResourcesDiffReport(ResourcesAuditReport, ResourcesAuditReport) Declaration public ResourcesDiffReport(ResourcesAuditReport lhs, ResourcesAuditReport rhs) Parameters Type Name Description ResourcesAuditReport lhs ResourcesAuditReport rhs Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source AddedObjects Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> AddedObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CommonObjects Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> CommonObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KnownUsage Declaration public readonly Dictionary<Type, LongDiff> KnownUsage Field Value Type Description System.Collections.Generic.Dictionary < System.Type , GDX.Developer.Reports.Resource.LongDiff > Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MemoryContext Declaration public readonly MemoryDiffSection MemoryContext Field Value Type Description MemoryDiffSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectCount Declaration public readonly IntegerDiff ObjectCount Field Value Type Description GDX.Developer.Reports.Resource.IntegerDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source RemovedObjects Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> RemovedObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Output(StringBuilder, ResourceReportContext) Output the report format utilizing the provided builder . Declaration public override bool Output(StringBuilder builder, ResourceReportContext context = null) Parameters Type Name Description System.Text.StringBuilder builder A System.Text.StringBuilder to use when generating the report. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if report was added to builder . Overrides ResourceReport.Output(StringBuilder, ResourceReportContext) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.TextGenerator.html": {
    "href": "api/GDX.Developer.TextGenerator.html",
    "title": "Class TextGenerator | GDX",
    "keywords": "Class TextGenerator A formatted text generator useful for creating text based files with some semblance of organization. Inheritance System.Object TextGenerator Namespace : GDX.Developer Syntax public class TextGenerator Constructors | Improve this Doc View Source TextGenerator(String, String, String) Create a new TextGenerator with the Declaration public TextGenerator(string indentContent = \"\\t\", string indentOpen = null, string indentClose = null) Parameters Type Name Description System.String indentContent The characters used to indent the content when applicable. By default it will use a tab representation, however for code files you may want to use four spaces. System.String indentOpen System.String indentClose Methods | Improve this Doc View Source Append(String) Append content to the current line being operated on. Declaration public void Append(string content) Parameters Type Name Description System.String content The content to append to the current line. | Improve this Doc View Source AppendLine(String) Apply the appropriate amount of indentation to the current line, appending content afterwards and then advancing to the next line. Declaration public void AppendLine(string content = \"\") Parameters Type Name Description System.String content The content to append to the current line. | Improve this Doc View Source AppendLineRange(IEnumerable) Append an System.Collections.IEnumerable set of content as individual lines with proper indentation. Declaration public void AppendLineRange(IEnumerable content) Parameters Type Name Description System.Collections.IEnumerable content The content to be added. | Improve this Doc View Source ApplyIndent() Apply the current level of indent to the current line being operated on. Declaration public void ApplyIndent() | Improve this Doc View Source NextLine() Move the builder to the start of the next line. Declaration public void NextLine() | Improve this Doc View Source PopIndent() Remove a level of indentation from the builder. Declaration public void PopIndent() | Improve this Doc View Source PushIndent(Boolean) Add a level of indentation to the builder. Declaration public void PushIndent(bool applyOpener = true) Parameters Type Name Description System.Boolean applyOpener Should the opener be applied? | Improve this Doc View Source ToString() Returns the built string content for the builder. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Remarks Will automatically reduce the indentation level to 0."
  },
  "api/GDX.Developer.WaitForMilliseconds.html": {
    "href": "api/GDX.Developer.WaitForMilliseconds.html",
    "title": "Class WaitForMilliseconds | GDX",
    "keywords": "Class WaitForMilliseconds Inheritance System.Object WaitForMilliseconds Namespace : GDX.Developer Syntax public class WaitForMilliseconds Constructors | Improve this Doc View Source WaitForMilliseconds(Int32) Declaration public WaitForMilliseconds(int milliseconds) Parameters Type Name Description System.Int32 milliseconds Methods | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source Wait() Declaration public bool Wait() Returns Type Description System.Boolean | Improve this Doc View Source WaitAsync() Declaration public async Task WaitAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source While() Declaration public IEnumerator While() Returns Type Description System.Collections.IEnumerator"
  },
  "api/GDX.Display.html": {
    "href": "api/GDX.Display.html",
    "title": "Class Display | GDX",
    "keywords": "Class Display A collection of display related helper utilities. Inheritance System.Object Display Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Display Methods | Improve this Doc View Source GetScreenHeight() Returns the actual screen height being rendered on the current platform. Declaration public static int GetScreenHeight() Returns Type Description System.Int32 The pixel height of the screen resolution. Remarks This resolves issues with scaled rendering. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetScreenWidth() Returns the actual screen width being rendered on the current platform. Declaration public static int GetScreenWidth() Returns Type Description System.Int32 The pixel width of the screen resolution. Remarks This resolves issues with scaled rendering. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsHDREnabled() Is HDR output currently enabled (and actively being used)? Declaration public static bool IsHDREnabled() Returns Type Description System.Boolean true/false Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsHDRSupported() Does the current display device support HDR output? Declaration public static bool IsHDRSupported() Returns Type Description System.Boolean true/false Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Editor.Automation.html": {
    "href": "api/GDX.Editor.Automation.html",
    "title": "Class Automation | GDX",
    "keywords": "Class Automation A collection of helper methods used for automation processes. Inheritance System.Object Automation Namespace : GDX.Editor Syntax public static class Automation Methods | Improve this Doc View Source CaptureEditorWindow(EditorWindow) Capture a UnityEngine.Texture2D of the editor window. Declaration public static Texture2D CaptureEditorWindow(EditorWindow window) Parameters Type Name Description UnityEditor.EditorWindow window Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. | Improve this Doc View Source CaptureEditorWindow<T>(Boolean) Capture a UnityEngine.Texture2D of the designated UnityEditor.EditorWindow . Declaration public static Texture2D CaptureEditorWindow<T>(bool shouldCloseWindow = true) where T : EditorWindow Parameters Type Name Description System.Boolean shouldCloseWindow Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. Type Parameters Name Description T The type of UnityEditor.EditorWindow to be captured. | Improve this Doc View Source CaptureEditorWindowToPNG(EditorWindow, String) Capture a PNG image of the provided window. Declaration public static bool CaptureEditorWindowToPNG(EditorWindow window, string outputPath) Parameters Type Name Description UnityEditor.EditorWindow window The target window. System.String outputPath The absolute path for the image file. Returns Type Description System.Boolean true/false if the capture was successful. | Improve this Doc View Source CaptureEditorWindowToPNG<T>(String, Boolean) Capture a PNG image of the designated UnityEditor.EditorWindow . Declaration public static bool CaptureEditorWindowToPNG<T>(string outputPath, bool shouldCloseWindow = true) where T : EditorWindow Parameters Type Name Description System.String outputPath The absolute path for the image file. System.Boolean shouldCloseWindow Should the gotten window be closed after the capture? Returns Type Description System.Boolean true/false if the capture was successful. Type Parameters Name Description T The type of UnityEditor.EditorWindow to be captured. | Improve this Doc View Source CaptureFocusedEditorWindow() Capture a UnityEngine.Texture2D of the focused editor window. Declaration public static Texture2D CaptureFocusedEditorWindow() Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. | Improve this Doc View Source CaptureFocusedEditorWindowToPNG(String) Capture a PNG image of the currently focused window. Declaration public static bool CaptureFocusedEditorWindowToPNG(string outputPath) Parameters Type Name Description System.String outputPath The absolute path for the image file. Returns Type Description System.Boolean true/false if the capture was successful. | Improve this Doc View Source ClearTempFolder(Boolean) Clear the automation temporary folder. Declaration public static void ClearTempFolder(bool deleteFolder = false) Parameters Type Name Description System.Boolean deleteFolder Should the automation folder be deleted? | Improve this Doc View Source FinishProfile() Stop an existing profile, this is most often used to end a command line profile of the Editor startup. Declaration public static void FinishProfile() Remarks The editor needs to be started with profiling arguments; more info can be found on https://docs.unity3d.com/Manual/EditorCommandLineArguments.html. Argument Description -profiler-enable Enable profile at start. -profiler-log-file [path/to/file.raw] The absolute path to where the profiling data should be stored. -profiler-maxusedmemory [bytesize] The maximum amount of memory for the profiler to use. -deepprofiling Should a deep profile be done? -executeMethod GDX.Editor.Automation.FinishProfile Executes this method to stop the profiling. | Improve this Doc View Source GenerateProjectFiles() Generate the project's solution and associated project files. Declaration public static void GenerateProjectFiles() | Improve this Doc View Source GetGameView() Returns a reference to the first available GameView. Declaration public static EditorWindow GetGameView() Returns Type Description UnityEditor.EditorWindow An reference to an instance of the GameView | Improve this Doc View Source GetWindow<T>(Boolean, Int32, Int32) Get the existing or open a new window with the indicated size / flags. Declaration public static T GetWindow<T>(bool shouldMaximize = false, int width = 800, int height = 600) where T : EditorWindow Parameters Type Name Description System.Boolean shouldMaximize Should the window be maximized? System.Int32 width The desired window pixel width. System.Int32 height The desired window pixel height. Returns Type Description T The instantiated window, or null. Type Parameters Name Description T The type of the window requested. Remarks This will undock a window. It is important to wait for the window to paint itself. | Improve this Doc View Source ResetEditor() Reset the editor to a default state. Declaration public static void ResetEditor() Remarks Using this method inside of a unit test will break the runner/chain. | Improve this Doc View Source RestoreWindowLayout() Declaration public static void RestoreWindowLayout() | Improve this Doc View Source StashWindowLayout() Declaration public static void StashWindowLayout()"
  },
  "api/GDX.Editor.Build.BuildInfoProvider.html": {
    "href": "api/GDX.Editor.Build.BuildInfoProvider.html",
    "title": "Class BuildInfoProvider | GDX",
    "keywords": "Class BuildInfoProvider A set of tools to produce the content used for the BuildInfo generated file, as well as the surrounding assembly definition, as well as an ability to reset the file. Inheritance System.Object BuildInfoProvider Namespace : GDX.Editor.Build Syntax public static class BuildInfoProvider Methods | Improve this Doc View Source CheckForAssemblyDefinition() Check if an assembly definition should be placed along side the written BuildInfo and write one. Declaration public static void CheckForAssemblyDefinition() | Improve this Doc View Source GetContent(Boolean, String) Create the content for the BuildInfo file based on provided information. Declaration public static string GetContent(bool forceDefaults = false, string internalDescription = null) Parameters Type Name Description System.Boolean forceDefaults Should all default values be used instead? System.String internalDescription An internally used description. Returns Type Description System.String The files content. | Improve this Doc View Source WriteDefaultFile() Write default content to BuildInfo file. Declaration public static void WriteDefaultFile()"
  },
  "api/GDX.Editor.Build.Classic.BuildInfoBuildCustomizer.html": {
    "href": "api/GDX.Editor.Build.Classic.BuildInfoBuildCustomizer.html",
    "title": "Class BuildInfoBuildCustomizer | GDX",
    "keywords": "Class BuildInfoBuildCustomizer A customizer for the ClassicBuildPipeline that handles the generation of the BuildInfo . During the build process a BuildInfo file will be generated containing information passed in through commandline arguments (parsed by CommandLineParser ). These arguments and their formats are configurable via the Config . Inheritance System.Object Unity.Build.Classic.ClassicBuildPipelineCustomizer BuildInfoBuildCustomizer Inherited Members Unity.Build.Classic.ClassicBuildPipelineCustomizer.ModifyEmbeddedScenes(System.String[]) Unity.Build.Classic.ClassicBuildPipelineCustomizer.RegisterAdditionalFilesToDeploy(System.Action<System.String, System.String>) Unity.Build.Classic.ClassicBuildPipelineCustomizer.ProvideBuildOptions() Unity.Build.Classic.ClassicBuildPipelineCustomizer.ProvidePlayerScriptingDefines() Unity.Build.Classic.ClassicBuildPipelineCustomizer.Context Unity.Build.Classic.ClassicBuildPipelineCustomizer.StreamingAssetsDirectory Unity.Build.Classic.ClassicBuildPipelineCustomizer.OutputBuildDirectory Unity.Build.Classic.ClassicBuildPipelineCustomizer.WorkingDirectory Unity.Build.Classic.ClassicBuildPipelineCustomizer.BuildTarget Unity.Build.Classic.ClassicBuildPipelineCustomizer.EmbeddedScenes Unity.Build.Classic.ClassicBuildPipelineCustomizer.UsedComponents Namespace : GDX.Editor.Build.Classic Syntax public class BuildInfoBuildCustomizer : ClassicBuildPipelineCustomizer Remarks After a build is finished, the BuildInfo will be reset to default values. This is intended to make sure local builds have a specific marker. Argument (Default Value) Description BUILD The build number, accessible through BuildInfo.BuildNumber . BUILD_DESC A short description of the build (example: useful for identifying personal CI builds), accessible through BuildInfo.Description . BUILD_CHANGELIST The changelist which the build was made against, accessible through BuildInfo.Changelist . BUILD_TASK The name of the build script/task which was used to create the build (example: CODE-Main-Build-PS5-Development), accessible through BuildInfo.BuildTask . BUILD_STREAM An indicator of what stream/branch that the build was build against from your chosen version control system, accessible through BuildInfo.Stream . Methods | Improve this Doc View Source Finalize() Restore the default BuildInfo after a build process finishes. Declaration protected void Finalize() | Improve this Doc View Source OnBeforeBuild() Writes out BuildInfo prior to build. Declaration public override void OnBeforeBuild() Overrides Unity.Build.Classic.ClassicBuildPipelineCustomizer.OnBeforeBuild()"
  },
  "api/GDX.Editor.Build.Classic.html": {
    "href": "api/GDX.Editor.Build.Classic.html",
    "title": "Namespace GDX.Editor.Build.Classic | GDX",
    "keywords": "Namespace GDX.Editor.Build.Classic Classes BuildInfoBuildCustomizer A customizer for the ClassicBuildPipeline that handles the generation of the BuildInfo . During the build process a BuildInfo file will be generated containing information passed in through commandline arguments (parsed by CommandLineParser ). These arguments and their formats are configurable via the Config . ScriptingDefinesBuildCustomizer A customizer for the ClassicBuildPipeline that ensures the build is built with 'GDX' as a scripting define."
  },
  "api/GDX.Editor.Build.Classic.ScriptingDefinesBuildCustomizer.html": {
    "href": "api/GDX.Editor.Build.Classic.ScriptingDefinesBuildCustomizer.html",
    "title": "Class ScriptingDefinesBuildCustomizer | GDX",
    "keywords": "Class ScriptingDefinesBuildCustomizer A customizer for the ClassicBuildPipeline that ensures the build is built with 'GDX' as a scripting define. Inheritance System.Object Unity.Build.Classic.ClassicBuildPipelineCustomizer ScriptingDefinesBuildCustomizer Inherited Members Unity.Build.Classic.ClassicBuildPipelineCustomizer.OnBeforeBuild() Unity.Build.Classic.ClassicBuildPipelineCustomizer.ModifyEmbeddedScenes(System.String[]) Unity.Build.Classic.ClassicBuildPipelineCustomizer.RegisterAdditionalFilesToDeploy(System.Action<System.String, System.String>) Unity.Build.Classic.ClassicBuildPipelineCustomizer.ProvideBuildOptions() Unity.Build.Classic.ClassicBuildPipelineCustomizer.Context Unity.Build.Classic.ClassicBuildPipelineCustomizer.StreamingAssetsDirectory Unity.Build.Classic.ClassicBuildPipelineCustomizer.OutputBuildDirectory Unity.Build.Classic.ClassicBuildPipelineCustomizer.WorkingDirectory Unity.Build.Classic.ClassicBuildPipelineCustomizer.BuildTarget Unity.Build.Classic.ClassicBuildPipelineCustomizer.EmbeddedScenes Unity.Build.Classic.ClassicBuildPipelineCustomizer.UsedComponents Namespace : GDX.Editor.Build.Classic Syntax public class ScriptingDefinesBuildCustomizer : ClassicBuildPipelineCustomizer Methods | Improve this Doc View Source ProvidePlayerScriptingDefines() Provide GDX as a scripting define for the built player. Declaration public override string[] ProvidePlayerScriptingDefines() Returns Type Description System.String [] An array containing GDX. Overrides Unity.Build.Classic.ClassicBuildPipelineCustomizer.ProvidePlayerScriptingDefines()"
  },
  "api/GDX.Editor.Build.html": {
    "href": "api/GDX.Editor.Build.html",
    "title": "Namespace GDX.Editor.Build | GDX",
    "keywords": "Namespace GDX.Editor.Build Classes BuildInfoProvider A set of tools to produce the content used for the BuildInfo generated file, as well as the surrounding assembly definition, as well as an ability to reset the file."
  },
  "api/GDX.Editor.Build.Legacy.BuildInfoBuildProcessor.html": {
    "href": "api/GDX.Editor.Build.Legacy.BuildInfoBuildProcessor.html",
    "title": "Class BuildInfoBuildProcessor | GDX",
    "keywords": "Class BuildInfoBuildProcessor A BuildInfo process step for the legacy build pipeline in Unity. During the build process a BuildInfo file will be generated containing information passed in through commandline arguments (parsed by CommandLineParser ). These arguments and their formats are configurable via the Config . Inheritance System.Object BuildInfoBuildProcessor Implements UnityEditor.Build.IPostprocessBuildWithReport UnityEditor.Build.IOrderedCallback Namespace : GDX.Editor.Build.Legacy Syntax public class BuildInfoBuildProcessor : IPostprocessBuildWithReport, IOrderedCallback Remarks After a build is finished, the BuildInfo will be reset to default values. This is intended to make sure local builds have a specific marker. Argument (Default Value) Description BUILD The build number, accessible through BuildInfo.BuildNumber . BUILD_DESC A short description of the build (example: useful for identifying personal CI builds), accessible through BuildInfo.Description . BUILD_CHANGELIST The changelist which the build was made against, accessible through BuildInfo.Changelist . BUILD_TASK The name of the build script/task which was used to create the build (example: CODE-Main-Build-PS5-Development), accessible through BuildInfo.BuildTask . BUILD_STREAM An indicator of what stream/branch that the build was build against from your chosen version control system, accessible through BuildInfo.Stream . Properties | Improve this Doc View Source callbackOrder The priority for the processor to be executed, before defaults. Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 The numerical value used to sort callbacks, lowest to highest. Methods | Improve this Doc View Source OnPostprocessBuild(BuildReport) Restores the default BuildInfo after a build process finishes. Declaration public void OnPostprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Build process reported information. Implements UnityEditor.Build.IPostprocessBuildWithReport UnityEditor.Build.IOrderedCallback"
  },
  "api/GDX.Editor.Build.Legacy.html": {
    "href": "api/GDX.Editor.Build.Legacy.html",
    "title": "Namespace GDX.Editor.Build.Legacy | GDX",
    "keywords": "Namespace GDX.Editor.Build.Legacy Classes BuildInfoBuildProcessor A BuildInfo process step for the legacy build pipeline in Unity. During the build process a BuildInfo file will be generated containing information passed in through commandline arguments (parsed by CommandLineParser ). These arguments and their formats are configurable via the Config ."
  },
  "api/GDX.Editor.ConfigGenerator.html": {
    "href": "api/GDX.Editor.ConfigGenerator.html",
    "title": "Class ConfigGenerator | GDX",
    "keywords": "Class ConfigGenerator Inheritance System.Object ConfigGenerator Namespace : GDX.Editor Syntax public static class ConfigGenerator Methods | Improve this Doc View Source Build(TransientConfig) Declaration public static string Build(TransientConfig rhs) Parameters Type Name Description TransientConfig rhs Returns Type Description System.String"
  },
  "api/GDX.Editor.html": {
    "href": "api/GDX.Editor.html",
    "title": "Namespace GDX.Editor | GDX",
    "keywords": "Namespace GDX.Editor Classes Automation A collection of helper methods used for automation processes. ConfigGenerator ManifestEntry An object representative of the GDX entry in a manifest lockfile. ResourcesProvider SerializedProperties SerializedStopwatch An obscure usage stopwatch meant to track times across domain-reload and serialization. TestFramework TransientConfig A configuration that is operated on when in Project Settings. VersionControl A collection of version control related helper utilities."
  },
  "api/GDX.Editor.ManifestEntry.html": {
    "href": "api/GDX.Editor.ManifestEntry.html",
    "title": "Class ManifestEntry | GDX",
    "keywords": "Class ManifestEntry An object representative of the GDX entry in a manifest lockfile. Inheritance System.Object ManifestEntry Namespace : GDX.Editor Syntax [Serializable] public class ManifestEntry Fields | Improve this Doc View Source dependencies Declaration public string[] dependencies Field Value Type Description System.String [] | Improve this Doc View Source depth Declaration public int depth Field Value Type Description System.Int32 | Improve this Doc View Source hash Declaration public string hash Field Value Type Description System.String | Improve this Doc View Source InstallationType Declaration [NonSerialized] public PackageProvider.InstallationType InstallationType Field Value Type Description GDX.Editor.PackageProvider.InstallationType | Improve this Doc View Source source Declaration public string source Field Value Type Description System.String | Improve this Doc View Source Tag Declaration [NonSerialized] public string Tag Field Value Type Description System.String | Improve this Doc View Source version Declaration public string version Field Value Type Description System.String Methods | Improve this Doc View Source Get(String) Declaration public static ManifestEntry Get(string json) Parameters Type Name Description System.String json Returns Type Description ManifestEntry"
  },
  "api/GDX.Editor.ProjectSettings.html": {
    "href": "api/GDX.Editor.ProjectSettings.html",
    "title": "Namespace GDX.Editor.ProjectSettings | GDX",
    "keywords": "Namespace GDX.Editor.ProjectSettings Interfaces IConfigSection"
  },
  "api/GDX.Editor.ProjectSettings.IConfigSection.html": {
    "href": "api/GDX.Editor.ProjectSettings.IConfigSection.html",
    "title": "Interface IConfigSection | GDX",
    "keywords": "Interface IConfigSection Namespace : GDX.Editor.ProjectSettings Syntax public interface IConfigSection Methods | Improve this Doc View Source BindSectionContent(VisualElement) Declaration void BindSectionContent(VisualElement rootElement) Parameters Type Name Description UnityEngine.UIElements.VisualElement rootElement | Improve this Doc View Source GetDefaultVisibility() Declaration bool GetDefaultVisibility() Returns Type Description System.Boolean | Improve this Doc View Source GetSearchKeywords() Declaration string[] GetSearchKeywords() Returns Type Description System.String [] | Improve this Doc View Source GetSectionHeaderLabel() Declaration string GetSectionHeaderLabel() Returns Type Description System.String | Improve this Doc View Source GetSectionHelpLink() Declaration string GetSectionHelpLink() Returns Type Description System.String | Improve this Doc View Source GetSectionIndex() Declaration int GetSectionIndex() Returns Type Description System.Int32 | Improve this Doc View Source GetSectionKey() Declaration string GetSectionKey() Returns Type Description System.String | Improve this Doc View Source GetTemplateName() Declaration string GetTemplateName() Returns Type Description System.String | Improve this Doc View Source GetToggleState() Declaration bool GetToggleState() Returns Type Description System.Boolean | Improve this Doc View Source GetToggleSupport() Declaration bool GetToggleSupport() Returns Type Description System.Boolean | Improve this Doc View Source GetToggleTooltip() Declaration string GetToggleTooltip() Returns Type Description System.String | Improve this Doc View Source SetToggleState(VisualElement, Boolean) Declaration void SetToggleState(VisualElement toggleElement, bool newState) Parameters Type Name Description UnityEngine.UIElements.VisualElement toggleElement System.Boolean newState | Improve this Doc View Source UpdateSectionContent() Declaration void UpdateSectionContent()"
  },
  "api/GDX.Editor.PropertyDrawers.DisableInInspectorAttributePropertyDrawer.html": {
    "href": "api/GDX.Editor.PropertyDrawers.DisableInInspectorAttributePropertyDrawer.html",
    "title": "Class DisableInInspectorAttributePropertyDrawer | GDX",
    "keywords": "Class DisableInInspectorAttributePropertyDrawer The drawing component of the GDX.DisableInInspectorAttribute . Inheritance System.Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer DisableInInspectorAttributePropertyDrawer Namespace : GDX.Editor.PropertyDrawers Syntax [CustomPropertyDrawer(typeof(DisableInInspectorAttribute))] public class DisableInInspectorAttributePropertyDrawer : PropertyDrawer Methods | Improve this Doc View Source OnGUI(Rect, SerializedProperty, GUIContent) Unity IMGUI Draw Event Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position Rectangle on the screen to use for the property GUI. UnityEditor.SerializedProperty property The SerializedProperty to make the custom GUI for. UnityEngine.GUIContent label The label of this property. Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/GDX.Editor.PropertyDrawers.html": {
    "href": "api/GDX.Editor.PropertyDrawers.html",
    "title": "Namespace GDX.Editor.PropertyDrawers | GDX",
    "keywords": "Namespace GDX.Editor.PropertyDrawers Classes DisableInInspectorAttributePropertyDrawer The drawing component of the GDX.DisableInInspectorAttribute ."
  },
  "api/GDX.Editor.ResourcesProvider.html": {
    "href": "api/GDX.Editor.ResourcesProvider.html",
    "title": "Class ResourcesProvider | GDX",
    "keywords": "Class ResourcesProvider Inheritance System.Object ResourcesProvider Namespace : GDX.Editor Syntax public static class ResourcesProvider Fields | Improve this Doc View Source ChangedClass Declaration public const string ChangedClass = \"changed\" Field Value Type Description System.String | Improve this Doc View Source DisabledClass Declaration public const string DisabledClass = \"disabled\" Field Value Type Description System.String | Improve this Doc View Source EnabledClass Declaration public const string EnabledClass = \"enabled\" Field Value Type Description System.String | Improve this Doc View Source ExpandedClass Declaration public const string ExpandedClass = \"expanded\" Field Value Type Description System.String | Improve this Doc View Source HiddenClass Declaration public const string HiddenClass = \"hidden\" Field Value Type Description System.String | Improve this Doc View Source SearchClass Declaration public const string SearchClass = \"search\" Field Value Type Description System.String | Improve this Doc View Source SearchHighlightClass Declaration public const string SearchHighlightClass = \"search-item\" Field Value Type Description System.String Methods | Improve this Doc View Source CheckTheme(VisualElement) Apply light/dark mode classes. Declaration public static void CheckTheme(VisualElement element) Parameters Type Name Description UnityEngine.UIElements.VisualElement element The target element to have classes applied to. | Improve this Doc View Source GetLightThemeStylesheet() Declaration public static StyleSheet GetLightThemeStylesheet() Returns Type Description UnityEngine.UIElements.StyleSheet | Improve this Doc View Source GetStyleSheet() Return the global stylesheet. Declaration public static StyleSheet GetStyleSheet() Returns Type Description UnityEngine.UIElements.StyleSheet The stylesheet if found, or null. Remarks This will find and cache the stylesheet reference for future use, using the first asset to match the query. | Improve this Doc View Source GetStyleSheetOverride() Return the override stylesheet. Declaration public static StyleSheet GetStyleSheetOverride() Returns Type Description UnityEngine.UIElements.StyleSheet The stylesheet if found, or null. Remarks This will find and cache the stylesheet reference for future use, using the first asset to match the query."
  },
  "api/GDX.Editor.SerializedProperties.html": {
    "href": "api/GDX.Editor.SerializedProperties.html",
    "title": "Class SerializedProperties | GDX",
    "keywords": "Class SerializedProperties Inheritance System.Object SerializedProperties Namespace : GDX.Editor Syntax public static class SerializedProperties Fields | Improve this Doc View Source SerializationFieldFlags Declaration public const BindingFlags SerializationFieldFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source SerializationPropertyFlags Declaration public const BindingFlags SerializationPropertyFlags = BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags Methods | Improve this Doc View Source GetValue(SerializedProperty) Declaration public static object GetValue(this SerializedProperty property) Parameters Type Name Description UnityEditor.SerializedProperty property Returns Type Description System.Object | Improve this Doc View Source SetValue(SerializedProperty, Object) Declaration public static void SetValue(this SerializedProperty property, object value) Parameters Type Name Description UnityEditor.SerializedProperty property System.Object value"
  },
  "api/GDX.Editor.SerializedStopwatch.html": {
    "href": "api/GDX.Editor.SerializedStopwatch.html",
    "title": "Class SerializedStopwatch | GDX",
    "keywords": "Class SerializedStopwatch An obscure usage stopwatch meant to track times across domain-reload and serialization. Inheritance System.Object SerializedStopwatch Implements UnityEngine.ISerializationCallbackReceiver Namespace : GDX.Editor Syntax [Serializable] public class SerializedStopwatch : ISerializationCallbackReceiver Properties | Improve this Doc View Source ElapsedTicks Returns the total number of ticks elapsed since GetStartTick() was called. Declaration public double ElapsedTicks { get; } Property Value Type Description System.Double | Improve this Doc View Source SerializationSpan Declaration public double SerializationSpan { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source GetStartTick() Get the starting point for the stopwatch. Declaration public double GetStartTick() Returns Type Description System.Double The System.DateTime.Now set by SetStartTick() . | Improve this Doc View Source OnAfterDeserialize() Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnBeforeSerialize() Declaration public void OnBeforeSerialize() | Improve this Doc View Source SetStartTick() Declaration public void SetStartTick() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GDX.Editor.TestFramework.html": {
    "href": "api/GDX.Editor.TestFramework.html",
    "title": "Class TestFramework | GDX",
    "keywords": "Class TestFramework Inheritance System.Object TestFramework Namespace : GDX.Editor Syntax public static class TestFramework Methods | Improve this Doc View Source Initialize() Declaration [InitializeOnLoadMethod] public static void Initialize()"
  },
  "api/GDX.Editor.TransientConfig.html": {
    "href": "api/GDX.Editor.TransientConfig.html",
    "title": "Class TransientConfig | GDX",
    "keywords": "Class TransientConfig A configuration that is operated on when in Project Settings. Inheritance System.Object TransientConfig Namespace : GDX.Editor Syntax public class TransientConfig Remarks A non-static copy of Config . Constructors | Improve this Doc View Source TransientConfig() Declaration public TransientConfig() Fields | Improve this Doc View Source ConfigOutputPath The asset database relative path of the GDX config override file. Declaration public string ConfigOutputPath Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoAssemblyDefinition Ensure that there is an assembly definition wrapping the generated content. Declaration public bool DeveloperBuildInfoAssemblyDefinition Field Value Type Description System.Boolean | Improve this Doc View Source DeveloperBuildInfoBuildChangelistArgument The argument key for the build's changelist to be passed to the BuildInfoGenerator. Declaration public string DeveloperBuildInfoBuildChangelistArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildDescriptionArgument The argument key for the build description to be passed to the BuildInfoGenerator. Declaration public string DeveloperBuildInfoBuildDescriptionArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildNumberArgument The argument key for the build number to be passed to the BuildInfoGenerator. Declaration public string DeveloperBuildInfoBuildNumberArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildStreamArgument The argument key for the build's stream to be passed to the BuildInfoGenerator. Declaration public string DeveloperBuildInfoBuildStreamArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoBuildTaskArgument The argument key for the build's task to be passed to the BuildInfoGenerator. Declaration public string DeveloperBuildInfoBuildTaskArgument Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoEnabled Should the BuildInfo file be written during builds? Declaration public bool DeveloperBuildInfoEnabled Field Value Type Description System.Boolean | Improve this Doc View Source DeveloperBuildInfoNamespace The namespace where the BuildInfo should be placed. Declaration public string DeveloperBuildInfoNamespace Field Value Type Description System.String | Improve this Doc View Source DeveloperBuildInfoPath The path to output the BuildInfo file. Declaration public string DeveloperBuildInfoPath Field Value Type Description System.String | Improve this Doc View Source DeveloperCommandLineParserArgumentPrefix What should be used to denote arguments in the command line? Declaration public string DeveloperCommandLineParserArgumentPrefix Field Value Type Description System.String | Improve this Doc View Source DeveloperCommandLineParserArgumentSplit What should be used to split arguments from their values in the command line? Declaration public string DeveloperCommandLineParserArgumentSplit Field Value Type Description System.String | Improve this Doc View Source EnvironmentScriptingDefineSymbol Should a GDX scripting define symbol be added to all target build groups. Declaration public bool EnvironmentScriptingDefineSymbol Field Value Type Description System.Boolean | Improve this Doc View Source LocalizationDefaultCulture The language to set the default thread culture too. Declaration public Localization.Language LocalizationDefaultCulture Field Value Type Description Localization.Language | Improve this Doc View Source LocalizationSetDefaultCulture Should the default thread culture be set? Declaration public bool LocalizationSetDefaultCulture Field Value Type Description System.Boolean | Improve this Doc View Source PlatformAutomationFolder The project relative path where automation should store its artifacts. Declaration public string PlatformAutomationFolder Field Value Type Description System.String | Improve this Doc View Source PlatformCacheFolder The project relative path to use as a cache. Declaration public string PlatformCacheFolder Field Value Type Description System.String | Improve this Doc View Source TraceDebugLevels What is the level of traces which should be processed and logged by GDX in debug builds? Declaration public Trace.TraceLevel TraceDebugLevels Field Value Type Description Trace.TraceLevel | Improve this Doc View Source TraceDebugOutputToUnityConsole Should GDX based traces output to the Unity console in debug builds? Declaration public bool TraceDebugOutputToUnityConsole Field Value Type Description System.Boolean | Improve this Doc View Source TraceDevelopmentLevels What is the level of traces which should be processed and logged by GDX in the editor or development builds? Declaration public Trace.TraceLevel TraceDevelopmentLevels Field Value Type Description Trace.TraceLevel | Improve this Doc View Source TraceDevelopmentOutputToUnityConsole Should GDX based traces output to the Unity console in the editor or development builds? Declaration public bool TraceDevelopmentOutputToUnityConsole Field Value Type Description System.Boolean | Improve this Doc View Source TraceReleaseLevels What is the level of traces which should be processed and logged by GDX in release builds? Declaration public Trace.TraceLevel TraceReleaseLevels Field Value Type Description Trace.TraceLevel | Improve this Doc View Source UpdateProviderCheckForUpdates Should GDX check for updates at editor time? Declaration public bool UpdateProviderCheckForUpdates Field Value Type Description System.Boolean Methods | Improve this Doc View Source HasChanges() Declaration public bool HasChanges() Returns Type Description System.Boolean"
  },
  "api/GDX.Editor.VersionControl.html": {
    "href": "api/GDX.Editor.VersionControl.html",
    "title": "Class VersionControl | GDX",
    "keywords": "Class VersionControl A collection of version control related helper utilities. Inheritance System.Object VersionControl Namespace : GDX.Editor Syntax public static class VersionControl Methods | Improve this Doc View Source CheckoutFolder(String) Synchronously checkout the contents of a folder if under source control known to Unity, and with it enabled. Declaration public static void CheckoutFolder(string folderPath) Parameters Type Name Description System.String folderPath The absolute path to the target folder. | Improve this Doc View Source GetAssetListFromFolder(String, String, SearchOption) Get an UnityEditor.VersionControl.AssetList from an absoluteDirectoryPath . Declaration public static AssetList GetAssetListFromFolder(string absoluteDirectoryPath, string searchPattern = \"*.*\", SearchOption searchOption = SearchOption.AllDirectories) Parameters Type Name Description System.String absoluteDirectoryPath A fully qualified path on disk to query. System.String searchPattern The search pattern to look for files with. System.IO.SearchOption searchOption What level of searching should be done. Returns Type Description UnityEditor.VersionControl.AssetList An UnityEditor.VersionControl.AssetList containing any valid assets under version control."
  },
  "api/GDX.EnumExtensions.html": {
    "href": "api/GDX.EnumExtensions.html",
    "title": "Class EnumExtensions | GDX",
    "keywords": "Class EnumExtensions Enumeration Based Extension Methods Inheritance System.Object EnumExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class EnumExtensions Methods | Improve this Doc View Source HasFlags<T>(T, T) Determine if the provide flags ( needles ) are found in the haystack . Declaration public static bool HasFlags<T>(this T haystack, T needles) where T : struct, Enum Parameters Type Name Description T haystack A predefined flag based enumeration. T needles A set of flags to search for in the predefined enumeration. Returns Type Description System.Boolean true if the needles are found in the haystack, otherwise false. Type Parameters Name Description T The enumeration's type. Remarks Faster then System.Enum.HasFlag(System.Enum) ."
  },
  "api/GDX.GameObjectExtensions.html": {
    "href": "api/GDX.GameObjectExtensions.html",
    "title": "Class GameObjectExtensions | GDX",
    "keywords": "Class GameObjectExtensions UnityEngine.GameObject Based Extension Methods Inheritance System.Object GameObjectExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class GameObjectExtensions Methods | Improve this Doc View Source DestroyChildren(GameObject, Boolean, Boolean) Destroy child UnityEngine.GameObject . Declaration public static void DestroyChildren(this GameObject targetGameObject, bool deactivateBeforeDestroy = true, bool destroyInactive = true) Parameters Type Name Description UnityEngine.GameObject targetGameObject The parent UnityEngine.GameObject to look at. System.Boolean deactivateBeforeDestroy Should the targetGameObject 's children be deactivated before destroying? This can be used to immediately hide an object, that will be destroyed at the end of the frame. System.Boolean destroyInactive Should inactive UnityEngine.GameObject be destroyed as well? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetFirstComponentInChildrenComplex<T>(GameObject, Boolean, Boolean, Int32) A slightly more complex version of UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) which allows for different hinted search options. Declaration public static T GetFirstComponentInChildrenComplex<T>(this GameObject targetGameObject, bool includeInactive = false, bool lookInChildrenFirst = false, int maxLevelsOfRecursion = -1) Parameters Type Name Description UnityEngine.GameObject targetGameObject The target UnityEngine.GameObject to use as the base for the search. System.Boolean includeInactive Include inactive child UnityEngine.GameObject s when looking for the UnityEngine.Component . System.Boolean lookInChildrenFirst Should children UnityEngine.GameObject be searched before the targetGameObject 's UnityEngine.GameObject . System.Int32 maxLevelsOfRecursion The maximum levels of recursion when looking for a UnityEngine.Component , -1 for infinite recursion. Returns Type Description T The first found UnityEngine.Component . Type Parameters Name Description T The target UnityEngine.Component type that is being looked for. Remarks If the maxLevelsOfRecursion is set to 1; this will search the targetGameObject and its immediate children only. The internal UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) has optimizations internally in engine code which make it faster in different scenarios. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetOrAddComponent<T>(GameObject) Get a component by type from a targetGameObject , if it is not found add and return it. Declaration public static T GetOrAddComponent<T>(this GameObject targetGameObject) where T : Component Parameters Type Name Description UnityEngine.GameObject targetGameObject The UnityEngine.GameObject that we should query for the component. Returns Type Description T The component on the targetGameObject . Type Parameters Name Description T The type of component. Remarks Adding a component at runtime is a performance nightmare. Use with caution! Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetScenePath(GameObject) Get an in scene path to the targetGameObject . Declaration public static string GetScenePath(this GameObject targetGameObject) Parameters Type Name Description UnityEngine.GameObject targetGameObject The UnityEngine.GameObject which to derive a path from. Returns Type Description System.String A created path System.String . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.html": {
    "href": "api/GDX.html",
    "title": "Namespace GDX | GDX",
    "keywords": "Namespace GDX Classes AddressablesExtensions Addressables Based Extension Methods Array2DExtensions Array2D Based Extension Methods ArrayExtensions Array Based Extension Methods BoxColliderExtensions UnityEngine.BoxCollider Based Extension Methods ByteExtensions System.Byte Based Extension Methods CameraExtensions UnityEngine.Camera Based Extension Methods CapsuleColliderExtensions UnityEngine.CapsuleCollider Based Extension Methods Config Project-wide configuration configurable for runtime override. ConfigDefaults The default values used by Config . Core Display A collection of display related helper utilities. EnumExtensions Enumeration Based Extension Methods GameObjectExtensions UnityEngine.GameObject Based Extension Methods IListExtensions System.Collections.Generic.IList<T> Based Extension Methods Localization A collection of localization related helper utilities. Memory A collection of memory related helper utilities. MeshExtensions UnityEngine.Mesh Based Extension Methods MonoBehaviourExtensions UnityEngine.MonoBehaviour Based Extension Methods NavMeshPathExtensions UnityEngine.AI.NavMeshPath Based Extension Methods Platform A collection of platform related helper utilities. Reflection A collection of reflection related helper utilities. RigidbodyExtensions UnityEngine.Rigidbody Based Extension Methods SimpleListExtensions SimpleList<T> Based Extension Methods StringExtensions System.String Based Extension Methods Trace Trace logging functionality. TransformExtensions UnityEngine.Transform Based Extension Methods TransientReference A comparable weak reference to an object which will not prevent garbage collection. It will positively compare against similar targeted reference trackers as well as the actual target object. UnsupportedRuntimeException An exception used to indicate when a method is unavailable on a specific runtime. Vector2Extensions UnityEngine.Vector2 Based Extension Methods Vector3Extensions UnityEngine.Vector3 Based Extension Methods Structs SegmentedString A segmented collection of System.Char . SemanticVersion A Semantic Versioning structure. Enums Localization.Language A list of supported languages. Trace.TraceLevel Trace Levels"
  },
  "api/GDX.IListExtensions.html": {
    "href": "api/GDX.IListExtensions.html",
    "title": "Class IListExtensions | GDX",
    "keywords": "Class IListExtensions System.Collections.Generic.IList<T> Based Extension Methods Inheritance System.Object IListExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class IListExtensions Methods | Improve this Doc View Source AddUniqueItem<T>(IList<T>, T) Add an item to a System.Collections.Generic.IList<T> , but only if it is not already contained. Declaration public static bool AddUniqueItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to add too. T targetItem The target object to add. Returns Type Description System.Boolean true/false if this operation was able to add the item. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . | Improve this Doc View Source AddUniqueRange<T>(IList<T>, T[]) Add a range of items to a System.Collections.Generic.IList<T> , checking if each item is unique prior to adding. Declaration public static void AddUniqueRange<T>(this IList<T> targetList, T[] targetItems) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to add too. T[] targetItems The array of items to add. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . | Improve this Doc View Source ContainsItem<T>(IList<T>, T) Does targetList contain targetItem ? Declaration public static bool ContainsItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to look in. T targetItem The target object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source ContainsReference<T>(IList<T>, T) Does targetList contain targetItem ? Declaration public static bool ContainsReference<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to look in. T targetItem The target object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source RemoveFirstItem<T>(IList<T>, T) Removes the first targetItem from the provided targetList . Declaration public static bool RemoveFirstItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . T targetItem The target object to remove from the targetList . Returns Type Description System.Boolean true/false if the item was removed. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveItems<T>(IList<T>, T) Removes all targetItem from the provided targetList . Declaration public static bool RemoveItems<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . T targetItem The target object to remove from the targetList . Returns Type Description System.Boolean true/false if the item was removed. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 , uses object pointers. | Improve this Doc View Source RemoveItemSwap<T>(IList<T>, Int32) Replaces the object found at the provided index with the last object in targetList , then removes the last item from the targetList . Declaration public static void RemoveItemSwap<T>(this IList<T> targetList, int index) Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . System.Int32 index The index of the item to remove. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks This make sure that you are always removing from the end of a System.Collections.Generic.IList<T> . | Improve this Doc View Source RemoveLastItem<T>(IList<T>, T) Removes the last targetItem from the provided targetList . Declaration public static bool RemoveLastItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . T targetItem The target object to remove from the targetList . Returns Type Description System.Boolean true/false if the item was removed. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source Shuffle<T>(IList<T>) Shuffle the items in the targetList . Declaration public static void Shuffle<T>(this IList<T> targetList) Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> ."
  },
  "api/GDX.IO.CoalesceStream.html": {
    "href": "api/GDX.IO.CoalesceStream.html",
    "title": "Class CoalesceStream | GDX",
    "keywords": "Class CoalesceStream Inheritance System.Object System.MarshalByRefObject System.IO.Stream CoalesceStream Implements System.IAsyncDisposable System.IDisposable Inherited Members System.IO.Stream.Null System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.Close() System.IO.Stream.CopyTo(System.IO.Stream) System.IO.Stream.CopyTo(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Threading.CancellationToken) System.IO.Stream.CreateWaitHandle() System.IO.Stream.Dispose() System.IO.Stream.Dispose(System.Boolean) System.IO.Stream.DisposeAsync() System.IO.Stream.EndRead(System.IAsyncResult) System.IO.Stream.EndWrite(System.IAsyncResult) System.IO.Stream.FlushAsync() System.IO.Stream.FlushAsync(System.Threading.CancellationToken) System.IO.Stream.ObjectInvariant() System.IO.Stream.Read(System.Span<System.Byte>) System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.ReadAsync(System.Memory<System.Byte>, System.Threading.CancellationToken) System.IO.Stream.Synchronized(System.IO.Stream) System.IO.Stream.Write(System.ReadOnlySpan<System.Byte>) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.WriteAsync(System.ReadOnlyMemory<System.Byte>, System.Threading.CancellationToken) System.IO.Stream.CanTimeout System.IO.Stream.ReadTimeout System.IO.Stream.WriteTimeout System.MarshalByRefObject.GetLifetimeService() System.MarshalByRefObject.InitializeLifetimeService() System.MarshalByRefObject.MemberwiseClone(System.Boolean) Namespace : GDX.IO Syntax public class CoalesceStream : Stream, IAsyncDisposable, IDisposable Constructors | Improve this Doc View Source CoalesceStream() Declaration public CoalesceStream() | Improve this Doc View Source CoalesceStream(Byte[]) Declaration public CoalesceStream(byte[] source) Parameters Type Name Description System.Byte [] source | Improve this Doc View Source CoalesceStream(Int32) Declaration public CoalesceStream(int length) Parameters Type Name Description System.Int32 length | Improve this Doc View Source CoalesceStream(Int64) Declaration public CoalesceStream(long length) Parameters Type Name Description System.Int64 length Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean Overrides System.IO.Stream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean Overrides System.IO.Stream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides System.IO.Stream.CanWrite | Improve this Doc View Source Length Declaration public override long Length { get; } Property Value Type Description System.Int64 Overrides System.IO.Stream.Length | Improve this Doc View Source Position Declaration public sealed override long Position { get; set; } Property Value Type Description System.Int64 Overrides System.IO.Stream.Position Methods | Improve this Doc View Source Flush() Declaration public override void Flush() Overrides System.IO.Stream.Flush() | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Overrides System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32) | Improve this Doc View Source ReadByte() Declaration public override int ReadByte() Returns Type Description System.Int32 Overrides System.IO.Stream.ReadByte() | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description System.Int64 offset System.IO.SeekOrigin origin Returns Type Description System.Int64 Overrides System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin) | Improve this Doc View Source SetLength(Int64) Declaration public sealed override void SetLength(long value) Parameters Type Name Description System.Int64 value Overrides System.IO.Stream.SetLength(System.Int64) | Improve this Doc View Source Write(Byte[], Int32, Int32) Declaration public sealed override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count Overrides System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32) | Improve this Doc View Source WriteByte(Byte) Declaration public override void WriteByte(byte value) Parameters Type Name Description System.Byte value Overrides System.IO.Stream.WriteByte(System.Byte) Implements System.IAsyncDisposable System.IDisposable"
  },
  "api/GDX.IO.Compression.html": {
    "href": "api/GDX.IO.Compression.html",
    "title": "Namespace GDX.IO.Compression | GDX",
    "keywords": "Namespace GDX.IO.Compression Classes TarFile Provides static methods for extracting tar files and tarballs."
  },
  "api/GDX.IO.Compression.TarFile.html": {
    "href": "api/GDX.IO.Compression.TarFile.html",
    "title": "Class TarFile | GDX",
    "keywords": "Class TarFile Provides static methods for extracting tar files and tarballs. Inheritance System.Object TarFile Namespace : GDX.IO.Compression Syntax public static class TarFile Methods | Improve this Doc View Source ExtractStream(Stream, String) Extract a tar formatted System.IO.Stream to the destinationDirectoryName . Declaration public static void ExtractStream(Stream sourceStream, string destinationDirectoryName) Parameters Type Name Description System.IO.Stream sourceStream The System.IO.Stream which to extract from. System.String destinationDirectoryName Output directory to write the files. | Improve this Doc View Source ExtractToDirectory(String, String, Boolean) Extracts all the files in the specified tar/tarball to a directory on the file system. Declaration public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool forceGZipDataFormat = false) Parameters Type Name Description System.String sourceArchiveFileName The path to the archive that is to be extracted. System.String destinationDirectoryName The path to the directory in which to place the extracted files, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory. System.Boolean forceGZipDataFormat Enforce inflating the file via a System.IO.Compression.GZipStream . Examples A synchronous approach to extracting the contents of a file, to a folder: TarFile.ExtractToDirectory(\"C:\\Temp\\DownloadCache.tar.gz\", \"C:\\Saved\");"
  },
  "api/GDX.IO.html": {
    "href": "api/GDX.IO.html",
    "title": "Namespace GDX.IO | GDX",
    "keywords": "Namespace GDX.IO Classes CoalesceStream"
  },
  "api/GDX.Jobs.ParallelFor.Color32CompareJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.Color32CompareJob.html",
    "title": "Struct Color32CompareJob | GDX",
    "keywords": "Struct Color32CompareJob Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct Color32CompareJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source Percentage The percent difference between the two values. Declaration [WriteOnly] public NativeArray<float> Percentage Field Value Type Description Unity.Collections.NativeArray < System.Single > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.Color32MatchJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.Color32MatchJob.html",
    "title": "Struct Color32MatchJob | GDX",
    "keywords": "Struct Color32MatchJob Determines if the UnityEngine.Color32 s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct Color32MatchJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source Match Does the color match? Declaration [WriteOnly] public NativeArray<bool> Match Field Value Type Description Unity.Collections.NativeArray < System.Boolean > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.ColorCompareJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.ColorCompareJob.html",
    "title": "Struct ColorCompareJob | GDX",
    "keywords": "Struct ColorCompareJob Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct ColorCompareJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source Percentage The percent difference between the two values. Declaration [WriteOnly] public NativeArray<float> Percentage Field Value Type Description Unity.Collections.NativeArray < System.Single > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.ColorMatchJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.ColorMatchJob.html",
    "title": "Struct ColorMatchJob | GDX",
    "keywords": "Struct ColorMatchJob Determines if the UnityEngine.Color s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct ColorMatchJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source Match Does the color match? Declaration [WriteOnly] public NativeArray<bool> Match Field Value Type Description Unity.Collections.NativeArray < System.Boolean > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.html": {
    "href": "api/GDX.Jobs.ParallelFor.html",
    "title": "Namespace GDX.Jobs.ParallelFor | GDX",
    "keywords": "Namespace GDX.Jobs.ParallelFor Structs Color32CompareJob Color32MatchJob Determines if the UnityEngine.Color32 s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. ColorCompareJob ColorMatchJob Determines if the UnityEngine.Color s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. IntegerBufferCopyJob Copy one Unity.Collections.NativeArray<T> typed as System.Int32 to another in parallel. IntegerBufferFillJob Fills a Unity.Collections.NativeArray<T> typed as System.Int32 with a value in parallel. IntegerBufferSwapJob Swaps a Unity.Collections.NativeArray<T> typed as System.Int32 with a another in parallel."
  },
  "api/GDX.Jobs.ParallelFor.IntegerBufferCopyJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.IntegerBufferCopyJob.html",
    "title": "Struct IntegerBufferCopyJob | GDX",
    "keywords": "Struct IntegerBufferCopyJob Copy one Unity.Collections.NativeArray<T> typed as System.Int32 to another in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct IntegerBufferCopyJob : IJobParallelFor Fields | Improve this Doc View Source Destination The destination Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration [WriteOnly] public NativeArray<int> Destination Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Write-only. | Improve this Doc View Source Source The source Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration [ReadOnly] public NativeArray<int> Source Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Read-only. Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.IntegerBufferFillJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.IntegerBufferFillJob.html",
    "title": "Struct IntegerBufferFillJob | GDX",
    "keywords": "Struct IntegerBufferFillJob Fills a Unity.Collections.NativeArray<T> typed as System.Int32 with a value in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct IntegerBufferFillJob : IJobParallelFor Fields | Improve this Doc View Source Buffer The Unity.Collections.NativeArray<T> which is going to be filled. Declaration [WriteOnly] public NativeArray<int> Buffer Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Write-only. | Improve this Doc View Source FillValue The System.Int32 value to fill the native array with. Declaration [ReadOnly] public int FillValue Field Value Type Description System.Int32 Remarks Read-only. Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.IntegerBufferSwapJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.IntegerBufferSwapJob.html",
    "title": "Struct IntegerBufferSwapJob | GDX",
    "keywords": "Struct IntegerBufferSwapJob Swaps a Unity.Collections.NativeArray<T> typed as System.Int32 with a another in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct IntegerBufferSwapJob : IJobParallelFor Remarks The IntegerBufferSwapJob relies on the Unity.Jobs.IJobParallelFor which requires UnityEngine.CoreModule.dll. Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration public NativeArray<int> A Field Value Type Description Unity.Collections.NativeArray < System.Int32 > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration public NativeArray<int> B Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Localization.html": {
    "href": "api/GDX.Localization.html",
    "title": "Class Localization | GDX",
    "keywords": "Class Localization A collection of localization related helper utilities. Inheritance System.Object Localization Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Localization Fields | Improve this Doc View Source LocalTimestampFormat The local ISO 8601 compliant System.DateTime.ToString(System.String) . Declaration public const string LocalTimestampFormat = \"yyyy-MM-dd HH\\\\:mm\\\\:ss\" Field Value Type Description System.String | Improve this Doc View Source UtcTimestampFormat The UTC ISO 8601 compliant System.DateTime.ToString(System.String) . Declaration public const string UtcTimestampFormat = \"yyyy-MM-ddTHH\\\\:mm\\\\:ss.fffffffzzz\" Field Value Type Description System.String Methods | Improve this Doc View Source GetHumanReadableFileSize(Int64) Creates a more human readable System.String of a byte size. Declaration public static string GetHumanReadableFileSize(long base2Size) Parameters Type Name Description System.Int64 base2Size The number of bytes (binary) to measure. Returns Type Description System.String A human readable version of the provided base2Size . Examples A byte size of 1024, will return a string of 1 KB. | Improve this Doc View Source GetIETF_BCP47(Localization.Language) Get the IETF BCP 47 language code for targetLanguage . Declaration public static string GetIETF_BCP47(this Localization.Language targetLanguage) Parameters Type Name Description Localization.Language targetLanguage The target Localization.Language . Returns Type Description System.String The language code. Remarks Two additional non-compliant values may be returned DEV or DEFAULT. | Improve this Doc View Source GetISO639_1(Localization.Language) Get the ISO 639-1 language code for targetLanguage . Declaration public static string GetISO639_1(this Localization.Language targetLanguage) Parameters Type Name Description Localization.Language targetLanguage The target Localization.Language . Returns Type Description System.String The language code. Remarks Two additional non-compliant values may be returned DEV or DEFAULT. | Improve this Doc View Source GetSystemLanguage() Get the Localization.Language equivalent of the UnityEngine.SystemLanguage . Declaration public static Localization.Language GetSystemLanguage() Returns Type Description Localization.Language The appropriate Localization.Language , or default. | Improve this Doc View Source GetTimestampFormat(Localization.Language) Get the localized System.DateTime . System.DateTime.ToString(System.String) for targetLanguage . Declaration public static string GetTimestampFormat(this Localization.Language targetLanguage) Parameters Type Name Description Localization.Language targetLanguage The target Localization.Language . Returns Type Description System.String The format System.String . | Improve this Doc View Source SetDefaultCulture() Sets the current threads culture to a defined setting in Config . Declaration public static void SetDefaultCulture() Remarks Can be used to avoid issues with culture settings without a Gregorian Calendar. Configurable to automatically execute after assemblies are loaded."
  },
  "api/GDX.Localization.Language.html": {
    "href": "api/GDX.Localization.Language.html",
    "title": "Enum Localization.Language | GDX",
    "keywords": "Enum Localization.Language A list of supported languages. Namespace : GDX Syntax public enum Language : ushort Remarks This does not differentiate between things like French Canadian and French. Fields Name Description Default Development English French German Polish Russian Spanish Extension Methods Localization.GetISO639_1() Localization.GetIETF_BCP47() Localization.GetTimestampFormat() EnumExtensions.HasFlags<Localization.Language>(Localization.Language)"
  },
  "api/GDX.Mathematics.Byte2.html": {
    "href": "api/GDX.Mathematics.Byte2.html",
    "title": "Struct Byte2 | GDX",
    "keywords": "Struct Byte2 A System.Byte vector. Implements System.IEquatable < Byte2 > System.IFormattable Namespace : GDX.Mathematics Syntax [Serializable] public struct Byte2 : IEquatable<Byte2>, IFormattable Constructors | Improve this Doc View Source Byte2(Byte2) Constructs a Byte2 from a Byte2 value. Declaration public Byte2(Byte2 xy) Parameters Type Name Description Byte2 xy The value to copy. | Improve this Doc View Source Byte2(Boolean) Constructs a Byte2 from a single System.Boolean value by converting it to System.Byte and assigning it to every component. Declaration public Byte2(bool v) Parameters Type Name Description System.Boolean v The System.Boolean value to transcribe. | Improve this Doc View Source Byte2(Byte) Constructs a Byte2 from a single System.Byte value by assigning it to every component. Declaration public Byte2(byte v) Parameters Type Name Description System.Byte v The value to copy to X and Y . | Improve this Doc View Source Byte2(Byte, Byte) Constructs a Byte2 from two System.Byte values. Declaration public Byte2(byte x, byte y) Parameters Type Name Description System.Byte x X value. System.Byte y Y value. | Improve this Doc View Source Byte2(Double) Constructs a Byte2 from a single System.Double value by converting it to System.Byte and assigning it to every component. Declaration public Byte2(double v) Parameters Type Name Description System.Double v The System.Double value to transcribe. | Improve this Doc View Source Byte2(Int32, Int32) Create a Byte2 from two System.Int32 values. Declaration public Byte2(int x, int y) Parameters Type Name Description System.Int32 x X value. System.Int32 y Y value. | Improve this Doc View Source Byte2(Single) Constructs a Byte2 from a single System.Single value by converting it to System.Byte and assigning it to every component. Declaration public Byte2(float v) Parameters Type Name Description System.Single v The System.Single value to transcribe. | Improve this Doc View Source Byte2(bool2) Constructs a Byte2 from a Unity.Mathematics.bool2 by conversion. Declaration public Byte2(bool2 v) Parameters Type Name Description Unity.Mathematics.bool2 v The value to transcribe. | Improve this Doc View Source Byte2(double2) Constructs a Byte2 from a Unity.Mathematics.double2 by conversion. Declaration public Byte2(double2 v) Parameters Type Name Description Unity.Mathematics.double2 v The value to transcribe. | Improve this Doc View Source Byte2(float2) Constructs a Byte2 from a Unity.Mathematics.float2 by conversion. Declaration public Byte2(float2 v) Parameters Type Name Description Unity.Mathematics.float2 v The value to transcribe. Fields | Improve this Doc View Source X X System.Byte . Declaration public byte X Field Value Type Description System.Byte | Improve this Doc View Source Y Y System.Byte . Declaration public byte Y Field Value Type Description System.Byte Properties | Improve this Doc View Source Item[Int32] Get the System.Byte at the provided index . Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Returns the byte element at a specified index. Property Value Type Description System.Byte Exceptions Type Condition System.ArgumentException Out of range check. Methods | Improve this Doc View Source Equals(Byte2) Does the Byte2 equal another Byte2 . Declaration public bool Equals(Byte2 rhs) Parameters Type Name Description Byte2 rhs Target Byte2 to compare with. Returns Type Description System.Boolean Returns true if the Byte2 is equal to a given Byte2 , false otherwise. | Improve this Doc View Source Equals(Object) Does the Byte2 equal another System.Object (casted). Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Target System.Object to compare with. Returns Type Description System.Boolean Returns true if the Byte2 is equal to a given Byte2 , false otherwise. Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Get a hash code from the Byte2 . Declaration public override int GetHashCode() Returns Type Description System.Int32 A System.Int32 value. Overrides System.ValueType.GetHashCode() Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. | Improve this Doc View Source ToString() Returns a System.String representation of the Byte2 . Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() | Improve this Doc View Source ToString(String, IFormatProvider) Convert the Byte2 to a System.String using the provided format . Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format Specified format System.String . System.IFormatProvider formatProvider Culture-specific format information. Returns Type Description System.String Returns a string representation of the Byte2 using a specified format and culture-specific format information. Operators | Improve this Doc View Source Addition(Byte2, Byte2) Add two Byte2 . Declaration public static Byte2 operator +(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of an addition operation on two Byte2 . | Improve this Doc View Source Addition(Byte2, Byte) Add a System.Byte to both components of a Byte2 . Declaration public static Byte2 operator +(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of an addition operation on an Byte2 and an System.Byte value. | Improve this Doc View Source Addition(Byte, Byte2) Add a Byte2 to a System.Byte . Declaration public static Byte2 operator +(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of an addition operation on an System.Byte value and an Byte2 . | Improve this Doc View Source BitwiseAnd(Byte2, Byte2) Bitwise AND two Byte2 values. Declaration public static Byte2 operator &(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise AND operation on two Byte2 . | Improve this Doc View Source BitwiseAnd(Byte2, Byte) Bitwise AND a Byte2 and a System.Byte . Declaration public static Byte2 operator &(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a bitwise AND operation on a Byte2 and a System.Byte value. | Improve this Doc View Source BitwiseAnd(Byte, Byte2) Bitwise AND a System.Byte and a Byte2 . Declaration public static Byte2 operator &(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise AND operation on a System.Byte and a Byte2 value. | Improve this Doc View Source BitwiseOr(Byte2, Byte2) Bitwise OR two Byte2 values. Declaration public static Byte2 operator |(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise OR operation on two Byte2 . | Improve this Doc View Source BitwiseOr(Byte2, Byte) Bitwise OR a Byte2 and a System.Byte . Declaration public static Byte2 operator |(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a bitwise OR operation on a Byte2 and a System.Byte value. | Improve this Doc View Source BitwiseOr(Byte, Byte2) Bitwise OR a System.Byte and a Byte2 . Declaration public static Byte2 operator |(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise OR operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Decrement(Byte2) Decrement Byte2 values. Declaration public static Byte2 operator --(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of a decrement operation on a Byte2 . | Improve this Doc View Source Division(Byte2, Byte2) Divide a Byte2 by another Byte2 . Declaration public static Byte2 operator /(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a division operation on two Byte2 . | Improve this Doc View Source Division(Byte2, Byte) Divide a Byte2 by a System.Byte . Declaration public static Byte2 operator /(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a division operation on a Byte2 and System.Byte value. | Improve this Doc View Source Division(Byte, Byte2) Divide a System.Byte by a Byte2 . Declaration public static Byte2 operator /(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a division operation on a System.Byte value and Byte2 . | Improve this Doc View Source Equality(Byte2, Byte2) Determine if one Byte2 is equal to another Byte2 . Declaration public static bool2 operator ==(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of an EQUALITY operation on two Byte2 . | Improve this Doc View Source Equality(Byte2, Byte) Determine if both components of a Byte2 are equal to a System.Byte . Declaration public static bool2 operator ==(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of an EQUALITY operation on a Byte2 and a System.Byte . | Improve this Doc View Source Equality(Byte, Byte2) Determine if both components of a Byte2 are equal to a System.Byte . Declaration public static bool2 operator ==(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of an EQUALITY operation on a System.Byte and a Byte2 . | Improve this Doc View Source ExclusiveOr(Byte2, Byte2) Bitwise XOR two Byte2 values. Declaration public static Byte2 operator ^(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise EXCLUSIVE OR operation on two Byte2 . | Improve this Doc View Source ExclusiveOr(Byte2, Byte) Bitwise XOR a Byte2 and a System.Byte . Declaration public static Byte2 operator ^(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a bitwise XOR operation on a Byte2 and a System.Byte value. | Improve this Doc View Source ExclusiveOr(Byte, Byte2) Bitwise XOR a System.Byte and a Byte2 . Declaration public static Byte2 operator ^(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise XOR operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Explicit(Boolean to Byte2) Explicitly converts a single System.Boolean value to a Byte2 by converting it to System.Byte and assigning it to every component. Declaration public static explicit operator Byte2(bool v) Parameters Type Name Description System.Boolean v The System.Boolean value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Explicit(Double to Byte2) Explicitly converts a single System.Double value to a Byte2 by converting it to System.Byte and assigning it to every component. Declaration public static explicit operator Byte2(double v) Parameters Type Name Description System.Double v The System.Double value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Explicit(Single to Byte2) Explicitly converts a single System.Single value to a Byte2 by converting it to System.Byte and assigning it to every component. Declaration public static explicit operator Byte2(float v) Parameters Type Name Description System.Single v The System.Single value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Explicit(bool2 to Byte2) Explicitly converts a Unity.Mathematics.bool2 to a Byte2 by conversion. Declaration public static explicit operator Byte2(bool2 v) Parameters Type Name Description Unity.Mathematics.bool2 v The value to transcribe. Returns Type Description Byte2 A new Byte2 created from v . | Improve this Doc View Source Explicit(double2 to Byte2) Explicitly converts a Unity.Mathematics.double2 to a Byte2 by conversion. Declaration public static explicit operator Byte2(double2 v) Parameters Type Name Description Unity.Mathematics.double2 v The value to transcribe. Returns Type Description Byte2 A new Byte2 created from v . | Improve this Doc View Source Explicit(float2 to Byte2) Explicitly converts a Unity.Mathematics.bool2 to a Byte2 by conversion. Declaration public static explicit operator Byte2(float2 v) Parameters Type Name Description Unity.Mathematics.float2 v The value to transcribe. Returns Type Description Byte2 A new Byte2 created from v . | Improve this Doc View Source GreaterThan(Byte2, Byte2) Determine if one Byte2 is less than another Byte2 . Declaration public static bool2 operator>(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on two Byte2 . | Improve this Doc View Source GreaterThan(Byte2, Byte) Determine if Byte2 is greater than a System.Byte . Declaration public static bool2 operator>(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN operation on a Byte2 and a System.Byte value. | Improve this Doc View Source GreaterThan(Byte, Byte2) Determine if System.Byte is greater than a Byte2 . Declaration public static bool2 operator>(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN operation on a System.Byte and a Byte2 value. | Improve this Doc View Source GreaterThanOrEqual(Byte2, Byte2) Determine if Byte2 is greater than or equal a Byte2 . Declaration public static bool2 operator >=(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN OR EQUAL operation on a Byte2 and a Byte2 value. | Improve this Doc View Source GreaterThanOrEqual(Byte2, Byte) Determine if Byte2 is greater than or equal a System.Byte . Declaration public static bool2 operator >=(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN OR EQUAL operation on a Byte2 and a System.Byte value. | Improve this Doc View Source GreaterThanOrEqual(Byte, Byte2) Determine if System.Byte is greater than or equal a Byte2 . Declaration public static bool2 operator >=(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN OR EQUAL operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Implicit(Byte to Byte2) Implicitly converts a single System.Byte value to a Byte2 by assigning it to every component. Declaration public static implicit operator Byte2(byte v) Parameters Type Name Description System.Byte v The System.Byte value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Increment(Byte2) Increment Byte2 values. Declaration public static Byte2 operator ++(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of an increment operation on a Byte2 . | Improve this Doc View Source Inequality(Byte2, Byte2) Determine if one Byte2 is not equal to another Byte2 . Declaration public static bool2 operator !=(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a NOT EQUAL operation on two Byte2 . | Improve this Doc View Source Inequality(Byte2, Byte) Determine if both components of a Byte2 are not equal to a System.Byte . Declaration public static bool2 operator !=(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a NOT EQUAL operation on a Byte2 and a System.Byte . | Improve this Doc View Source Inequality(Byte, Byte2) Determine if both components of a Byte2 are not equal to a System.Byte . Declaration public static bool2 operator !=(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a NOT EQUAL operation on a System.Byte and a Byte2 . | Improve this Doc View Source LessThan(Byte2, Byte2) Determine if one Byte2 is less than another Byte2 . Declaration public static bool2 operator <(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on two Byte2 . | Improve this Doc View Source LessThan(Byte2, Byte) Determine if Byte2 is less than a System.Byte . Declaration public static bool2 operator <(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on a Byte2 and a System.Byte value. | Improve this Doc View Source LessThan(Byte, Byte2) Determine if System.Byte is less than a Byte2 . Declaration public static bool2 operator <(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on a System.Byte and a Byte2 value. | Improve this Doc View Source LessThanOrEqual(Byte2, Byte2) Determine if one Byte2 is less than or equal to another Byte2 . Declaration public static bool2 operator <=(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN OR EQUAL operation on two Byte2 . | Improve this Doc View Source LessThanOrEqual(Byte2, Byte) Determine if Byte2 is less than or equal a System.Byte . Declaration public static bool2 operator <=(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN OR EQUAL operation on a Byte2 and a System.Byte value. | Improve this Doc View Source LessThanOrEqual(Byte, Byte2) Determine if System.Byte is less than or equal a Byte2 . Declaration public static bool2 operator <=(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN OR EQUAL operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Modulus(Byte2, Byte2) Modulus a Byte2 by another Byte2 . Declaration public static Byte2 operator %(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a modulus operation on two Byte2 . | Improve this Doc View Source Modulus(Byte2, Byte) Modulus a Byte2 by a System.Byte . Declaration public static Byte2 operator %(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a modulus operation on a Byte2 and System.Byte value. | Improve this Doc View Source Modulus(Byte, Byte2) Modulus a System.Byte by a Byte2 . Declaration public static Byte2 operator %(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a modulus operation on a System.Byte value and Byte2 . | Improve this Doc View Source Multiply(Byte2, Byte2) Multiply two Byte2 . Declaration public static Byte2 operator *(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a multiplication operation on two Byte2 . | Improve this Doc View Source Multiply(Byte2, Byte) Multiply a Byte2 by a System.Byte . Declaration public static Byte2 operator *(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a multiplication operation on a Byte2 and a System.Byte value. | Improve this Doc View Source Multiply(Byte, Byte2) Multiply a System.Byte by a Byte2 . Declaration public static Byte2 operator *(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a multiplication operation on a System.Byte and a Byte2 value. | Improve this Doc View Source OnesComplement(Byte2) Bitwise NOT Byte2 values. Declaration public static Byte2 operator ~(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of a bitwise NOT operation on a Byte2 . | Improve this Doc View Source Subtraction(Byte2, Byte2) Subtract a Byte2 from another Byte2 . Declaration public static Byte2 operator -(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a subtraction operation on two Byte2 . | Improve this Doc View Source Subtraction(Byte2, Byte) Subtract a System.Byte from both components of a Byte2 . Declaration public static Byte2 operator -(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a subtraction operation on a Byte2 and a System.Byte value. | Improve this Doc View Source Subtraction(Byte, Byte2) Subtract both components of a Byte2 from a System.Byte . Declaration public static Byte2 operator -(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a subtraction operation on an System.Byte value and an Byte2 . | Improve this Doc View Source UnaryNegation(Byte2) Unary minus Byte2 values. Declaration public static Byte2 operator -(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of an unary minus operation on a Byte2 . | Improve this Doc View Source UnaryPlus(Byte2) Unary plus Byte2 values. Declaration public static Byte2 operator +(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of an unary plus operation on a Byte2 . Implements System.IEquatable<T> System.IFormattable"
  },
  "api/GDX.Mathematics.FibonacciHash.html": {
    "href": "api/GDX.Mathematics.FibonacciHash.html",
    "title": "Class FibonacciHash | GDX",
    "keywords": "Class FibonacciHash Inheritance System.Object FibonacciHash Namespace : GDX.Mathematics Syntax public static class FibonacciHash Methods | Improve this Doc View Source GetIndexFromHash(Int32, Byte) Takes the hash and multiplies it by 2^32 divided by the golden ratio, then right shifts it by shift to fit within a given power-of-two size. Declaration public static int GetIndexFromHash(int hash, byte shift) Parameters Type Name Description System.Int32 hash The key to find an index for. System.Byte shift How far to right shift in order to fit within a given power-of-two size. Returns Type Description System.Int32 The index to store the hash . | Improve this Doc View Source GetIndexFromHash(Int32, Int32) Takes the hash and finds an index within the provided pow2Length range with Fibonacci hashing. Declaration public static int GetIndexFromHash(int hash, int pow2Length) Parameters Type Name Description System.Int32 hash The hash to find an index for. System.Int32 pow2Length The power-of-two array length to find an index within. Returns Type Description System.Int32 | Improve this Doc View Source GetRightShiftFromPow2Length(Int32) Takes a 32-bit length equal to a power of two, and returns how many spaces another 32-bit int would need to shift in order to be a valid index within an array of that length. Declaration public static byte GetRightShiftFromPow2Length(int pow2Length) Parameters Type Name Description System.Int32 pow2Length A 32-bit int equal to a power of two. Returns Type Description System.Byte How many spaces a 32-bit int would need to shift in order to be a valid index within pow2Length ."
  },
  "api/GDX.Mathematics.html": {
    "href": "api/GDX.Mathematics.html",
    "title": "Namespace GDX.Mathematics | GDX",
    "keywords": "Namespace GDX.Mathematics Classes FibonacciHash Range Some simple logic to pick a value from a range. Rotate A set of functionality to extend on Unity's rotation based methods. Smooth Some helpful interpolation functionality. Structs Byte2 A System.Byte vector. LongDoubleConversionUnion"
  },
  "api/GDX.Mathematics.LongDoubleConversionUnion.html": {
    "href": "api/GDX.Mathematics.LongDoubleConversionUnion.html",
    "title": "Struct LongDoubleConversionUnion | GDX",
    "keywords": "Struct LongDoubleConversionUnion Namespace : GDX.Mathematics Syntax public struct LongDoubleConversionUnion Fields | Improve this Doc View Source DoubleValue Declaration public double DoubleValue Field Value Type Description System.Double | Improve this Doc View Source LongValue Declaration public long LongValue Field Value Type Description System.Int64"
  },
  "api/GDX.Mathematics.Random.html": {
    "href": "api/GDX.Mathematics.Random.html",
    "title": "Namespace GDX.Mathematics.Random | GDX",
    "keywords": "Namespace GDX.Mathematics.Random Classes RandomAdaptor Adapter to utilize a IRandomProvider with System.Random based systems, wrapping the provider in a class object with expected overrides. RandomWrapper Structs WELL1024a Generates pseudorandom values based on the WELL1024a algorithm. You must Dispose() manually. WELL1024a.WellState A complete state of WELL1024a . Interfaces IRandomProvider"
  },
  "api/GDX.Mathematics.Random.IRandomProvider.html": {
    "href": "api/GDX.Mathematics.Random.IRandomProvider.html",
    "title": "Interface IRandomProvider | GDX",
    "keywords": "Interface IRandomProvider Namespace : GDX.Mathematics.Random Syntax [VisualScriptingCompatible((short)4)] public interface IRandomProvider Methods | Improve this Doc View Source NextBoolean(Single) Returns a pseudorandom System.Boolean value based on chance, favoring false, with a default 50% chance . Declaration bool NextBoolean(float chance = 0.5F) Parameters Type Name Description System.Single chance The 0-1 System.Single percent chance of success. Returns Type Description System.Boolean A pseudorandom System.Boolean . | Improve this Doc View Source NextBytes(Byte[]) Fills a buffer with pseudorandom System.Byte . Declaration void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer to fill. Remarks The buffer shouldn't be null . | Improve this Doc View Source NextDouble(Double, Double) Returns the next pseudorandom System.Double between minValue and less then maxValue . Declaration double NextDouble(double minValue = 0, double maxValue = 1) Parameters Type Name Description System.Double minValue The lowest possible value (inclusive). System.Double maxValue The highest possible value (exclusive). Returns Type Description System.Double A pseudorandom System.Double . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextInteger(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue . Declaration int NextInteger(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, including itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.Int32.MaxValue to maxValue . | Improve this Doc View Source NextIntegerExclusive(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue , excluding maxValue itself. Declaration int NextIntegerExclusive(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, excluding itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextSingle(Single, Single) Returns the next pseudorandom System.Single between minValue and less then maxValue . Declaration float NextSingle(float minValue = 0F, float maxValue = 1F) Parameters Type Name Description System.Single minValue The lowest possible value (inclusive). System.Single maxValue The highest possible value (exclusive). Returns Type Description System.Single A pseudorandom System.Single . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextUnsignedInteger(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue . Declaration uint NextUnsignedInteger(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, including itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.UInt32.MaxValue to maxValue . | Improve this Doc View Source NextUnsignedIntegerExclusive(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue , excluding maxValue itself. Declaration uint NextUnsignedIntegerExclusive(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, excluding itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source Sample() Returns the next pseudorandom System.Double value, between 0.0 and 1.0. Declaration double Sample() Returns Type Description System.Double A pseudorandom System.Double floating point value."
  },
  "api/GDX.Mathematics.Random.RandomAdaptor.html": {
    "href": "api/GDX.Mathematics.Random.RandomAdaptor.html",
    "title": "Class RandomAdaptor | GDX",
    "keywords": "Class RandomAdaptor Adapter to utilize a IRandomProvider with System.Random based systems, wrapping the provider in a class object with expected overrides. Inheritance System.Object System.Random RandomAdaptor Inherited Members System.Random.NextBytes(System.Span<System.Byte>) Namespace : GDX.Mathematics.Random Syntax [VisualScriptingCompatible((short)4)] public class RandomAdaptor : Random Remarks This will create IL callvert operation codes! Try not to use this. Constructors | Improve this Doc View Source RandomAdaptor(IRandomProvider) Create an adaptor object which behaves like System.Random . Declaration public RandomAdaptor(IRandomProvider provider) Parameters Type Name Description IRandomProvider provider A qualified IRandomProvider . Remarks Will cause boxing of langword_csharp_struct based types like WELL1024a . This adaptor really should only be used where a method is expecting a System.Random . Methods | Improve this Doc View Source HasProvider() Is the provider present, and not null? Declaration public bool HasProvider() Returns Type Description System.Boolean true/false a provider is not null. | Improve this Doc View Source Next() Declaration public override int Next() Returns Type Description System.Int32 Overrides System.Random.Next() | Improve this Doc View Source Next(Int32) Declaration public override int Next(int maxValue) Parameters Type Name Description System.Int32 maxValue Returns Type Description System.Int32 Overrides System.Random.Next(System.Int32) | Improve this Doc View Source Next(Int32, Int32) Declaration public override int Next(int minValue, int maxValue) Parameters Type Name Description System.Int32 minValue System.Int32 maxValue Returns Type Description System.Int32 Overrides System.Random.Next(System.Int32, System.Int32) | Improve this Doc View Source NextBytes(Byte[]) Declaration public override void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer Overrides System.Random.NextBytes(System.Byte[]) | Improve this Doc View Source NextDouble() Declaration public override double NextDouble() Returns Type Description System.Double Overrides System.Random.NextDouble() | Improve this Doc View Source Sample() Declaration protected override double Sample() Returns Type Description System.Double Overrides System.Random.Sample()"
  },
  "api/GDX.Mathematics.Random.RandomWrapper.html": {
    "href": "api/GDX.Mathematics.Random.RandomWrapper.html",
    "title": "Class RandomWrapper | GDX",
    "keywords": "Class RandomWrapper Inheritance System.Object RandomWrapper Implements IRandomProvider Namespace : GDX.Mathematics.Random Syntax public class RandomWrapper : IRandomProvider Constructors | Improve this Doc View Source RandomWrapper() Declaration public RandomWrapper() | Improve this Doc View Source RandomWrapper(Int32) Declaration public RandomWrapper(int seed) Parameters Type Name Description System.Int32 seed Methods | Improve this Doc View Source NextBoolean(Single) Returns a pseudorandom System.Boolean value based on chance, favoring false, with a default 50% chance . Declaration public bool NextBoolean(float chance = 0.5F) Parameters Type Name Description System.Single chance The 0-1 System.Single percent chance of success. Returns Type Description System.Boolean A pseudorandom System.Boolean . | Improve this Doc View Source NextBytes(Byte[]) Fills a buffer with pseudorandom System.Byte . Declaration public void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer to fill. Remarks The buffer shouldn't be null . | Improve this Doc View Source NextDouble(Double, Double) Returns the next pseudorandom System.Double between minValue and less then maxValue . Declaration public double NextDouble(double minValue = 0, double maxValue = 1) Parameters Type Name Description System.Double minValue The lowest possible value (inclusive). System.Double maxValue The highest possible value (exclusive). Returns Type Description System.Double A pseudorandom System.Double . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextInteger(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue . Declaration public int NextInteger(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, including itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.Int32.MaxValue to maxValue . | Improve this Doc View Source NextIntegerExclusive(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue , excluding maxValue itself. Declaration public int NextIntegerExclusive(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, excluding itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextSingle(Single, Single) Returns the next pseudorandom System.Single between minValue and less then maxValue . Declaration public float NextSingle(float minValue = 0F, float maxValue = 1F) Parameters Type Name Description System.Single minValue The lowest possible value (inclusive). System.Single maxValue The highest possible value (exclusive). Returns Type Description System.Single A pseudorandom System.Single . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextUnsignedInteger(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue . Declaration public uint NextUnsignedInteger(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, including itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.UInt32.MaxValue to maxValue . | Improve this Doc View Source NextUnsignedIntegerExclusive(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue , excluding maxValue itself. Declaration public uint NextUnsignedIntegerExclusive(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, excluding itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source Sample() Returns the next pseudorandom System.Double value, between 0.0 and 1.0. Declaration public double Sample() Returns Type Description System.Double A pseudorandom System.Double floating point value. Implements IRandomProvider"
  },
  "api/GDX.Mathematics.Random.WELL1024a.html": {
    "href": "api/GDX.Mathematics.Random.WELL1024a.html",
    "title": "Struct WELL1024a | GDX",
    "keywords": "Struct WELL1024a Generates pseudorandom values based on the WELL1024a algorithm. You must Dispose() manually. Implements IRandomProvider System.IEquatable < WELL1024a > System.IDisposable Namespace : GDX.Mathematics.Random Syntax [VisualScriptingCompatible((short)4)] public struct WELL1024a : IRandomProvider, IEquatable<WELL1024a>, IDisposable Remarks Primarily based on the work of Chris Lomont , accessed on 2021-04-23. Additional understanding from Francois Panneton and Pierre L`Ecuyer , accessed on 2021-04-23. Constructors | Improve this Doc View Source WELL1024a(WELL1024a.WellState) Create a pseudorandom number generator from a restoreState . Declaration public WELL1024a(WELL1024a.WellState restoreState) Parameters Type Name Description WELL1024a.WellState restoreState A saved WELL1024a state. | Improve this Doc View Source WELL1024a(Int32) Creates a new pseudorandom number generator with the given seed . Declaration public WELL1024a(int seed) Parameters Type Name Description System.Int32 seed A System.Int32 value to use as a seed. Remarks The seed will have its sign stripped and stored as such in OriginalSeed . | Improve this Doc View Source WELL1024a(String, Boolean) Creates a new pseudorandom number generator with the given seed . Declaration public WELL1024a(string seed, bool forceUpperCase = true) Parameters Type Name Description System.String seed A System.String to create a System.UInt32 seed from. System.Boolean forceUpperCase Should the generated hashcode used as the seed be generated from an uppercase version of the seed . Remarks The created hashcode will have its sign stripped and stored as such in OriginalSeed . | Improve this Doc View Source WELL1024a(UInt32) Creates a new pseudorandom number generator with the given seed . Declaration public WELL1024a(uint seed) Parameters Type Name Description System.UInt32 seed A System.UInt32 value to use as a seed. Fields | Improve this Doc View Source Index The current index of use for the well array. Declaration public byte Index Field Value Type Description System.Byte Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source OriginalSeed A copy of the original seed used to initialize the WELL1024a . Declaration public readonly uint OriginalSeed Field Value Type Description System.UInt32 | Improve this Doc View Source SampleCount The number of times that this well has been sampled. Declaration public uint SampleCount Field Value Type Description System.UInt32 | Improve this Doc View Source State The state array of the well. Declaration public NativeArray<uint> State Field Value Type Description Unity.Collections.NativeArray < System.UInt32 > Methods | Improve this Doc View Source Dispose() Disposes of the native allocations. Declaration public void Dispose() | Improve this Doc View Source Equals(WELL1024a) Is one WELL1024a the same as the other . Declaration public bool Equals(WELL1024a other) Parameters Type Name Description WELL1024a other The WELL1024a to compare with. Returns Type Description System.Boolean true/false if they are fundamentally the same. Remarks Avoid using this format for comparison as it copies the data, where as Equals(ref WELL1024a) does not. | Improve this Doc View Source Equals(ref WELL1024a) Is one WELL1024a the same as the other . Declaration public bool Equals(ref WELL1024a other) Parameters Type Name Description WELL1024a other The WELL1024a to compare with. Returns Type Description System.Boolean true/false if they are fundamentally the same. | Improve this Doc View Source Equals(Object) Determines if the provided obj 's hash code is equal to this WELL1024a 's GetHashCode() . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare hash codes with. Returns Type Description System.Boolean true/false if the hash codes match. Overrides System.ValueType.Equals(System.Object) Remarks This doesnt preclude other objects of different types from having the same hashcode. | Improve this Doc View Source GetHashCode() Generate a hash code value for the given WELL1024a at its current state. Declaration public override int GetHashCode() Returns Type Description System.Int32 The hash code value. Overrides System.ValueType.GetHashCode() | Improve this Doc View Source GetState() Get a WELL1024a.WellState for the WELL1024a . Declaration public WELL1024a.WellState GetState() Returns Type Description WELL1024a.WellState Remarks Useful to save and restore the state of the WELL1024a . | Improve this Doc View Source NextBoolean(Single) Returns a pseudorandom System.Boolean value based on chance, favoring false, with a default 50% chance . Declaration public bool NextBoolean(float chance = 0.5F) Parameters Type Name Description System.Single chance The 0-1 System.Single percent chance of success. Returns Type Description System.Boolean A pseudorandom System.Boolean . | Improve this Doc View Source NextBytes(Byte[]) Fills a buffer with pseudorandom System.Byte . Declaration public void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer to fill. Remarks The buffer shouldn't be null . | Improve this Doc View Source NextDouble(Double, Double) Returns the next pseudorandom System.Double between minValue and less then maxValue . Declaration public double NextDouble(double minValue = 0, double maxValue = 1) Parameters Type Name Description System.Double minValue The lowest possible value (inclusive). System.Double maxValue The highest possible value (exclusive). Returns Type Description System.Double A pseudorandom System.Double . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextInteger(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue . Declaration public int NextInteger(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, including itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.Int32.MaxValue to maxValue . | Improve this Doc View Source NextIntegerExclusive(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue , excluding maxValue itself. Declaration public int NextIntegerExclusive(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, excluding itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextSingle(Single, Single) Returns the next pseudorandom System.Single between minValue and less then maxValue . Declaration public float NextSingle(float minValue = 0F, float maxValue = 1F) Parameters Type Name Description System.Single minValue The lowest possible value (inclusive). System.Single maxValue The highest possible value (exclusive). Returns Type Description System.Single A pseudorandom System.Single . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextUnsignedInteger(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue . Declaration public uint NextUnsignedInteger(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, including itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.UInt32.MaxValue to maxValue . | Improve this Doc View Source NextUnsignedIntegerExclusive(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue , excluding maxValue itself. Declaration public uint NextUnsignedIntegerExclusive(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, excluding itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source Sample() Returns the next pseudorandom System.Double value, between 0.0 and 1.0. Declaration public double Sample() Returns Type Description System.Double A pseudorandom System.Double floating point value. Implements IRandomProvider System.IEquatable<T> System.IDisposable"
  },
  "api/GDX.Mathematics.Random.WELL1024a.WellState.html": {
    "href": "api/GDX.Mathematics.Random.WELL1024a.WellState.html",
    "title": "Struct WELL1024a.WellState | GDX",
    "keywords": "Struct WELL1024a.WellState A complete state of WELL1024a . Namespace : GDX.Mathematics.Random Syntax [Serializable] public struct WellState Fields | Improve this Doc View Source Count The internal sample count. Declaration public uint Count Field Value Type Description System.UInt32 | Improve this Doc View Source Index The internal state index. Declaration public byte Index Field Value Type Description System.Byte | Improve this Doc View Source Seed The seed used to originally create the WELL1024a . Declaration public uint Seed Field Value Type Description System.UInt32 | Improve this Doc View Source State The internal state array. Declaration public NativeArray<uint> State Field Value Type Description Unity.Collections.NativeArray < System.UInt32 >"
  },
  "api/GDX.Mathematics.Range.html": {
    "href": "api/GDX.Mathematics.Range.html",
    "title": "Class Range | GDX",
    "keywords": "Class Range Some simple logic to pick a value from a range. Inheritance System.Object Range Namespace : GDX.Mathematics Syntax public static class Range Methods | Improve this Doc View Source GetDouble(Double, Double, Double) Returns the System.Double between minValue and maxValue range at percent . Declaration public static double GetDouble(double percent, double minValue = -1.7976931348623157E+308, double maxValue = 1.7976931348623157E+308) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.Double minValue The lowest possible value. System.Double maxValue The highest possible value. Returns Type Description System.Double A System.Double value. | Improve this Doc View Source GetInteger(Double, Int32, Int32) Returns the System.Int32 between minValue and maxValue range at percent . Declaration public static int GetInteger(double percent, int minValue = -2147483648, int maxValue = 2147483647) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value. Returns Type Description System.Int32 The System.Int32 value. | Improve this Doc View Source GetSingle(Double, Single, Single) Returns the System.Single between minValue and maxValue range at percent . Declaration public static float GetSingle(double percent, float minValue = -3.40282347E+38F, float maxValue = 3.40282347E+38F) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.Single minValue The lowest possible value. System.Single maxValue The highest possible value. Returns Type Description System.Single A System.Single value. | Improve this Doc View Source GetUnsignedInteger(Double, UInt32, UInt32) Returns the System.UInt32 between minValue and maxValue range at percent . Declaration public static uint GetUnsignedInteger(double percent, uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value. Returns Type Description System.UInt32 A System.UInt32 value."
  },
  "api/GDX.Mathematics.Rotate.html": {
    "href": "api/GDX.Mathematics.Rotate.html",
    "title": "Class Rotate | GDX",
    "keywords": "Class Rotate A set of functionality to extend on Unity's rotation based methods. Inheritance System.Object Rotate Namespace : GDX.Mathematics Syntax [VisualScriptingCompatible((short)8)] public static class Rotate Methods | Improve this Doc View Source Towards(Quaternion, Quaternion, Single, Single) Create a quaternion based on a rotation from targetQuaternion to otherQuaternion . Declaration public static Quaternion Towards(Quaternion targetQuaternion, Quaternion otherQuaternion, float rotationRate, float elapsedTime) Parameters Type Name Description UnityEngine.Quaternion targetQuaternion The source UnityEngine.Quaternion . UnityEngine.Quaternion otherQuaternion The destination UnityEngine.Quaternion . System.Single rotationRate How fast should the rotation occur. System.Single elapsedTime How long has elapsed since the rotation started. Returns Type Description UnityEngine.Quaternion A rotational value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Mathematics.Smooth.html": {
    "href": "api/GDX.Mathematics.Smooth.html",
    "title": "Class Smooth | GDX",
    "keywords": "Class Smooth Some helpful interpolation functionality. Inheritance System.Object Smooth Namespace : GDX.Mathematics Syntax [VisualScriptingCompatible((short)8)] public static class Smooth Methods | Improve this Doc View Source Exponential(Single, Single, Single, Single) Smooths between previousValue and targetValue based on time since the last sample and a given half-life. Declaration public static float Exponential(float previousValue, float targetValue, float halfLife, float elapsedTime = NaNF) Parameters Type Name Description System.Single previousValue Ideally, the previous output value. System.Single targetValue The target value. System.Single halfLife Half of the time it would take to go from previousValue to targetValue if time were constant. System.Single elapsedTime The amount of time that has transpired since the previousValue was generated. Returns Type Description System.Single A smoothed value. Remarks Assumes wibbly wobbly, timey wimey. | Improve this Doc View Source HalfLifeToSmoothingFactor(Single, Single) Takes a halfLife value, and outputs a factor based on elapsedTime . Declaration public static float HalfLifeToSmoothingFactor(float halfLife, float elapsedTime) Parameters Type Name Description System.Single halfLife The desired halflife. System.Single elapsedTime The time since the last sample. Returns Type Description System.Single The coefficient value applied to the weight(t) of a lerp. Remarks Not providing a value for elapsedTime will result in using Time.deltaTime ."
  },
  "api/GDX.Memory.html": {
    "href": "api/GDX.Memory.html",
    "title": "Class Memory | GDX",
    "keywords": "Class Memory A collection of memory related helper utilities. Inheritance System.Object Memory Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Memory Methods | Improve this Doc View Source CleanUp() Cleanup Memory Mono Heap (Garbage Collection) Unity Resources (when not deployed on DOTS Runtime. Declaration public static void CleanUp() | Improve this Doc View Source CleanUpAsync() Cleanup Memory Mono Heap (Garbage Collection) Unity Resources (when not deployed on DOTS Runtime. Declaration public static async void CleanUpAsync() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.MeshExtensions.html": {
    "href": "api/GDX.MeshExtensions.html",
    "title": "Class MeshExtensions | GDX",
    "keywords": "Class MeshExtensions UnityEngine.Mesh Based Extension Methods Inheritance System.Object MeshExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class MeshExtensions Methods | Improve this Doc View Source CalculateVolume(Mesh) Determine the volume of a given mesh. Declaration public static float CalculateVolume(this Mesh targetMesh) Parameters Type Name Description UnityEngine.Mesh targetMesh The mesh to evaluate for its volume. Returns Type Description System.Single The meshes volume. Remarks Based off of https://n-e-r-v-o-u-s.com/blog/?p=4415 . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.MonoBehaviourExtensions.html": {
    "href": "api/GDX.MonoBehaviourExtensions.html",
    "title": "Class MonoBehaviourExtensions | GDX",
    "keywords": "Class MonoBehaviourExtensions UnityEngine.MonoBehaviour Based Extension Methods Inheritance System.Object MonoBehaviourExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class MonoBehaviourExtensions Methods | Improve this Doc View Source GetFirstComponentInChildrenComplex<T>(MonoBehaviour, Boolean, Boolean, Int32) A slightly more complex version of UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) which allows for different hinted search options. Declaration public static T GetFirstComponentInChildrenComplex<T>(this MonoBehaviour targetMonoBehaviour, bool includeInactive = false, bool lookInChildrenFirst = false, int maxLevelsOfRecursion = -1) Parameters Type Name Description UnityEngine.MonoBehaviour targetMonoBehaviour The target UnityEngine.MonoBehaviour to use as the base for the search. System.Boolean includeInactive Include inactive child UnityEngine.GameObject s when looking for the UnityEngine.Component . System.Boolean lookInChildrenFirst Should children UnityEngine.GameObject be searched before the targetMonoBehaviour 's UnityEngine.GameObject . System.Int32 maxLevelsOfRecursion The maximum levels of recursion when looking for a UnityEngine.Component , -1 for infinite recursion. Returns Type Description T The first found UnityEngine.Component . Type Parameters Name Description T The target UnityEngine.Component type that is being looked for. Remarks If the maxLevelsOfRecursion is set to 1; this will search the targetMonoBehaviour and its immediate children only. The internal UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) has optimizations internally in engine code which make it faster in different scenarios. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.NavMeshPathExtensions.html": {
    "href": "api/GDX.NavMeshPathExtensions.html",
    "title": "Class NavMeshPathExtensions | GDX",
    "keywords": "Class NavMeshPathExtensions UnityEngine.AI.NavMeshPath Based Extension Methods Inheritance System.Object NavMeshPathExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class NavMeshPathExtensions Methods | Improve this Doc View Source GetPositionAtDistance(NavMeshPath, Single) Get a position along a UnityEngine.AI.NavMeshPath based on the travel distance along it. Declaration public static Vector3 GetPositionAtDistance(this NavMeshPath targetNavMeshPath, float distance) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for the position. System.Single distance The distance along the calculated path to find the position at. Returns Type Description UnityEngine.Vector3 The position found on the UnityEngine.AI.NavMeshPath . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetPositionAtDistanceSqr(NavMeshPath, Single) Get a position along a UnityEngine.AI.NavMeshPath based on the travel square distance along it. Declaration public static Vector3 GetPositionAtDistanceSqr(this NavMeshPath targetNavMeshPath, float distance) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for the position. System.Single distance The distance along the calculated path to find the position at. Returns Type Description UnityEngine.Vector3 The position found on the UnityEngine.AI.NavMeshPath . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetTotalDistance(NavMeshPath) Get the total travel distance, from start to finish of a calculated UnityEngine.AI.NavMeshPath . Declaration public static float GetTotalDistance(this NavMeshPath targetNavMeshPath) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for its length. Returns Type Description System.Single The total distance of a calculated path. Remarks The UnityEngine.AI.NavMeshPath.corners does allocate internally. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetTotalDistanceSqr(NavMeshPath) Get the total squared distance, from start to finish of a calculated UnityEngine.AI.NavMeshPath . Declaration public static float GetTotalDistanceSqr(this NavMeshPath targetNavMeshPath) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for its squared length. Returns Type Description System.Single The total squared distance of a calculated path. Remarks The UnityEngine.AI.NavMeshPath.corners does allocate internally. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Platform.html": {
    "href": "api/GDX.Platform.html",
    "title": "Class Platform | GDX",
    "keywords": "Class Platform A collection of platform related helper utilities. Inheritance System.Object Platform Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Platform Fields | Improve this Doc View Source CharacterPoolLength Declaration public const int CharacterPoolLength = 25 Field Value Type Description System.Int32 | Improve this Doc View Source CharacterPoolLengthExclusive Declaration public const int CharacterPoolLengthExclusive = 24 Field Value Type Description System.Int32 | Improve this Doc View Source DoubleTolerance Declaration public const double DoubleTolerance = 1E-06 Field Value Type Description System.Double | Improve this Doc View Source FilenameTimestampFormat A filename safe version of the timestamp format. Declaration public const string FilenameTimestampFormat = \"yyyyMMdd_HHmmss\" Field Value Type Description System.String | Improve this Doc View Source FloatTolerance Declaration public const float FloatTolerance = 1E-06F Field Value Type Description System.Single | Improve this Doc View Source ImageCompareTolerance Declaration public const float ImageCompareTolerance = 0.99F Field Value Type Description System.Single | Improve this Doc View Source SafeCharacterPool Declaration public const string SafeCharacterPool = \"abcdefghijklmnopqrstuvwxyz\" Field Value Type Description System.String Methods | Improve this Doc View Source EnsureFileFolderHierarchyExists(String) Validate that all parent directories are created for a given filePath . Declaration public static void EnsureFileFolderHierarchyExists(string filePath) Parameters Type Name Description System.String filePath The path to process and validate. | Improve this Doc View Source EnsureFileWritable(String) Validate that the file path is writable, making the necessary folder structure and setting permissions. Declaration public static void EnsureFileWritable(string filePath) Parameters Type Name Description System.String filePath The absolute path to validate. | Improve this Doc View Source EnsureFolderHierarchyExists(String) Validate that all directories are created for a given folderPath . Declaration public static void EnsureFolderHierarchyExists(string folderPath) Parameters Type Name Description System.String folderPath The path to process and validate. | Improve this Doc View Source ForceDeleteFile(String) Use our best attempt to remove a file at the designated filePath . Declaration public static void ForceDeleteFile(string filePath) Parameters Type Name Description System.String filePath The file path to remove forcefully. | Improve this Doc View Source GetHardwareGeneration() Gets the current platforms hardware generation number? Declaration public static int GetHardwareGeneration() Returns Type Description System.Int32 Returns 0 for base hardware, 1 for updates. | Improve this Doc View Source GetOutputFolder(String) Returns a runtime writable folder. Declaration public static string GetOutputFolder(string folderName = null) Parameters Type Name Description System.String folderName An optional additional folder under the provided path that will be created if necessary. Returns Type Description System.String The full path to a writable folder at runtime. Remarks Depending on the platform, different routes are taken to finding a writable folder. Editor The project's root folder is used in this case. Standard Player Utilizes UnityEngine.Application.persistentDataPath to find a suitable place. DOTS Runtime Uses System.IO.Directory.GetCurrentDirectory . The path can be overridden by assigning GDX_OUTPUT_FOLDER in the launching arguments. | Improve this Doc View Source GetRandomSafeCharacter(IRandomProvider) Declaration public static char GetRandomSafeCharacter(IRandomProvider random) Parameters Type Name Description IRandomProvider random Returns Type Description System.Char | Improve this Doc View Source GetUniqueOutputFilePath(String, String, String) Declaration public static string GetUniqueOutputFilePath(string prefix = \"GDX_\", string extension = \".log\", string folderName = null) Parameters Type Name Description System.String prefix System.String extension System.String folderName Returns Type Description System.String | Improve this Doc View Source IsFileWritable(String) Is it safe to write to the indicated filePath ? Declaration public static bool IsFileWritable(string filePath) Parameters Type Name Description System.String filePath The file path to check if it can be written. Returns Type Description System.Boolean true/false if the path can be written too. | Improve this Doc View Source IsFocused() Is the application focused? Declaration public static bool IsFocused() Returns Type Description System.Boolean true/false if the application has focus. Remarks There are issues on some platforms with getting an accurate reading. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsHeadless() Is the application running in headless mode?. Declaration public static bool IsHeadless() Returns Type Description System.Boolean true/false if the application is without an initialized graphics device. Remarks Useful for detecting running a server. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Reflection.html": {
    "href": "api/GDX.Reflection.html",
    "title": "Class Reflection | GDX",
    "keywords": "Class Reflection A collection of reflection related helper utilities. Inheritance System.Object Reflection Namespace : GDX Syntax public static class Reflection Remarks Torn about the existence of this utility class, yet alone the conditions dictating it. Fields | Improve this Doc View Source InternalStaticFlags Declaration public const BindingFlags InternalStaticFlags = BindingFlags.Static | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source PrivateFieldFlags Declaration public const BindingFlags PrivateFieldFlags = BindingFlags.Instance | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source PublicStaticFlags Declaration public const BindingFlags PublicStaticFlags = BindingFlags.Static | BindingFlags.Public Field Value Type Description System.Reflection.BindingFlags Methods | Improve this Doc View Source GetDefault(Type) Declaration public static object GetDefault(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.Object | Improve this Doc View Source GetFieldOrPropertyValue(Object, String, BindingFlags, BindingFlags) Declaration public static object GetFieldOrPropertyValue(object source, string name, BindingFlags fieldFlags = BindingFlags.Instance | BindingFlags.NonPublic, BindingFlags propertyFlags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object source System.String name System.Reflection.BindingFlags fieldFlags System.Reflection.BindingFlags propertyFlags Returns Type Description System.Object | Improve this Doc View Source GetFieldValue<T>(Object, String, String, BindingFlags) Access the field value of a specific targetObject , which may not be normally accessible. Declaration public static T GetFieldValue<T>(object targetObject, string type, string name, BindingFlags flags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's field value read. System.String type The explicit type of the targetObject . System.String name The field's name to read. System.Reflection.BindingFlags flags The field's access flags. Returns Type Description T The field's value. Type Parameters Name Description T The type of data being read from the field. | Improve this Doc View Source InvokeStaticMethod(String, String, Object[], BindingFlags) Invokes a known static method. Declaration public static object InvokeStaticMethod(string type, string method, object[] parameters = null, BindingFlags flags = BindingFlags.Static | BindingFlags.Public) Parameters Type Name Description System.String type The explicit type of the static class. System.String method The name of the method to invoke. System.Object [] parameters Any parameters that should be passed to the method? System.Reflection.BindingFlags flags The method 's access flags. Returns Type Description System.Object An System.Object of the return value. This can be null."
  },
  "api/GDX.RigidbodyExtensions.html": {
    "href": "api/GDX.RigidbodyExtensions.html",
    "title": "Class RigidbodyExtensions | GDX",
    "keywords": "Class RigidbodyExtensions UnityEngine.Rigidbody Based Extension Methods Inheritance System.Object RigidbodyExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class RigidbodyExtensions Methods | Improve this Doc View Source MomentOfInertia(Rigidbody, Vector3) Get a UnityEngine.Rigidbody 's moment of inertia for a targetAxis . Declaration public static float MomentOfInertia(this Rigidbody targetRigidbody, Vector3 targetAxis) Parameters Type Name Description UnityEngine.Rigidbody targetRigidbody The UnityEngine.Rigidbody to evaluate. UnityEngine.Vector3 targetAxis The axis use to calculate the moment of inertia. Returns Type Description System.Single The moment of inertia for the targetAxis . Remarks Provided targetAxis must not be UnityEngine.Vector3.zero . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.SegmentedString.html": {
    "href": "api/GDX.SegmentedString.html",
    "title": "Struct SegmentedString | GDX",
    "keywords": "Struct SegmentedString A segmented collection of System.Char . Namespace : GDX Syntax public struct SegmentedString Methods | Improve this Doc View Source AsCharArray() Get the GDX.SegmentedString.m_Characters array. Declaration public char[] AsCharArray() Returns Type Description System.Char [] A System.Char array. | Improve this Doc View Source AsCharArray(Int32) Declaration public char[] AsCharArray(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Char [] | Improve this Doc View Source AsString() Declaration public string AsString() Returns Type Description System.String | Improve this Doc View Source AsString(Int32) Declaration public string AsString(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.String | Improve this Doc View Source GetCount() Declaration public int GetCount() Returns Type Description System.Int32 | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source GetHashCode(Int32) Declaration public int GetHashCode(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Int32 | Improve this Doc View Source GetOffset(Int32) Declaration public int GetOffset(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Int32 | Improve this Doc View Source GetSegmentLength(Int32) Declaration public int GetSegmentLength(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Int32 | Improve this Doc View Source SplitOnNonAlphaNumericToLower(String) Declaration public static SegmentedString SplitOnNonAlphaNumericToLower(string targetString) Parameters Type Name Description System.String targetString Returns Type Description SegmentedString | Improve this Doc View Source SplitOnNonAlphaNumericToLowerHashed(String) Declaration public static SegmentedString SplitOnNonAlphaNumericToLowerHashed(string targetString) Parameters Type Name Description System.String targetString Returns Type Description SegmentedString"
  },
  "api/GDX.SemanticVersion.html": {
    "href": "api/GDX.SemanticVersion.html",
    "title": "Struct SemanticVersion | GDX",
    "keywords": "Struct SemanticVersion A Semantic Versioning structure. Namespace : GDX Syntax public readonly struct SemanticVersion Remarks https://semver.org/ Constructors | Improve this Doc View Source SemanticVersion(String) Create a SemanticVersion based on a formatted System.String . Declaration public SemanticVersion(string version) Parameters Type Name Description System.String version A formatted version semantic version string (2020.1.0). Fields | Improve this Doc View Source Major Major Version. Declaration public readonly int Major Field Value Type Description System.Int32 Remarks Is incremented when you make incompatible API changes. | Improve this Doc View Source Minor Minor Version. Declaration public readonly int Minor Field Value Type Description System.Int32 Remarks Is incremented when you add functionality in a backwards-compatible manner. | Improve this Doc View Source Patch Patch Version Declaration public readonly int Patch Field Value Type Description System.Int32 Remarks Is incremented when you make backwards-compatible fixes. Methods | Improve this Doc View Source Equals(Object) Does the obj equal this SemanticVersion . Declaration public override readonly bool Equals(object obj) Parameters Type Name Description System.Object obj An System.Object to compare against. Returns Type Description System.Boolean Returns the result of an EQUALITY operation. Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Get the hash code of the SemanticVersion . Declaration public override readonly int GetHashCode() Returns Type Description System.Int32 A System.Int32 value. Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(SemanticVersion, SemanticVersion) Determine if SemanticVersion is equal to another SemanticVersion . Declaration public static bool operator ==(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a EQUALITY operation on two SemanticVersion values. | Improve this Doc View Source GreaterThan(SemanticVersion, SemanticVersion) Determine if SemanticVersion is greater than another SemanticVersion . Declaration public static bool operator>(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a GREATER THAN operation on two SemanticVersion values. | Improve this Doc View Source GreaterThanOrEqual(SemanticVersion, SemanticVersion) Determine if SemanticVersion is greater than or equal to another SemanticVersion . Declaration public static bool operator >=(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a GREATER THAN OR EQUAL operation on two SemanticVersion values. | Improve this Doc View Source Inequality(SemanticVersion, SemanticVersion) Determine if SemanticVersion does not equal than another SemanticVersion . Declaration public static bool operator !=(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a NOT EQUAL operation on two SemanticVersion values. | Improve this Doc View Source LessThan(SemanticVersion, SemanticVersion) Determine if SemanticVersion is less than another SemanticVersion . Declaration public static bool operator <(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a LESS THAN operation on two SemanticVersion values. | Improve this Doc View Source LessThanOrEqual(SemanticVersion, SemanticVersion) Determine if SemanticVersion is less than or equal to another SemanticVersion . Declaration public static bool operator <=(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a LESS THAN OR EQUAL operation on two SemanticVersion values."
  },
  "api/GDX.SimpleListExtensions.html": {
    "href": "api/GDX.SimpleListExtensions.html",
    "title": "Class SimpleListExtensions | GDX",
    "keywords": "Class SimpleListExtensions SimpleList<T> Based Extension Methods Inheritance System.Object SimpleListExtensions Namespace : GDX Syntax public static class SimpleListExtensions Remarks Methods found in this extensions class are less performant then the included methods in SimpleList<T> . They are seperated out to clearly delineate this performance regression. Methods | Improve this Doc View Source AddUncheckedUniqueItem<T>(ref SimpleList<T>, T) Add an item to the SimpleList<T> without checking the internal size, making sure that the item is not already contained in the SimpleList<T> . Declaration public static bool AddUncheckedUniqueItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetItem The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the item successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddUncheckedUniqueReference<T>(ref SimpleList<T>, T) Add an object reference to the SimpleList<T> without checking the internal size, making sure that the reference is not already contained in the SimpleList<T> . Does not prevent addition of different objects for which Equals returns true. Declaration public static bool AddUncheckedUniqueReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetReference The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the reference successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddWithExpandCheckUniqueItem<T>(ref SimpleList<T>, T) Add an item to the SimpleList<T> with checking the internal size (expanding as necessary), making sure that the item is not already contained in the SimpleList<T> . Declaration public static bool AddWithExpandCheckUniqueItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetItem The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the item successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddWithExpandCheckUniqueReference<T>(ref SimpleList<T>, T) Add an object reference to the SimpleList<T> with checking the internal size (expanding as necessary), making sure that the reference is not already contained in the SimpleList<T> . Does not prevent addition of different objects for which Equals returns true. Declaration public static bool AddWithExpandCheckUniqueReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetReference The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the reference successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddWithExpandCheckUniqueValue<T>(ref SimpleList<T>, T) Add an item to the SimpleList<T> with checking the internal size (expanding as necessary), making sure that the item is not already contained in the SimpleList<T> . Declaration public static bool AddWithExpandCheckUniqueValue<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetItem The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the item successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source ContainsItem<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool ContainsItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source ContainsReference<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool ContainsReference<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source ContainsValue<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool ContainsValue<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveFirstItem<T>(ref SimpleList<T>, T) Removes the first targetItem from the provided targetSimpleList . Declaration public static bool RemoveFirstItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetItem The target object to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an item was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveFirstReference<T>(ref SimpleList<T>, T) Removes the first targetReference from the provided targetSimpleList . Only removes direct object references, i.e. equivalent strings at different memory addresses would not be removed. Declaration public static bool RemoveFirstReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetReference The target object to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an object reference was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveItems<T>(ref SimpleList<T>, T) Removes all targetItem from the provided targetSimpleList . Declaration public static bool RemoveItems<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetItem The item to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if items were removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveLastItem<T>(ref SimpleList<T>, T) Removes the last targetItem from the provided targetSimpleList . Declaration public static bool RemoveLastItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetItem The target object to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an item was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveLastReference<T>(ref SimpleList<T>, T) Removes the last reference to targetReference from the provided targetSimpleList . Only removes direct object references, i.e. equivalent strings at different memory addresses would not be removed. Declaration public static bool RemoveLastReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetReference The target object reference to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an object reference was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveReferences<T>(ref SimpleList<T>, T) Removes all instances of references to targetReference from the provided targetSimpleList . Only removes direct object references, i.e. equivalent strings at different memory addresses would not be removed. Declaration public static bool RemoveReferences<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetReference The object reference to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if any references were removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 ."
  },
  "api/GDX.StringExtensions.html": {
    "href": "api/GDX.StringExtensions.html",
    "title": "Class StringExtensions | GDX",
    "keywords": "Class StringExtensions System.String Based Extension Methods Inheritance System.Object StringExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class StringExtensions Fields | Improve this Doc View Source AsciiCaseShift The ASCII decimal value shift required to change the case of a letter. Declaration public const int AsciiCaseShift = 32 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiLowerCaseEnd The ASCII decimal value for lowercase z. Declaration public const int AsciiLowerCaseEnd = 122 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiLowerCaseStart The ASCII decimal value for a. Declaration public const int AsciiLowerCaseStart = 97 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberDecimal The ASCII decimal value for the decimal (.). Declaration public const int AsciiNumberDecimal = 46 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberEnd The ASCII decimal value for 9. Declaration public const int AsciiNumberEnd = 57 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberSeparator The ASCII decimal value for the , separator. Declaration public const int AsciiNumberSeparator = 47 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberSign The ASCII decimal value for the number sign -. Declaration public const int AsciiNumberSign = 45 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberStart The ASCII decimal value for 0. Declaration public const int AsciiNumberStart = 48 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiUpperCaseEnd The ASCII decimal value for uppercase Z. Declaration public const int AsciiUpperCaseEnd = 90 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiUpperCaseStart The ASCII decimal value for uppercase A. Declaration public const int AsciiUpperCaseStart = 65 Field Value Type Description System.Int32 | Improve this Doc View Source EncryptionDefaultKey The default encryption key used when none is provided to the encryption related extensions. Declaration public static byte[] EncryptionDefaultKey Field Value Type Description System.Byte [] Remarks You can change this at runtime during some sort of initialization pass to being something unique to your project, but it is not absolutely necessary. This must be a multiple of 8 bytes. | Improve this Doc View Source EncryptionInitializationVector The IV (Initialization Vector) provided to the System.Security.Cryptography.DESCryptoServiceProvider . Declaration public static byte[] EncryptionInitializationVector Field Value Type Description System.Byte [] Remarks You can change this at runtime during some sort of initialization pass to being something unique to your project, but it is not absolutely necessary. This must be a multiple of 8 bytes. Methods | Improve this Doc View Source Concatenate(String[], String, Boolean) Concatenate an array of strings into one unified string. Declaration public static string Concatenate(this string[] pieces, string delimiter = null, bool trailingDelimiter = false) Parameters Type Name Description System.String [] pieces An array of strings System.String delimiter An optional string which to use between pieces when combining. System.Boolean trailingDelimiter Should a trailing delimiter be appended? Returns Type Description System.String A concatenated System.String . | Improve this Doc View Source CountOccurence(String, Char) Counts the number of times the needle ( targetCharacter ) appears in the haystack ( targetString ). Declaration public static int CountOccurence(this string targetString, char targetCharacter) Parameters Type Name Description System.String targetString The haystack. System.Char targetCharacter The needle. Returns Type Description System.Int32 The number of times targetCharacter is found in targetString . Remarks Specifically created to avoid using LINQ and avoid an allocation. | Improve this Doc View Source Decrypt(String, Byte[]) Decrypt an encrypted System.String created by Encrypt(String, Byte[]) . Declaration public static string Decrypt(this string encryptedString, byte[] encryptionKey = null) Parameters Type Name Description System.String encryptedString The encrypted System.String . System.Byte [] encryptionKey The key used to encrypt the System.String . Returns Type Description System.String The decrypted System.String . Remarks This will have quite a few allocations. | Improve this Doc View Source Encrypt(String, Byte[]) Encrypt a System.String utilizing a System.Security.Cryptography.DESCryptoServiceProvider . Declaration public static string Encrypt(this string decryptedString, byte[] encryptionKey = null) Parameters Type Name Description System.String decryptedString The original System.String . System.Byte [] encryptionKey The key to be used when encrypting the System.String . This must be a multiple of 8 bytes. Returns Type Description System.String The encrypted System.String . Remarks This will have quite a few allocations. | Improve this Doc View Source GetAfterFirst(String, String, StringComparison) Get the System.String after the first identified splitString in targetString . Declaration public static string GetAfterFirst(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content following the splitString , or null if none is found. | Improve this Doc View Source GetAfterLast(String, String, StringComparison) Get the System.String after the last identified splitString in targetString . Declaration public static string GetAfterLast(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content following the splitString , or null if none is found. | Improve this Doc View Source GetBeforeFirst(String, String, StringComparison) Get the System.String before the first identified splitString in targetString . Declaration public static string GetBeforeFirst(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content before the splitString , or null if none is found. | Improve this Doc View Source GetBeforeLast(String, String, StringComparison) Get the System.String before the last identified splitString in targetString . Declaration public static string GetBeforeLast(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content before the splitString , or null if none is found. | Improve this Doc View Source GetStableHashCode(String) Get the stable hash code value of targetString . Declaration public static int GetStableHashCode(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Int32 A System.Int32 value. Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. It's value will be identical to the value produced natively by processing a System.String with System.String.GetHashCode , but with no allocations and no virtual calls. | Improve this Doc View Source GetStableLowerCaseHashCode(String) Get the stable hash code value of targetString (converted to an uppercase System.String ). Declaration public static int GetStableLowerCaseHashCode(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Int32 A System.Int32 value. Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. It's value will be identical to the value produced natively by processing a System.String with System.String.ToLower . System.String.GetHashCode , but with no allocations. | Improve this Doc View Source GetStableUpperCaseHashCode(String) Get the stable hash code value of targetString (converted to an uppercase System.String ). Declaration public static int GetStableUpperCaseHashCode(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Int32 A System.Int32 value. Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. It's value will be identical to the value produced natively by processing a System.String with System.String.ToUpper . System.String.GetHashCode , but with no allocations. | Improve this Doc View Source HasLowerCase(String) Determine if there are any lowercase letters in the provided targetString . Declaration public static bool HasLowerCase(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if lowercase letters were found. | Improve this Doc View Source HasUpperCase(String) Determine if there are any uppercase letters in the provided targetString . Declaration public static bool HasUpperCase(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if uppercase letters were found. | Improve this Doc View Source IsBooleanPositiveValue(String) Determine if the targetString represents a positive boolean value arrangement. Declaration public static bool IsBooleanPositiveValue(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if the targetString can be evaluated as a positive boolean value. Examples Useful method when trying to parse data for branching. if(data[\"set\"].IsBooleanPositiveValue()) { ShouldBlueBox(); } | Improve this Doc View Source IsBooleanValue(String) Determine if the targetString represents a boolean value arrangement. Declaration public static bool IsBooleanValue(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if the targetString can be evaluated as a boolean value. | Improve this Doc View Source IsIntegerValue(String) Determine if the targetString is an System.Int32 value. Declaration public static bool IsIntegerValue(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if it contains an System.Int32 . Remarks This method is meant for when you do not actually need the value returned, merely an evaluation if the provided targetString is an System.Int32 . This does not qualify System.Single values positively. | Improve this Doc View Source IsNumeric(String) Is the targetString a numeric value. Declaration public static bool IsNumeric(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if the targetString qualifies as a numeric value. Remarks The following requirements must be met to be considered a valid number in this method: The first character may be an indicator of its sign, an explicit acceptance of - is made. If prefixed with + , the number will be found invalid. A single decimal point . may be present in the targetString . No alphabet characters are present in the targetString . | Improve this Doc View Source PartialMatch(SimpleList<String>, String) Does the haystack partially contain the needle ? Declaration public static bool PartialMatch(this SimpleList<string> haystack, string needle) Parameters Type Name Description SimpleList < System.String > haystack A SimpleList<T> of System.String s. System.String needle The System.String that is being looked for. Returns Type Description System.Boolean true/false if found. | Improve this Doc View Source PartialMatch(String[], String) Does the haystack partially contain the needle ? Declaration public static bool PartialMatch(this string[] haystack, string needle) Parameters Type Name Description System.String [] haystack An array of System.String s. System.String needle The System.String that is being looked for. Returns Type Description System.Boolean true/false if found. | Improve this Doc View Source SplitCamelCase(String, String) Create a new string, splitting an existing string up based on camel case formatting. Declaration public static string SplitCamelCase(this string targetString, string divider = \" \") Parameters Type Name Description System.String targetString The target System.String . System.String divider The System.String to put in between the split System.String . Returns Type Description System.String A new System.String . | Improve this Doc View Source StripNonAscii(String) Remove non ASCII characters from a System.String . Declaration public static string StripNonAscii(this string targetString) Parameters Type Name Description System.String targetString The System.String to be cleaned. Returns Type Description System.String A System.String without ASCII characters."
  },
  "api/GDX.Trace.html": {
    "href": "api/GDX.Trace.html",
    "title": "Class Trace | GDX",
    "keywords": "Class Trace Trace logging functionality. Inheritance System.Object Trace Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Trace Methods | Improve this Doc View Source Output(Trace.TraceLevel, Object, Object, String, String, Int32) Log a trace message to the appropriate subscribers and the Unity console where applicable with additional context on invoke location. Declaration public static void Output(Trace.TraceLevel level, object traceObject, Object contextObject = null, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description Trace.TraceLevel level The Trace.TraceLevel of the particular message. System.Object traceObject An System.Object representing the message to be recorded. UnityEngine.Object contextObject An UnityEngine.Object indicating context for the given message. System.String memberName Automatically filled out member name which invoked this method. System.String sourceFilePath Automatically filled out source code path of the invoking method. System.Int32 sourceLineNumber Automatically filled out line number of the invoking method."
  },
  "api/GDX.Trace.TraceLevel.html": {
    "href": "api/GDX.Trace.TraceLevel.html",
    "title": "Enum Trace.TraceLevel | GDX",
    "keywords": "Enum Trace.TraceLevel Trace Levels Namespace : GDX Syntax [Flags] public enum TraceLevel : ushort Fields Name Description Assertion An assertion based event has occured and has some sort of messaging to be recorded. Error An error has occurred which may be recoverable, but notification is required. Exception An exception has occured and needs to be flagged up for resolution. The should never happen in a release environment. Fatal A fatal error has occured which needs to be logged, and the program will subsequently crash. Info A trivial informational entry. Log An entry indicating something which might be useful to provide context. Warning An issue has been found but handled. Extension Methods EnumExtensions.HasFlags<Trace.TraceLevel>(Trace.TraceLevel)"
  },
  "api/GDX.TransformExtensions.html": {
    "href": "api/GDX.TransformExtensions.html",
    "title": "Class TransformExtensions | GDX",
    "keywords": "Class TransformExtensions UnityEngine.Transform Based Extension Methods Inheritance System.Object TransformExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class TransformExtensions Methods | Improve this Doc View Source DestroyChildren(Transform, Boolean, Boolean) Destroy child UnityEngine.Transform . Declaration public static void DestroyChildren(this Transform targetTransform, bool deactivateBeforeDestroy = true, bool destroyInactive = true) Parameters Type Name Description UnityEngine.Transform targetTransform The parent UnityEngine.Transform to look at. System.Boolean deactivateBeforeDestroy Should the targetTransform children's UnityEngine.GameObject s be deactivated before destroying? This can be used to immediately hide an object, that will be destroyed at the end of the frame. System.Boolean destroyInactive Should inactive UnityEngine.GameObject be destroyed as well? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetActiveChildCount(Transform) Get the number of immediate children active. Declaration public static int GetActiveChildCount(this Transform targetTransform) Parameters Type Name Description UnityEngine.Transform targetTransform The transform to look at's children. Returns Type Description System.Int32 The number of active children transforms. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetFirstComponentInChildrenComplex<T>(Transform, Boolean, Int32, Int32) Search recursively for a UnityEngine.Component on the targetTransform . Declaration public static T GetFirstComponentInChildrenComplex<T>(this Transform targetTransform, bool includeInactive, int currentDepth, int maxLevelsOfRecursion) Parameters Type Name Description UnityEngine.Transform targetTransform The target UnityEngine.Transform to use as the base for the search. System.Boolean includeInactive Include inactive child UnityEngine.GameObject s when looking for the UnityEngine.Component . System.Int32 currentDepth Current level of recursion. System.Int32 maxLevelsOfRecursion The maximum levels of recursion when looking for a UnityEngine.Component , -1 for infinite recursion. Returns Type Description T The first found UnityEngine.Component . Type Parameters Name Description T The target UnityEngine.Component type that is being looked for. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetScenePath(Transform) Get an in scene path to the targetTransform . Declaration public static string GetScenePath(this Transform targetTransform) Parameters Type Name Description UnityEngine.Transform targetTransform The UnityEngine.Transform which to derive a path from. Returns Type Description System.String A created path System.String . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.TransientReference.html": {
    "href": "api/GDX.TransientReference.html",
    "title": "Class TransientReference | GDX",
    "keywords": "Class TransientReference A comparable weak reference to an object which will not prevent garbage collection. It will positively compare against similar targeted reference trackers as well as the actual target object. Inheritance System.Object System.WeakReference TransientReference Implements System.Runtime.Serialization.ISerializable System.IComparable System.IComparable < TransientReference > System.IComparable < System.WeakReference > System.IEquatable < TransientReference > System.IEquatable < System.WeakReference > Inherited Members System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.WeakReference.IsAlive System.WeakReference.Target System.WeakReference.TrackResurrection Namespace : GDX Syntax public class TransientReference : WeakReference, ISerializable, IComparable, IComparable<TransientReference>, IComparable<WeakReference>, IEquatable<TransientReference>, IEquatable<WeakReference> Remarks There isn't a lot of great use cases for using this sort of thing; System.WeakReference on its own is sufficient in most of the use cases, however this particular arrangement is useful for developer-ish stuff. Constructors | Improve this Doc View Source TransientReference(Object) Create a TransientReference referencing the target . Declaration public TransientReference(object target) Parameters Type Name Description System.Object target The target System.Object to reference. | Improve this Doc View Source TransientReference(Object, Boolean) Create a TransientReference referencing the target . Declaration public TransientReference(object target, bool trackResurrection) Parameters Type Name Description System.Object target The target System.Object to reference. System.Boolean trackResurrection Should the object remain tracked after it has been finalized. | Improve this Doc View Source TransientReference(SerializationInfo, StreamingContext) Create a TransientReference from the info . Declaration protected TransientReference(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info A System.Runtime.Serialization.SerializationInfo representation of a TransientReference . System.Runtime.Serialization.StreamingContext context Describes the source of the System.Runtime.Serialization.SerializationInfo . Methods | Improve this Doc View Source CompareTo(TransientReference) Compare this TransientReference to the target TransientReference . Declaration public int CompareTo(TransientReference obj) Parameters Type Name Description TransientReference obj The target TransientReference to compare against. Returns Type Description System.Int32 1 if the same, 0 otherwise. | Improve this Doc View Source CompareTo(Object) Compare this TransientReference to the target System.Object . Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj The target System.Object to compare against. Returns Type Description System.Int32 1 if the same, 0 otherwise. | Improve this Doc View Source CompareTo(WeakReference) Compare this TransientReference to the target System.WeakReference . Declaration public int CompareTo(WeakReference obj) Parameters Type Name Description System.WeakReference obj The target System.WeakReference to compare against. Returns Type Description System.Int32 1 if the same, 0 otherwise. | Improve this Doc View Source Equals(TransientReference) Does this TransientReference equal the target TransientReference . Declaration public bool Equals(TransientReference other) Parameters Type Name Description TransientReference other The target TransientReference to compare with. Returns Type Description System.Boolean true if it is the same, false otherwise. | Improve this Doc View Source Equals(Object) Does this TransientReference equal the target System.Object . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The target System.Object to compare with. Returns Type Description System.Boolean true if it is the same, false otherwise. Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Equals(WeakReference) Does this TransientReference equal the target System.WeakReference . Declaration public bool Equals(WeakReference other) Parameters Type Name Description System.WeakReference other The target System.WeakReference to compare with. Returns Type Description System.Boolean true if it is the same, false otherwise. | Improve this Doc View Source GetHashCode() Return the hashcode of the System.WeakReference.Target . Declaration public override int GetHashCode() Returns Type Description System.Int32 Returns the System.WeakReference.Target 's hash code, or -1 if null. Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(TransientReference, TransientReference) Compare TransientReference s to see if they are equal. Declaration public static bool operator ==(TransientReference left, TransientReference right) Parameters Type Name Description TransientReference left Left-side TransientReference . TransientReference right Right-side TransientReference . Returns Type Description System.Boolean true/false if they are equal. | Improve this Doc View Source Inequality(TransientReference, TransientReference) Compare TransientReference s to see if they are not equal. Declaration public static bool operator !=(TransientReference left, TransientReference right) Parameters Type Name Description TransientReference left Left-side TransientReference . TransientReference right Right-side TransientReference . Returns Type Description System.Boolean true/false if they are not equal. Implements System.Runtime.Serialization.ISerializable System.IComparable System.IComparable<T> System.IComparable<T> System.IEquatable<T> System.IEquatable<T>"
  },
  "api/GDX.UnsupportedRuntimeException.html": {
    "href": "api/GDX.UnsupportedRuntimeException.html",
    "title": "Class UnsupportedRuntimeException | GDX",
    "keywords": "Class UnsupportedRuntimeException An exception used to indicate when a method is unavailable on a specific runtime. Inheritance System.Object System.Exception UnsupportedRuntimeException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState Namespace : GDX Syntax public class UnsupportedRuntimeException : Exception, ISerializable Constructors | Improve this Doc View Source UnsupportedRuntimeException() Declaration public UnsupportedRuntimeException() | Improve this Doc View Source UnsupportedRuntimeException(String) Declaration public UnsupportedRuntimeException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source UnsupportedRuntimeException(String, Exception) Declaration public UnsupportedRuntimeException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/GDX.Vector2Extensions.html": {
    "href": "api/GDX.Vector2Extensions.html",
    "title": "Class Vector2Extensions | GDX",
    "keywords": "Class Vector2Extensions UnityEngine.Vector2 Based Extension Methods Inheritance System.Object Vector2Extensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class Vector2Extensions Methods | Improve this Doc View Source Approximately(Vector2, Vector2) Is one UnityEngine.Vector2 approximately similar to another UnityEngine.Vector2 ? Declaration public static bool Approximately(this Vector2 targetVector2, Vector2 otherVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 Point A UnityEngine.Vector2 otherVector2 Point B Returns Type Description System.Boolean Are the two UnityEngine.Vector2 approximately the same? Remarks Includes optimized Unity.Mathematics approach. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Midpoint(Vector2, Vector2) Get the midpoint between two UnityEngine.Vector2 s. Declaration public static Vector2 Midpoint(this Vector2 targetVector2, Vector2 otherVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 Point A UnityEngine.Vector2 otherVector2 Point B Returns Type Description UnityEngine.Vector2 The midpoint between targetVector2 and otherVector2 . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source NearestIndex(Vector2, Vector2[]) Find the index of the UnityEngine.Vector2 in otherVector2 that is nearest to the targetVector2 . Declaration public static int NearestIndex(this Vector2 targetVector2, Vector2[] otherVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 The UnityEngine.Vector2 to use as the point of reference. UnityEngine.Vector2 [] otherVector2 An array of UnityEngine.Vector2 positions to evaluate for which one is nearest. Returns Type Description System.Int32 The index of the nearest otherVector2 element to targetVector2 . Returning -1 if the the otherVector2 has no elements or is null. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Slope(Vector2) Get the slope of a UnityEngine.Vector2 . Declaration public static float Slope(this Vector2 targetVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 The UnityEngine.Vector2 to evaluate. Returns Type Description System.Single The slope value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TryParseVector2(String, out Vector2) Attempt to parse a System.String into a UnityEngine.Vector2 . Declaration public static bool TryParseVector2(this string targetString, out Vector2 outputVector2) Parameters Type Name Description System.String targetString The System.String to convert into a UnityEngine.Vector2 if possible. UnityEngine.Vector2 outputVector2 The outputted UnityEngine.Vector2 . Returns Type Description System.Boolean true/false if the conversion was successful. Remarks This isn't great for runtime performance, it should be used predominantly when reconstructing data. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Vector3Extensions.html": {
    "href": "api/GDX.Vector3Extensions.html",
    "title": "Class Vector3Extensions | GDX",
    "keywords": "Class Vector3Extensions UnityEngine.Vector3 Based Extension Methods Inheritance System.Object Vector3Extensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class Vector3Extensions Methods | Improve this Doc View Source Approximately(Vector3, Vector3) Is one UnityEngine.Vector3 approximately similar to another UnityEngine.Vector3 ? Declaration public static bool Approximately(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description System.Boolean Are the two UnityEngine.Vector3 approximately the same? Remarks Includes optimized Unity.Mathematics approach. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source DistanceSqr(Vector3, Vector3) Calculate the squared distance between two UnityEngine.Vector3 . Declaration public static float DistanceSqr(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description System.Single The squared distance. Remarks Based on https://en.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source DistanceToRay(Vector3, Ray) Calculate the distance from a UnityEngine.Vector3 to a UnityEngine.Ray . Declaration public static float DistanceToRay(this Vector3 targetVector3, Ray targetRay) Parameters Type Name Description UnityEngine.Vector3 targetVector3 The position. UnityEngine.Ray targetRay The line. Returns Type Description System.Single The distance. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source HorizontalDistance(Vector3, Vector3) Get the horizontal distance between two UnityEngine.Vector3 points. Declaration public static float HorizontalDistance(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description System.Single The horizontal distance. Remarks Ignores the Y-axis completely. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Midpoint(Vector3, Vector3) Get the midpoint between two UnityEngine.Vector3 s. Declaration public static Vector3 Midpoint(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description UnityEngine.Vector3 The midpoint between targetVector3 and otherVector3 . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source NearestIndex(Vector3, Vector3[]) Find the index of the UnityEngine.Vector3 in otherVector3 that is nearest to the targetVector3 . Declaration public static int NearestIndex(this Vector3 targetVector3, Vector3[] otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 The UnityEngine.Vector3 to use as the point of reference. UnityEngine.Vector3 [] otherVector3 An array of UnityEngine.Vector3 positions to evaluate for which one is nearest. Returns Type Description System.Int32 The index of the nearest otherVector3 element to targetVector3 . Returning -1 if the the otherVector3 has no elements or is null. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TryParseVector3(String, out Vector3) Attempt to parse a System.String into a UnityEngine.Vector3 . Declaration public static bool TryParseVector3(this string targetString, out Vector3 outputVector3) Parameters Type Name Description System.String targetString The System.String to convert into a UnityEngine.Vector3 if possible. UnityEngine.Vector3 outputVector3 The outputted UnityEngine.Vector3 . Returns Type Description System.Boolean true/false if the conversion was successful. Remarks This isn't great for runtime performance, it should be used predominantly when reconstructing data. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API | GDX",
    "keywords": "API GitHub Repository"
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog | GDX",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [3.0.0] - 2022-05-01 \"Clean Slate\" As we began planning what this release might look like, the decision was made to attempt to clear out a significant portion of our technical debt by sunsetting unsupported versions of Unity. We also took this opportunity to reevaluate and upgrade portions of the framework to better position it for future growth. Added Dependencies on com.unity.mathematics , com.unity.burst , com.unity.jobs and com.unity.collections packages. Support for com.unity.runtime.dots (UNITY_DOTSRUNTIME) builds. Unsupported functionality will cause compilation errors during builds for immediate feedback on unsupported usage. Additionally, unsupported methods are flagged with an UnsupportedRuntimeException which is visible in documentation as well as IDE intelli-sense. Support for com.unity.entities programming patterns. BuildVerificationReport structure for quick validation of builds, including a TestBehaviour . StringKeyDictionary to optimize one of the most common use cases for dictionaries. SegmentedString to support string search patterns. Unity editor non-pro (light) theme. Additional information around naming conventions and design guidelines to documentation. Changed Properly formatted the CHANGELOG.md thanks to a proper linter, as well as tried to unify nomenclature used to describe changes. The GDX namespace has been reorganized. Conform naming conventions to Unity standard. GDXConfig has been simplified to Config , with member variables being statically accessible. Package's project settings were rebuilt to use UIElement s instead of IMGUI with added searchability. Smooth::HalfLifeToSmoothingFactor() no longer defaults elapsed time to Time.deltaTime The visual scripting module detects the package based installation available in Unity 2021 and forward. If you wish to have support in Unity 2020.3 via the Asset Store you will need to add a scripting define symbol of GDX_VISUALSCRIPTING to your project. All internal Dictionary<string, value> have been replaced with StringKeyDictionary<value> BuildInfoProvider now uses a TextGenerator for codegen. Platform::GetOutputFolder() supports being overridden via command-line argument GDX_OUTPUT_FOLDER . Internal members of SerializableDictionary have been renamed, FormerlySerializedAs attribute has been used to hopefully upgrade content. Localization::GetIETF() was renamed for clarity to Localization::GetIETF_BCP47() , with further value definitions. Optimized internals of CircularBuffer removing some garbage being made when using ToArray() . ListManagedPool rebuilt as SimpleListManagedPool for all object based pooling needs. Flagged DisableInInspectorAttributePropertyDrawer to only use UIElements version with UNITY_2022_2_OR_NEWER . GenerateProjectFiles now has more macOS options. The Camera extension method CaptureToPNG() has been renamed RenderToPNG() to reflect better its actual actions. Fixed Platform::IsFocused() now returns the proper focus state on desktop platforms. Removed Automation::GetTempFolder() in favour of using Platform::GetOutputFolder() . Automation::GetTempFilePath() in favour of using Platform::GetUniqueOutputFilePath() . NativeSimpleList in favour of builtin collection UnsafeList . NativeSimpleQueue in favour of builtin collection UnsafeQueue . GDXConfigInspector no longer needed as the serialized config model has been replaced. All \"Requires UnityEngine.CoreModule.dll\" remarks removed. [2.0.3] - 2021-12-01 \"Automate This\" This marks the start of our effort to refactor GDX to be more compatible outside of the GameObject world that we currently live in. Over the next couple versions a lot of effort will be going into making types Burst compatible. We will do this by changing the backing types to NativeCollections, however this will result in some slight changes to the API to force cleanup. Added A RandomWrapper was created to allow for System.Random to be used with the IRandomProvider interface. Cleaning method StringExtensions::StripNonAscii() . Editor scoped functionality, with supporting functionality builtin to provide reliable Unity editor testing. Automation::CaptureEditorWindow<T>() Automation::CaptureEditorWindowToPNG<T>() Automation::CaptureFocusedEditorWindow() Automation::CaptureFocusedEditorWindowToPNG() Numerous color comparison operation jobs. Jobs.ParallelFor.Color32CompareJob Jobs.ParallelFor.Color32MatchJob Jobs.ParallelFor.ColorCompareJob Jobs.ParallelFor.ColorMatchJob Changed Now using a NativeArray<uint> to store state in the 'WELL1024a', now requires the use of Dispose() . Some Platform methods behaved like extensions when they should not have been. Fixed WELL1024a exclusive methods truly will exclude the values correctly. [2.0.2] - 2021-11-03 \"Told Ya\" Mistakes were made; fixes happened. Added Infinitely sized CoalesceStream available for dealing with large data streams. A few ( Platform::EnsureFileWritable() , Platform::ForceDeleteFile() , Platform::IsFileWritable() ) file permission operations have been added. Fixed The manifest for the package can be found again! Corrected path information to reflect new hierarchy. [2.0.1] - 2021-11-02 \"Feature Branches\" A lot of experimental work is being now done in feature branches; this should speed up iteration time on releases. Added Trace configuration matrix available in project settings. Changed Internally used SettingsStyles has been split into SettingsStyles and SettingsLayoutOptions accordingly. Moved everything up one folder layer in package to fit with package standards. Fixed Optimized referencing of GDXConfig in author time operations (now similar to runtime). IListExtensions::ContainsItem() now uses Equals() to resolve literals issues with strings. Categories for Visual Scripting based entries are now correct. Resolved issue with newer Package Manager based lock files having no tag identities. [2.0.0] - 2021-05-09 \"Fresh Paint\" Breaking changes and a new license (BSL-1.0); making GDX even easier to include in projects! Added New FAQ section of the website, addressing some of the more frequently asked questions. WELL1024a implementation to replace removed MersenneTwister in GDX . IRandomProvider and RandomAdaptor to allow for some interchange with existing usages; these are slow and should be used as a last resort. StringExtensions::GetStableHashCode() for generating hashcode of strings identical to GetHashCode() , without the virtual call. TransientReference provides a comparable non-garbage collection blocking reference type. Report provides some of the common logic used by the newly added ResourcesAudit and ResourcesDiff . Think of this as an incredibly simple way to find resource memory leaks. Changed File license headers, repository wide now reference the BSL-1.0 license. Corrected minimum compatible version to 2018.4 in README.md Added latest version 2.0.0 to SECURITY.md , sunsetting 1.2.x . VisualScriptingCollectionAttribute , VisualScriptingExtensionAttribute , VisualScriptingTypeAttribute , VisualScriptingUtilityAttribute have been consolidated to VisualScriptingCompatible . NextDouble , NextSingle functionality on IRandomProviders do not default to extreme values. NativeSimpleList and NativeSimpleQueue are only available when com.unity.collections is not present. Altered API documentation to have a heirachial namespace index using custom tooling. Removed Removed some supporting types and methods used by GDX's project settings from documentation . Removed MersenneTwister to allow for our new licensing model (functionally replaced with WELL1024a implementation). [1.3.0] - 2021-04-06 \"Visual Time\" An effort to make GDX more accessible to Visual Scripting. Added Automated compatibility tests for 2018.4 LTS, 2019.4 LTS and 2020.3 LTS have been added to internal CI. Automated portability checks for .NET Standard 2.0 and .NET Core 3.1 to internal CI. Support for Visual Scripting (Bolt) with options in Project Settings to add a currated portion of the GDX API for usage with Visual Scripting. New array pooling type ArrayPool , with corresponding JaggedArrayWithCount . Numerous collections gained Reverse() methods, and the newly added Array2D also having ReverseRows() and ReverseColumns() . Changed Stated support for GDX has shifted to current release cycle Unity, with support for 2018.4 LTS, 2019.4 LTS and 2020.3 LTS. This doesn't mean that it will not work with other versions, just our automation only checks against LTS and current versions. Removed the extension Get method from GameObjectPool to match the other methods. Only Unity 2020+ supports the Package Manager resolve function, previous versions of Unity will be presented with an options dialog. Consolidated access/creation of GDXConfig . Altered NativeArray2D to index accessor to function like Array2D . Fixed Force the Package Manager to resolve the package manifest during an update. Occasional infinite loop importing GDXConfig with a cache server. Unsupported attributes for Unity 2018. Removed Struct specific extension methods have been removed from IListExtensions and SimpleListExtensions ; explicitly to avoid obsfucating boxing types and hiding a problem. [1.2.7] - 2021-03-16 \"Never Say Never\" Updates have been tested across different installation methods, a pooling system, and some fixes! Added UPM and GitHub installation methods utilizing the dev branch will have a \"Force Update\" action available to them in the Project Settings . PlatformExtensions now has a IsHeadless() method for determining if the application is running without a graphics device initialized; aka a headless server. EnumExtensions has a faster HasFlags() method for working with flags. PoolingSystem now exists in the GDX.Collections.Pooling namespace, including a GameObjectPool system. Trace static now available to funnel all GDX based logging through, with editor/build configurations available. Changed Made SparseSets .NET Standard 2.0 compliant @godjammit Fixed Caught issue with initialCapcity causing an OOB issue with SparseSets @godjammit Caught a few more null coalescing assignments that are not compatible with Unity 2019 in InspectorMessageBoxAttributeDecoratorDrawer . (thanks Nick & Gabe) Resolved PackageProvider issues with Unity 2019. [1.2.6] - 2021-02-15 \"UPM Updates\" Starting to frame up the ability to update package adds from GitHub. Added Some functionality around being able to update a UPM based package, by removing the entry in the lockfile, a package will update. Fixed NavMeshPathExtensions no longer breaks compiling without com.unity.mathematics . [1.2.5] - 2021-02-12 \"Hello World\" Enough critical mass has been hit with functionality that with this release we will start to look at publicizing the package more. Added Environment section of GDX project settings allows for an initial toggling of GDX scripting define symbol enforcement. TransformExtensions gained a GetScenePath() to create an easy way to identify an object in logs. GameObjectExtensions extended out to have more helper functionality. A GetOrAddComponent() method which ensures that a component exists (by adding) when requested. The GetScenePath() for easy identification as well. Changed The CHANGELOG.md has had it's identifiers simplified, retroactively. Functionality from inside of Editor.Build.BuildInfoProvider has been split into more specific classes for different build pipeline / paths. Classic Build Pipeline BuildInfoBuildCustomizer produces the BuildInfo file during that pipeline execution. ScriptingDefinesBuildCustomizer ensures the GDX scripting define is set during builds (if enabled). Legacy Build Pipeline BuildInfoBuildProcessor is used to produce the BuildInfo file during legacy builds, as well as resetting it in both Classic and Legacy builds. ScriptingDefinesBuildProcessor ensures the GDX scripting define is set during legacy builds. Fixed The CHANGELOG.md retroactively has had a Fixed section added. [1.2.4] - 2021-02-11 \"Cold Brew\" Bugfixes, feedback, and features, just what a growing library needs. Added GDX scripting define is automatically added to all build targets. GameObjectExtensions and TransformExtensions received a DestroyChildren() function. DisableInInspectorAttribute for all your disabled field needs. InspectorMessageBoxAttribute for ease of messaging/reminders. Changed Adopted using dev branch on GitHub for active development, pulling into version named branches for patching. Removed InspectorLabelAttribute , Unity has native InspectorNameAttribute in 2019.1+ Fixed Restored reference to Unity.PerformanceTesting [1.2.3] - 2021-02-09 \"Workplace 2.0\" Extending functionality out with more code from the backlog, while still addressing some oddities in the existing codebase. Added A Unity serializable dictionary based type Collections.Generic.SerializableDictionary . The SerializableDictionaryCustomPropertyDrawer requires Unity 2020.1 or newer; while the SerializableDictionary will still work without it, just without a pretty PropertyDrawer . Vector3Extensions.DistanceToRay() A way to get key positions CapsuleCollider.OutSphereCenters() from a CapsuleCollider . Improved on StringExtensions : Optimized test IsBooleanValue() . Optimized test IsBooleanPositiveValue() . Optimized test IsIntegerValue() Optimized test IsNumericalValue() . Exposed ASCII markers. NavMeshPathExtensions to help with working with AI/navigation. TransformExtensions A depth-limited GetFirstComponentInChildrenComplex() method. A quick GetActiveChildCount() reporting only on active child transforms. Automated culture setting on main thread when an unknown system language is found, protecting against specific calender situations. LICENSE.meta has returned to the package to stop compile warnings, we will just have to deal with GitHub not being able to figure out the license model automatically. Changed Added language to README.md and documentation regarding associations to Unity. Optimized GDXConfig loading at runtime. Wrap InspectorLabelAttribute in UNITY_EDITOR define requirement. Consolidated entirety of Editor.Settings related classes into private classes inside of itself. Moved Editor.InspectorLabelPropertyDrawer to Editor.PropertyDrawers.InspectorLabelPropertyDrawer Removed Centralized Strings , moving ownership of data to the actual primary consumer. Reference to unit test locations from files. Corrected Jobs package being included in Unity's CoreModule. [1.2.2] - 2021-02-1 \"Cookie Monster\" A whole lot of work went into trying to solidify what documentation is going to look like, as well as get foundational work in place to make sure anyone can contribute. Added Moved all static GUIContent from settings window into new SettingsContent . Moved all static layout functionality from SettingsStyles into SettingsLayout . Developer.Conditionals contains constant status indicators of packages used by GDX . Useful for determine if a certain feature set is available. Properly set define GDX_PLATFORMS based on the com.unity.platforms package. The Localization.GetHumanReadableFileSize() method to create more readable file size outputs. More functionality in Vector2Extensions NearestIndex() to find the closest position in an array. Slope() Additional functionality in Vector3Extensions HorizontalDistance() to get a horizontal distance ignoring vertically. NearestIndex() to find the closest position in an array of positions. StringExtensions 's TryParseVector2() and TryParseVector3() will rehydrate 0,0 and 0,0,0 formatted strings. A complex version of GetComponentInChildren() , called GetFirstComponentInChildrenComplex() is available in GameObjectExtensions and MonoBehaviourExtensions , allowing for recursion limits. BoxColliderExtensions.ContainsPosition() as a quick method to determine if a world space position is inside of a BoxCollider . CapsuleColliderExtensions.Direction() to get a Vector3 based direction for a CapsuleCollider . RigidbodyExtensions.MomentOfInertia() for an inertia calculation based on axis. Mathematics.Smooth adds Exponential() smoothing functionality. Mathematics.Rotate adds Towards() calculations. Changed Generated documentation now includes private and internal classes. Lowered feature requirement of com.unity.jobs to 0.2.7 , and com.unity.burst to 1.0.0 . GDX.Developer assembly collapsed back into main GDX assembly. Modified settings framework to be in a single GDX category in the Project Settings window, with collapsable sections contained within. StringExtensions.GetLowerCaseHashCode() renamed to StringExtensions.GetStableLowerCaseHashCode() . StringExtensions.GetUpperCaseHashCode() renamed to StringExtensions.GetStableUpperCaseHashCode() . ByteExtensions.GetValueHashCode() renamed to ByteExtensions.GetStableHashCode() . Better package installation type detection and handling of upgrades. This has cut down the possibilities of automatic upgrades, however efforts will continue to expand on this functionality. [1.2.1] - 2021-01-24 \"Old Is New\" A DocFX generated site is now being stood up by our internal CI when a new commit is made to the main branch. Added A proper Getting Started section to the manual Changed Fixes to compilation of code requiring C# 8 using UNITY_2020_2_OR_NEWER preprocessor in IO.Compression.TarFile , StringExtensions and Editor.UpdateProvider . Removed Removed the Wiki links and entries on GitHub, favoring discussions and content additions to the documentation . [1.2.0] - 2021-01-20 \"Cisco's Birthday\" A bit of refactoring around BuildInfo to make it a little easier to work with and some small additions to functionality by request. Added Separation of checking folders and files path structure, new Platform.EnsureFileFolderHiearchyExists() just for files. The ability (by default) to encompass the BuildInfo output folder in an assembly definition. An ability from Project Settings to output a default BuildInfo file. AssemblyInfo to each assembly to support internal access during unit testing. Applied MethodImplOptions.AggressiveInlining to many methods. A bunch of split related functionality to StringExtensions . GetAfterFirst() GetAfterLast() GetBeforeFirst() GetBeforeLast() Vector2Extensions and Vector3Extensions with associated unit testing. Approximately() Midpoint() StringExtensions SplitCamelCase() to help with formatting of internal data. Encrypt() and Decrypt() for all your string hiding needs. Changed All classes/structs with unit testing will reference the class in a comments ListExtensions renamed to IListExtensions (as well as its unit test class) Removed feature highlight section from README.md . Dropped in some unsafe attributes to StringExtensions.HasLowerCase() and StringExtensions.HasUpperCase() in StringExtensions . Reorganized Project Settings sections to be alphabetically sorted. Platform.EnsureFolderHierarchyExists() 's argument to be labeled folderPath to provide further clarity of the functional intent. Combined Developer.Build.BuildInfoGenerator into Developer.Build.BuildInfoProvider . Renamed Editor.Build.BuildInfoGeneratorTests to Editor.Build.BuildInfoProviderTests Fixed issue with output folder structure was not present for BuildInfo generation. Renamed Editor.SettingsGUILayout to Editor.SettingsStyles , while exposing more internals for reuse. [1.1.2] - 2021-01-18 \"EditMode Enabled\" Fixes for author-time code accessing runtime only parts. Added Added more EditMode unit test coverage. Developer.Build.BuildInfoGeneratorTests Developer.CommandLineParserTests Changed Renamed Editor.Config to Editor.ConfigProvider Fixed a bug where author-time calls to GDXConfig.Get() would return a null as it is meant for runtime only, they will now route through an editor safe path. Moved all Tests to follow the test runner naming EditMode for editor runnable unit tests, namespaces included inside the assembly have been stripped down as well. Exposed ProcessArguments() in Developer.CommandLineParser to allow for manual arguments to be added. [1.1.1] - 2021-01-17 \"Let Us Build\" A minor problem came to light after pushing the button. Changed Developer.Build.BuildInfoGenerator will now forcibly tell the Developer.CommandLineParser to do its thing prior to filling out the file. [1.1.0] - 2021-01-17 \"Breaking Bad\" We are breaking some rules! This should have been a major release as we have altered method names to be consistent across the API. Added GDX assembly documentation contains remarks where a function or class requires the presence of Unity's CoreModule to function correctly. GDXConfig scriptable object self creates to store persistent project-wide configurations for both runtime and author-time, editable through Project Settings . InspectorLabelAttribute (and supporting Editor.InspectorLabelPropertyDrawer ) to facilitate a quick way of replacing a labels content in the inspector. IO.Compression.TarFile support for decompressing tarballs. SemanticVersion struct for assistance with versioning. StringExtensions gained HasLowerCase() and HasUpperCase() checks. Strings.Null is a constant null value string Editor.Config static utility class to help with GDXConfig at author-time. Editor.Settings to drive specific GDX assembly settings to show up in the Project Settings window. Editor.SettingsGUILayout to assist with creating a consistent feel for GDX settings. Editor.GDXConfigEditor enforces that a selected GDXConfig does not allow for inspector changes. Editor.UpdateProvider , Editor.PackageProvider to facilitate updating of GDX package from different installation sources. Editor.VersionControl static utility class to help with VCS operations. Unit test coverage for extension classes. ArrayExtensionsTests ListExtensionsTests SimpleListExtensionsTests Additional coverage was added to StringExtensionsTests to cover HasUpperCase() and HasLowerCase() methods. GDX.Developer a separate assembly with more developer specific functionality. Developer.CommandLineParser to provide a simple, yet configurable argument parser. Developer.Editor.Build.BuildInfoProvider to facilitate automated BuildInfo generation across different pipelines. Developer.Editor.Build.BuildInfoGenerator to generate content for the BuildInfo file. Developer.Editor.Settings to drive specific GDX.Developer assembly settings to show up in the Project Settings window. Changed Updated the README.md header with logo and badges. Added release names to CHANGELOG.md as well as removed namespace sub-lists, settling on having full names in description instead. Altered arrangement of LICENSE with the hopes of appeasing the GitHub overlords of license type detection. ArrayExtensions to be more specific Corrected documentation of Clear() Class based operations FirstIndexOfItem() and LastIndexOfItem() Struct based operations FirstIndexOfValue() and LastIndexOfValue() Correctly moved into GDX namespace. ByteExtensions to be more specific Renamed hashing method to GetValueHashCode() ListExtensions to be more specific. Class based operations AddUniqueItem() , ContainsItem() , RemoveItems() , RemoveFirstItem() and RemoveLastItem() .. Struct based operations AddUniqueValue() , ContainsValue() , RemoveValues() , RemoveFirstValue() and RemoveLastValue() . SimpleListExtensions to be more specific. Class based operations AddUncheckedUniqueItem() , AddWithExpandCheckUniqueItem() , ContainsItem() , RemoveItems() , RemoveFirstItem() and RemoveLastItem() . Struct based operations AddUncheckedUniqueValue() , AddWithExpandCheckUniqueValue() , ContainsValue() , RemoveValues() , RemoveFirstValue() and RemoveLastValue() . Moved Collections.Byte2 to Mathematics.Byte2 as it made more sense to alongside other similar types in Unity.Mathematics . Removed Removed unused static StringBuilder from Strings . [1.0.0] - 2021-01-03 \"The Beginning\" Initial release containing only the GDX core library. Added Numerous static extension based functionality classes. AddressablesExtensions ArrayExtensions ByteExtensions ListExtensions SimpleListExtensions StringExtensions Numerous static utility classes. Display Localization Memory Platform Strings Bit array structures. Collections.BitArray8 Collections.BitArray16 Collections.BitArray32 Collections.BitArray64 Collections.BitArray128 Collections.BitArray256 Collections.BitArray512 Byte vector Collections.Byte2 . Sparse index pool structures Collections.SparseSet and Collections.NativeSparseSet Collections.FreeList Revolving buffer Collections.Generic.CircularBuffer . List -like structure Collections.Generic.SimpleList . A few NativeArray based structures. Collections.Generic.NativeArray2D Collections.Generic.NativeSimpleList Collections.Generic.NativeSimpleQueue Collections.Generic.NativeUniformArray3D . Numerous int32 buffer operation jobs. Jobs.ParallelFor.IntegerBufferCopyJob Jobs.ParallelFor.IntegerBufferFillJob Jobs.ParallelFor.IntegerBufferSwapJob Deterministic random Mathematics.Random.MersenneTwister ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Game Development Extensions | GDX",
    "keywords": "Game Development Extensions Game Development Extensions, a battle-tested library of game-ready high-performance C# code."
  },
  "license.html": {
    "href": "license.html",
    "title": "License | GDX",
    "keywords": "License Boost Software License - Version 1.0 - August 17th, 2003 Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the \"Software\") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following: The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/automation.html": {
    "href": "manual/automation.html",
    "title": "Automation | GDX",
    "keywords": "Automation Automated Tests Every commit triggers an assortment of automated tests that validate the GDX package. You can see the status of those tests registered against every commit in the dev branch on GitHub . It starts with a simple \"can we generate project files\". This tests if any API usage is invalid across different package arrangements and Unity versions. If those are successful, each version will respectively trigger a subsequent set of unit tests (powered by UTR) further validating expected outcomes of direct API calls. Finally, assuming all of the above has passed successfully, a version will trigger a build that will then be ran to evaluate our Build Verification Tests. Coverage How much of the codebase is covered by unit tests. Duplication Are we duplicating code? Inspection Static code analysis of numerous resharper-esque corrections. Portability A quick series of tests to identify what versions of .NET is required for GDX to function fully."
  },
  "manual/contributing.html": {
    "href": "manual/contributing.html",
    "title": "Contributing | GDX",
    "keywords": "Contributing Thank you for your interest in contributing to GDX! ❤️ While the GDX package has Unity employees amongst its contributors, it is not officially supported by Unity , and it is not on Unity's roadmap. Code of Conduct GitHub generated a nice and concise code of conduct agreement for the project. Let us be very explicit: don't be an asshole . Good and bad days happen, but the goal is to move forward together. Design Guidelines We try and keep some semblance of order to the GDX codebase. Building on the shoulders of the .NET team. Assisting with Documentation We aim to put documentation first. If a developer fails to grasp why to utilize a feature or component in GDX , we have not done our job effectively. Creating good documentation is important; please help us!"
  },
  "manual/contributing/code-of-conduct.html": {
    "href": "manual/contributing/code-of-conduct.html",
    "title": "Contributor Covenant Code of Conduct | GDX",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at support@dotbunny.com . All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4."
  },
  "manual/contributing/design-guidelines.html": {
    "href": "manual/contributing/design-guidelines.html",
    "title": "Design Guidelines | GDX",
    "keywords": "Design Guidelines There is a general effort to follow the Framework Design Guidelines set forth by the .NET team. While we do not always precisely adhere to them, they serve as a guiding principle. Coding Conventions .NET Coding Conventions is also a good point of reference. Unit Tests We are trying to get as much coverage in tests as possible on the package to try and mitigate regressions. Please have a read of Unit Testing Best Practices . Arrange, Act, Assert Coding Style Preference to expose backing data, indices, etc. Don't throw exceptions; garbage in, garbage out. Always prefer to use structs over classes. Code Organization Typically sections of classes are ordered alphabetically. Code Inspection We strive to not add to the problem of noise in code inspection, thus we try our best to markup our code in a manner which will let code analyzers know specifically that we have made choices about the way something is written and that it is by design. For example, in the GDX.Core we deploy a pattern to create a dispose sentinal pattern allowing for a destruction like behaviour to happen with a static class. #pragma warning disable IDE0052, IDE0090 // ReSharper disable UnusedMember.Local, ArrangeObjectCreationWhenTypeEvident static readonly CoreSentinel k_DisposeSentinel = new CoreSentinel(); // ReSharper restore UnusedMember.Local, ArrangeObjectCreationWhenTypeEvident #pragma warning restore IDE0052, IDE0090 Below is a list and explanation of some of the markup used in GDX . Compiler Warnings Code Description Level CS0168 The variable 'var' is declared but never used. 3 CS0169 The private field 'class member' is never used. 3 CS0414 The private field 'field' is assigned but its value is never used. 3 CS0429 Unreachable expression code detected. 4 CS0649 Field 'field' is never assigned to, and will always have its default value 'value'. 4 Code Quality Code Style Pragma Resharper Description IDE1006 InconsistentNaming Naming rule violation. IDE0051 ? Remove unused private member. IDE0052 UnusedMember.Local Remove unread private member. IDE0090 ArrangeObjectCreationWhenTypeEvident Simplify new expression. EditorConfig Support Embedded in the project is an EditorConfig , which should standardize much of the formatting. It is based on the .NET Roslyn repositories .editorconfig . Don't use anything that would break Unity 2020.3 (hybrid C# 8) Warns of non-explicit type definitions everywhere (we're not going to use var to promote better readability). Naming Convensions Just like every developer in history, the hardest part of our jobs is naming conventions. There are some basic conventions taht we try to use which make naming ever so slightly easier. Suffix Description Extensions A reserved name for base classes in GDX which build upon a concenpt. TBD Generator Something which produces consumable content. This varies in degree from things like file content to UI panels. These are meant to be single time usages ? Provider TBD"
  },
  "manual/contributing/documentation.html": {
    "href": "manual/contributing/documentation.html",
    "title": "Assisting with Documentation | GDX",
    "keywords": "Assisting with Documentation Important A midlevel developer given GDX should be able to pick it up and use it effectively just by reading the inline documentation. A pretty ambitious goal; that should set the tone for what we are aiming to do when it comes to documentation. Local Generation The documentation is statically generated using the DocFx project file located at .docfx/docfx.json . The scripts found in the GDX.Documentation repository are setup with assumed paths from an internal dotbunny project. If you wish to utilize those scripts you will need to arrange your folders accordingly. Note The scripts extensively use the relative folder depth to path to their targets. So the GDX repository path doesn't need to be exactly the same, but it does need to be 4 folders deep from the root. Path Description \\\\Documentation Git clone of https://github.com/dotBunny/GDX.Documentation . \\\\Projects\\GDX_Developent\\Packages\\com.dotbunny.gdx Git clone of https://github.com/dotBunny/GDX used for typical development. \\\\Projects\\GDX_Entities\\Packages\\com.dotbunny.gdx Git clone of https://github.com/dotBunny/GDX used for special entities workflows. \\\\External\\docfx\\docfx.exe Extracted version (2.x) from https://github.com/dotnet/docfx/releases . Scripts Path Description clean-build-deploy Clean all cached data, generate and deploy documentation to the GDX.Documentation docs folder. clean-build Clean all cached data and generate documentation. clean-serve Clean all cached data, generate and host documentation for preview. serve Iteratively generate and host documentation for preview. Common Issues Missing NuGet Build Tasks One issue that often comes up when trying to build the documents from source is a warning message in the log: Warning The \"GetReferenceNearestTargetFrameworkTask\" task was not found. This happens when a specific Code tools component NuGet targets and build tasks was not installed during the Visual Studio installation. You can resolve this by launching the Visual Studio Installer and modifying the existing installation."
  },
  "manual/faq.html": {
    "href": "manual/faq.html",
    "title": "Frequently Asked Questions | GDX",
    "keywords": "Frequently Asked Questions What does this license mean? The big reason for switching to BSL-1.0 license is that you no longer need to include any notice in your distributed game about the inclusion of GDX . This is the clear difference with this new licensing model, compared to the MIT license, which requires notice in produced materials. Therefore, you can drop the code in your project and start working. The only ask is to leave the source files headers alone. You can even distribute the GDX source code this way, so long as those headers are left in place. Why are exceptions not protected against? Garbage in, garbage out — Branching inside methods to handle scenarios that should have been protected against hire up in the call stack adds overhead and tech debt. GDX wants no part in your architectural problem. Note There are some scenarios where exceptions are thrown to match existing expected behaviours."
  },
  "manual/features.html": {
    "href": "manual/features.html",
    "title": "Features | GDX",
    "keywords": "Features This is an overview of some of the notable features contained within the GDX package. For a more thorough list of functionality make sure to explore the API documentation directly. Extensions A set of functionality, aggressively inlined where appropriate to augment workflows with existing or provided types and collections. Note There are some extensions based on GDX types which are not listed below, but are included in the package. Feature Description Addressables A collection of useful spawning and management functionality built on top of the com.unity.addressables package. For example identifying if a AssetReference is valid and able to be instantiated. Array A bunch of Array operations which are commonly used by other methods. For example getting the last or first index of an item or value in an Array . BoxCollider Find out if a position is contained within a BoxCollider . Byte Contains a simple non-allocating extension method to get a stable hash code from an array of bytes , maybe more someday. CapsuleCollider Simple helper for finding out which way a CapsuleCollider is oriented. GameObject After this long, even Unity can use a little help with some of its fundamental component based systems. IList A common set of methods for collections allowing for optimized value and item checks, as well as some extras. NavMeshPath Some helpful functions when trying to build out AI logic. Mesh A one of helper to calculate the volume of a mesh. Rigidbody A method for determining the moment of inertia. String The thing that started it all, a vast collection of extension methods covering a wide range from encryption to hash codes, to simply finding content an existing string . Transform Some useful functionality when it comes to working with Transform . Vector2 Additional functionality for common calculations done with Vector2 . For example, determining approximately if two Vector2 are the same efficiently, or finding the midpoint between two Vector2 . This automatically switches to using com.unity.mathematics functionality if available. Vector3 Additional functionality for common calculations done with Vector3 . For example, determining approximately if two Vector3 are the same efficiently, or finding the midpoint between two Vector3 . This automatically switches to using com.unity.mathematics functionality if available. Types & Collections An extensive group of struct and class designed with performance-sensitive environments in mind. Useful to avoid reinventing the wheel over and over again! Warning It's important to note that many of the structures backing data, indices, counts, etc., are publicly accessible. This is meant for advanced usage, change at runtime at your own risk. Feature Description Type Bit Arrays A selection of sized 8 , 16 , 32 , 64 , 128 , 256 and 512 index accessed bit arrays. struct Byte2 A fully implemented byte vector. struct Free List An array where indices are allocated from and stored in an in-place linked list. struct Native Sparse Set A Sparse Set , backed by two NativeArray . struct Sparse Set An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. struct Generics Feature Description Type Circular Buffer A sized buffer which loops back over itself as elements are filled. class Native 2D Array A 2-dimension NativeArray with a xy based accessor. struct Native Uniform 3D Array A 3-dimension NativeArray where all axis are the same length. Numerous accessors available, including a xyz based. struct SerializableDictionary A dictionary that can be serialized by Unity into its native YAML format. Usage of the editor side property drawer requires Unity 2020.1+ . class Utilities Everyone loves static utility classes, and naturally GDX has a bunch of them to help fill out some commonly used functionality. Feature Description Display Simplified querying of display capabilities. Localization ISO language based formatting functionality. Memory Specific functionality to ensure the heap is kept as small as possible. Platform A bunch of Hardware and I/O related methods. Smooth Some fancy smoothing functions. Developer Tools The missing or upgraded development process functionality. Feature Description Build Info Writer A system which latches on to the build pipeline to write a configurable BuildInfo class containing a passed set of parameters from commandline arguments. Command Line Parser A configurable command line parameter parsing system which can be queried at runtime (and in special cases during editor automation) for flags and key-value-pair data. Miscellaneous A few other notable inclusions which have been found useful. Feature Description WELL1024a A deterministic random number generator. Tarball Support A native method to inflate .tar and .tar.gz files. Used internally in the GDX package to handle upgrades from GitHub ."
  },
  "manual/features/serializable-dictionary.html": {
    "href": "manual/features/serializable-dictionary.html",
    "title": "Serializable Dictionary | GDX",
    "keywords": "Serializable Dictionary A New Beginning A typical piece of feedback we've heard repeatedly is that Unity needs to have a Dictionary collection capable of being serialized. With the introduction of template-based property drawers in Unity 2020.1 , the final piece to solving that puzzle landed. While the core functionality backing the SerializableDictionary is compatible across all supported versions of Unity. The real power comes from the freshly acquired property drawer features. Warning Unity's internal serializer cannot serialize System.Object , objects must inherit from UnityEngine.Object instead. Familiar Workflow One of the pillars of design for the SerializableDictionary was making sure that its workflow in editor kept in line with Unity's OrderedList inspector, with some obvious contextual tweaks. The left side ( A ) contains the entry's key, with its value ( B ) being listed directly beside it. Clicking on that row selects it, making the subtraction ( - ) button on the right available. Note The addition button ( + ) only becomes available when a valid and unique key is provided. The ability to edit the number of elements in the collection ( C ) is disabled due to the difficulty of predetermining valid keys for various types effectively. Code Example using GDX.Collections.Generic; public class SerializableDictionaryExamples { // An integer keyed collection of strings public SerializableDictionary<int, string> IntegerStringKVP = new SerializableDictionary<int, string>(); // A string keyed collection of GameObjects (works with Prefabs!) public SerializableDictionary<string, GameObject> StringGameObjectKVP = new SerializableDictionary<string, GameObject>(); }"
  },
  "manual/features/visual-scripting.html": {
    "href": "manual/features/visual-scripting.html",
    "title": "Visual Scripting Support | GDX",
    "keywords": "Visual Scripting Support Warning There is an inherent inefficiency in utilizing visual scripting; in most cases, hand-crafted code will outperform generated code. While GDX operates on the principle of performance first, this does not preclude the idea of providing performant nodes for visual scripting graphs. Adding GDX To Visual Scripting An assembly and its types need to be added to the unit list configuration of Visual Scripting to be usable. By default, this is a manual process available in the Visual Scripting section of the Project Settings . To speed this process up a bit and generally create a much nicer workflow, GDX provides a shortcutted workflow. A curated selection of functionality for Visual Scripting is available by clicking category checkboxes ( A ), and then clicking the Regenerate Units button ( B ). This button replicates the same functionality available in the Visual Scripting section of the Project Settings . The Install Docs button copies over a simplified version of XML documentation into a specific folder in your project so that Visual Scripting will have documentation for GDX based units. Toggling the dropdown arrows ( C ) will display a list of the types added by this category; clicking on a type will open its documentation."
  },
  "manual/getting-started.html": {
    "href": "manual/getting-started.html",
    "title": "Getting Started | GDX",
    "keywords": "Getting Started Installation There are many options to getting GDX into your project; each comes with its benefits and drawbacks. Unity Package Manager Installing via the package manager system (UPM) in Unity will provide an immutable (unable to be modified) copy of the package inside of your project. Tip There are two available UPM methods. You only need to pick one ! UPM: Package Manager Window The simplest and most straight forward method is to use Unity's built in workflow, once you have found and opened the Package Manager window ( Window > Package Manager ), follow these steps: Find the + button in the upper left portion of the Package Manager window, clicking it should reveal a dropdown menu. Select Add package from git URL... In the presented text field, enter: https://github.com/dotBunny/GDX.git After entering the URL, click Add . UPM: Package Manifest The above workflow provides a user interface for your project's manifest.json file. Alternatively, you can enter the necessary line into that file manually by opening Packages/manifest.json in a text editor and adding the dependency your self: { \"dependencies\": { \"com.dotbunny.gdx\": \"https://github.com/dotBunny/GDX.git\", } } Note You can also include branches or releases with this method by appending #branch to the end of the definition. Check out Unity's UPM page for more details. Asset Store Note Discussions to bring the package to the Asset Store are ongoing, we are looking to do this in the near future. OpenUPM The GDX package is registered with OpenUPM , and releases are automatically reflected in that registry. The package is registered as com.dotbunny.gdx . For detailed instructions on how to use the OpenUPM system and it's limitations, please consult their \" Installing a UPM package \" documentation. Cloned Repository It is possible for the repository to be cloned into a sub-folder in your project's Assets folder. This option makes it easy to modify GDX to your liking, as well as access additional in-development branches. git clone https://github.com/dotBunny/GDX.git This method is how typical development is done on GDX , however in the dev branch. Project Settings Upon installation, GDX should work out of the box. Further configuration of GDX is done by opening the Project Settings window ( Edit > Project Settings... ), and selecting the GDX section. You will be presented with a view similar to the image below, with numerous configuration options sorted by feature. Each feature has a collapsable section ( A ) that is expandable and collapsable by clicking the + / - buttons to the header's left. Features dynamically activate based on the Unity version and packages found in the project ( B ). A section header's background can inform you of the status of the feature. A green background indicates that the feature is active, where a yellow background means that it is currently disabled. Not all features are enabled by default and require an opt-in ( C ). A blue background indicates an always-on feature, most commonly just functionality that has some level of configuration. Persitent Storage Project-specific configuration values are stored in .\\Generated\\GDX.generated.cs (configurable) using an override pattern which automagically updates the Config when the Core statically initializes. Note This process works with DOTS_RUNTIME builds, however there is an additional need to call GDX.Core.InitializeOnMainThread() for thread specific initialization."
  },
  "manual/requirements.html": {
    "href": "manual/requirements.html",
    "title": "Requirements | GDX",
    "keywords": "Requirements The GDX package can be dropped into any compatible Unity project and selectively enables portions of its functionality based on what packages it finds in the project. GDX accomplishes this feat by utilizing a preprocessor setup that places functionality behind gated conditionals set by the assembly definition. Unity Versions The suggested minimum Unity version for using GDX is Unity 2020.3 ; internal development is done on 2021.1 . Compatibility is automatically tested against Unity's L ong T erm S upport releases 2018.4 , 2019.4 and 2020.3 . GDX utilizes assembly definition version defines to gate feature sets and employs specific coding patterns that may not be available in previous versions of Unity. Supported Packages We try to make sure we are compatible with the latest verified release of a package across all supported versions of Unity where possible. Define Package Minimum Unity Version Minimum Package Version GDX_ADDRESSABLES com.unity.addressables 2018.4 1.16.16 GDX_BURST com.unity.burst 2018.4 1.4.6 GDX_MATHEMATICS com.unity.mathematics 2018.4 1.2.1 GDX_PLATFORMS com.unity.platforms 2020.3 0.11.0-preview.17 GDX_VISUALSCRIPTING com.unity.visual-scripting 2021.1 1.52 GDX_COLLECTIONS com.unity.collections 2019.4 0.14.0 Note It is essential to remember that the GDX_* defines are only valid inside the GDX assembly, see Conditionals if you wish to access some semblance outside of GDX . Portability Automation continually checks the portability of the code used in GDX ensuring the compatibility across various platforms. Platform Version .NET Core + Platform Extensions 3.1 .NET Core 3.1 .NET Standard + Platform Extensions 2.0"
  },
  "manual/security.html": {
    "href": "manual/security.html",
    "title": "Security Policy | GDX",
    "keywords": "Security Policy Supported Versions In the unlikely situation where GDX is found to contain a security vulnerability, updates will be issued within 48 hours of the first point of notification and validation, in accordance to the supported version chart below. Version Supported 3.0.x ✅ 2.0.x ✅ 1.3.x ❌ 1.2.x ❌ 1.1.x ❌ 1.0.x ❌ Reporting a Vulnerability If you suspect a vulnerability caused by GDX , please contact support@dotbunny.com directly with as much detail as possible. We will follow up within 48 hours. If the suspected issue is proven to be a vulnerability, an anonymized security advisory notice will be posted publicly along with side updates to the package."
  }
}