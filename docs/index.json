{
  "api/GDX.AddressablesExtensions.html": {
    "href": "api/GDX.AddressablesExtensions.html",
    "title": "AddressablesExtensions | GDX",
    "keywords": "Class AddressablesExtensions Addressables Based Extension Methods Inheritance System.Object AddressablesExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class AddressablesExtensions Remarks Requires UnityEngine.CoreModule.dll to function correctly. Requires com.unity.addressables Package. Methods | Improve this Doc View Source CanInstantiate(AssetReference) Can targetAssetReference be instantiated at runtime? Declaration public static bool CanInstantiate(this AssetReference targetAssetReference) Parameters Type Name Description UnityEngine.AddressableAssets.AssetReference targetAssetReference The target UnityEngine.AddressableAssets.AssetReference . Returns Type Description System.Boolean true/false Remarks Checks that it is not empty, has a runtime key, and makes sure the key is valid. | Improve this Doc View Source CanRelease(AsyncOperationHandle<GameObject>, Boolean) Can the targetAsyncOperationHandle be released? Declaration public static bool CanRelease(this AsyncOperationHandle<GameObject> targetAsyncOperationHandle, bool autoRelease = false) Parameters Type Name Description UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle < UnityEngine.GameObject > targetAsyncOperationHandle A target UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle<TObject> typed as UnityEngine.GameObject . System.Boolean autoRelease If it can, should the handle release? Returns Type Description System.Boolean true/false | Improve this Doc View Source HasRuntimeKey(AssetReference) Does targetAssetReference have a runtime key? Declaration public static bool HasRuntimeKey(this AssetReference targetAssetReference) Parameters Type Name Description UnityEngine.AddressableAssets.AssetReference targetAssetReference The target UnityEngine.AddressableAssets.AssetReference . Returns Type Description System.Boolean true/false Remarks Will return false if the reference is null . | Improve this Doc View Source IsEmpty(AssetReference) Is targetAssetReference empty? Declaration public static bool IsEmpty(this AssetReference targetAssetReference) Parameters Type Name Description UnityEngine.AddressableAssets.AssetReference targetAssetReference The target UnityEngine.AddressableAssets.AssetReference . Returns Type Description System.Boolean true/false"
  },
  "api/GDX.ArrayExtensions.html": {
    "href": "api/GDX.ArrayExtensions.html",
    "title": "ArrayExtensions | GDX",
    "keywords": "Class ArrayExtensions Array Based Extension Methods Inheritance System.Object ArrayExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class ArrayExtensions Methods | Improve this Doc View Source Clear<T>(T[]) Set all elements in an array to the default values. Declaration public static void Clear<T>(this T[] targetArray) Parameters Type Name Description T[] targetArray The array to be defaulted. Type Parameters Name Description T The type of the array. Remarks This does not alter the targetArray 's length. | Improve this Doc View Source ContainsItem<T>(T[], T) Does targetArray contain targetValue ? Declaration public static bool ContainsItem<T>(this T[] targetArray, T targetValue) where T : class Parameters Type Name Description T[] targetArray The System.Array to look in. T targetValue The target item to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Array . | Improve this Doc View Source ContainsReference<T>(T[], T) Does targetArray contain targetItem ? Declaration public static bool ContainsReference<T>(this T[] targetArray, T targetItem) where T : class Parameters Type Name Description T[] targetArray The System.Array to look in. T targetItem The target item to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Array . Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source ContainsValue<T>(T[], T) Does targetArray contain targetValue ? Declaration public static bool ContainsValue<T>(this T[] targetArray, T targetValue) where T : IEquatable<T> Parameters Type Name Description T[] targetArray The System.Array to look in. T targetValue The target value to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Array . | Improve this Doc View Source FirstIndexOf<T>(T[], T) Find the first index of targetItem in targetArray . Declaration public static int FirstIndexOf<T>(this T[] targetArray, T targetItem) where T : IEquatable<T> Parameters Type Name Description T[] targetArray The array which to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. Remarks This will work for System.String comparisons. | Improve this Doc View Source FirstIndexOfItem<T>(T[], T) Find the first index of targetItem in targetArray . Declaration public static int FirstIndexOfItem<T>(this T[] targetArray, T targetItem) where T : class Parameters Type Name Description T[] targetArray The array which to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. Remarks Ignores equality check and end up comparing object pointers. Do NOT use this for System.String types. | Improve this Doc View Source FirstIndexOfValue<T>(T[], T) Find the first index of targetValue in targetArray . Declaration public static int FirstIndexOfValue<T>(this T[] targetArray, T targetValue) where T : struct Parameters Type Name Description T[] targetArray The array which to look in. T targetValue The value to be found. Returns Type Description System.Int32 The index of targetValue in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source LastIndexOf<T>(T[], T) Find the last index of targetItem in targetArray . Declaration public static int LastIndexOf<T>(this T[] targetArray, T targetItem) where T : IEquatable<T> Parameters Type Name Description T[] targetArray The array which to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. Remarks This will work for System.String comparisons. | Improve this Doc View Source LastIndexOfItem<T>(T[], T) Find the last index of targetItem in targetArray . Declaration public static int LastIndexOfItem<T>(this T[] targetArray, T targetItem) where T : class Parameters Type Name Description T[] targetArray The array which to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source LastIndexOfValue<T>(T[], T) Find the last index of targetValue in targetArray . Declaration public static int LastIndexOfValue<T>(this T[] targetArray, T targetValue) where T : struct Parameters Type Name Description T[] targetArray The array which to look in. T targetValue The value to be found. Returns Type Description System.Int32 The index of targetValue in targetArray , or -1 if not found. Type Parameters Name Description T The type of the array."
  },
  "api/GDX.BoxColliderExtensions.html": {
    "href": "api/GDX.BoxColliderExtensions.html",
    "title": "BoxColliderExtensions | GDX",
    "keywords": "Class BoxColliderExtensions UnityEngine.BoxCollider Based Extension Methods Inheritance System.Object BoxColliderExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class BoxColliderExtensions Methods | Improve this Doc View Source ContainsPosition(BoxCollider, Vector3) Is the worldPosition inside of the targetBoxCollider ? Declaration public static bool ContainsPosition(this BoxCollider targetBoxCollider, Vector3 worldPosition) Parameters Type Name Description UnityEngine.BoxCollider targetBoxCollider The UnityEngine.BoxCollider to use for evaluation. UnityEngine.Vector3 worldPosition A UnityEngine.Vector3 point in world space. Returns Type Description System.Boolean true/false if the world position is contained within the targetBoxCollider . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.ByteExtensions.html": {
    "href": "api/GDX.ByteExtensions.html",
    "title": "ByteExtensions | GDX",
    "keywords": "Class ByteExtensions System.Byte Based Extension Methods Inheritance System.Object ByteExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class ByteExtensions Methods | Improve this Doc View Source GetStableHashCode(Byte[]) Get the stable hash code of targetBytes , an array of System.Byte . Declaration public static int GetStableHashCode(this byte[] targetBytes) Parameters Type Name Description System.Byte [] targetBytes The target array of System.Byte . Returns Type Description System.Int32 A System.Int32 value. Remarks Does NOT get the object's hashcode. | Improve this Doc View Source IsSame(Byte[], Byte[]) Are the two provided System.Byte arrays the same. Declaration public static bool IsSame(this byte[] sourceBytes, byte[] targetBytes) Parameters Type Name Description System.Byte [] sourceBytes The left hand side System.Byte array to compare. System.Byte [] targetBytes The right hand side System.Byte array to compare. Returns Type Description System.Boolean true if they are identical, will also return true if both are null."
  },
  "api/GDX.CameraExtensions.html": {
    "href": "api/GDX.CameraExtensions.html",
    "title": "CameraExtensions | GDX",
    "keywords": "Class CameraExtensions UnityEngine.Camera Based Extension Methods Inheritance System.Object CameraExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class CameraExtensions Methods | Improve this Doc View Source RenderToPNG(Camera, String, Int32, Int32, Int32) Forces a UnityEngine.Camera through RenderToTexture(Camera, Int32, Int32, Int32) encoding to PNG. Declaration public static bool RenderToPNG(this Camera targetCamera, string outputPath, int width = 1920, int height = 1080, int depthBuffer = 24) Parameters Type Name Description UnityEngine.Camera targetCamera The target UnityEngine.Camera to use. System.String outputPath The full path to output the PNG bytes. System.Int32 width The desired width of the rendered texture. System.Int32 height The desired height of the rendered texture. System.Int32 depthBuffer The desired depth of the rendered texture. Returns Type Description System.Boolean true/false if the capture was successful. Remarks This does not indicate if the writing of the PNG was successful. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source RenderToTexture(Camera, Int32, Int32, Int32) Forces a UnityEngine.Camera to render it's view into a texture. Declaration public static Texture2D RenderToTexture(this Camera targetCamera, int width = 1920, int height = 1080, int depthBuffer = 24) Parameters Type Name Description UnityEngine.Camera targetCamera The target UnityEngine.Camera to use. System.Int32 width The desired width of the rendered texture. System.Int32 height The desired height of the rendered texture. System.Int32 depthBuffer The desired depth of the rendered texture. Returns Type Description UnityEngine.Texture2D The rendered view. Remarks This behaves differently then using UnityEngine.ScreenCapture . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.CapsuleColliderExtensions.html": {
    "href": "api/GDX.CapsuleColliderExtensions.html",
    "title": "CapsuleColliderExtensions | GDX",
    "keywords": "Class CapsuleColliderExtensions UnityEngine.CapsuleCollider Based Extension Methods Inheritance System.Object CapsuleColliderExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class CapsuleColliderExtensions Methods | Improve this Doc View Source Direction(CapsuleCollider) Get a UnityEngine.Vector3 based orientation of the targetCapsuleCollider . Declaration public static Vector3 Direction(this CapsuleCollider targetCapsuleCollider) Parameters Type Name Description UnityEngine.CapsuleCollider targetCapsuleCollider The capsule collider Returns Type Description UnityEngine.Vector3 The direction of a UnityEngine.CapsuleCollider in its local space. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OutSphereCenters(CapsuleCollider, out Vector3, out Vector3) Return into topPosition and bottomPosition , the respective world-space position of a UnityEngine.CapsuleCollider 's spheres centers. Declaration public static void OutSphereCenters(CapsuleCollider targetCapsuleCollider, out Vector3 topPosition, out Vector3 bottomPosition) Parameters Type Name Description UnityEngine.CapsuleCollider targetCapsuleCollider The UnityEngine.CapsuleCollider having its spheres evaluated. UnityEngine.Vector3 topPosition The determined top spheres center position in world-space. UnityEngine.Vector3 bottomPosition The determined bottom spheres center position in world-space. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Collections.ArrayHolder-1.html": {
    "href": "api/GDX.Collections.ArrayHolder-1.html",
    "title": "ArrayHolder<T> | GDX",
    "keywords": "Struct ArrayHolder<T> A struct purely created to allow for serialization of multi-dimensional arrays. Namespace : GDX.Collections Syntax [Serializable] public struct ArrayHolder<T> Type Parameters Name Description T Fields | Improve this Doc View Source TArray Declaration public T[] TArray Field Value Type Description T[] Properties | Improve this Doc View Source Item[Int32] Declaration public readonly ref T this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description T"
  },
  "api/GDX.Collections.BitArray128.html": {
    "href": "api/GDX.Collections.BitArray128.html",
    "title": "BitArray128 | GDX",
    "keywords": "Struct BitArray128 A 128-bit array. Namespace : GDX.Collections Syntax public struct BitArray128 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray128[1]) { BeAwesome(); } Fields | Improve this Doc View Source Bits0 First reserved System.Int32 memory block. Declaration public int Bits0 Field Value Type Description System.Int32 Remarks Indices 0-31 | Improve this Doc View Source Bits1 Second reserved System.Int32 memory block. Declaration public int Bits1 Field Value Type Description System.Int32 Remarks Indices 32-63 | Improve this Doc View Source Bits2 Third reserved System.Int32 memory block. Declaration public int Bits2 Field Value Type Description System.Int32 Remarks Indices 64-95 | Improve this Doc View Source Bits3 Fourth reserved System.Int32 memory block. Declaration public int Bits3 Field Value Type Description System.Int32 Remarks Indices 96-127 Properties | Improve this Doc View Source Item[Int32] Access bit in array. Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray16.html": {
    "href": "api/GDX.Collections.BitArray16.html",
    "title": "BitArray16 | GDX",
    "keywords": "Struct BitArray16 A 16-bit array. Namespace : GDX.Collections Syntax [Serializable] public struct BitArray16 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray16[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray16(UInt16) Create a new BitArray16 based on provided bits0 . Declaration public BitArray16(ushort bits0) Parameters Type Name Description System.UInt16 bits0 An existing value to be used to create the backing data for a BitArray16 Fields | Improve this Doc View Source Bits0 First reserved System.UInt16 memory block (16-bits). Declaration public ushort Bits0 Field Value Type Description System.UInt16 Remarks Indices 0-15 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray256.html": {
    "href": "api/GDX.Collections.BitArray256.html",
    "title": "BitArray256 | GDX",
    "keywords": "Struct BitArray256 A 256-bit array. Namespace : GDX.Collections Syntax public struct BitArray256 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray256[1]) { BeAwesome(); } Fields | Improve this Doc View Source Bits0 First reserved System.Int32 memory block. Declaration public int Bits0 Field Value Type Description System.Int32 Remarks Indices 0-31 | Improve this Doc View Source Bits1 Second reserved System.Int32 memory block. Declaration public int Bits1 Field Value Type Description System.Int32 Remarks Indices 32-63 | Improve this Doc View Source Bits2 Third reserved System.Int32 memory block. Declaration public int Bits2 Field Value Type Description System.Int32 Remarks Indices 64-95 | Improve this Doc View Source Bits3 Fourth reserved System.Int32 memory block. Declaration public int Bits3 Field Value Type Description System.Int32 Remarks Indices 96-127 | Improve this Doc View Source Bits4 Fifth reserved System.Int32 memory block. Declaration public int Bits4 Field Value Type Description System.Int32 Remarks Indices 128-159 | Improve this Doc View Source Bits5 Sixth reserved System.Int32 memory block. Declaration public int Bits5 Field Value Type Description System.Int32 Remarks Indices 160-191 | Improve this Doc View Source Bits6 Seventh reserved System.Int32 memory block. Declaration public int Bits6 Field Value Type Description System.Int32 Remarks Indices 192-223 | Improve this Doc View Source Bits7 Eighth reserved System.Int32 memory block. Declaration public int Bits7 Field Value Type Description System.Int32 Remarks Indices 224-255 Properties | Improve this Doc View Source Item[Int32] Access bit in array. Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray32.html": {
    "href": "api/GDX.Collections.BitArray32.html",
    "title": "BitArray32 | GDX",
    "keywords": "Struct BitArray32 A 32-bit array. Namespace : GDX.Collections Syntax [Serializable] public struct BitArray32 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray32[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray32(UInt32) Create a new BitArray32 based on provided bits0 . Declaration public BitArray32(uint bits0) Parameters Type Name Description System.UInt32 bits0 An existing value to be used to create the backing data for a BitArray32 Fields | Improve this Doc View Source Bits0 First reserved System.UInt32 memory block (32-bits). Declaration public uint Bits0 Field Value Type Description System.UInt32 Remarks Indices 0-31 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray512.html": {
    "href": "api/GDX.Collections.BitArray512.html",
    "title": "BitArray512 | GDX",
    "keywords": "Struct BitArray512 A 512-bit array. Namespace : GDX.Collections Syntax public struct BitArray512 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray512[1]) { BeAwesome(); } Fields | Improve this Doc View Source Bits0 First reserved System.Int32 memory block. Declaration public int Bits0 Field Value Type Description System.Int32 Remarks Indices 0-31 | Improve this Doc View Source Bits1 Second reserved System.Int32 memory block. Declaration public int Bits1 Field Value Type Description System.Int32 Remarks Indices 32-63 | Improve this Doc View Source Bits10 Eleventh reserved System.Int32 memory block. Declaration public int Bits10 Field Value Type Description System.Int32 Remarks Indices 320-351 | Improve this Doc View Source Bits11 Twelfth reserved System.Int32 memory block. Declaration public int Bits11 Field Value Type Description System.Int32 Remarks Indices 352-383 | Improve this Doc View Source Bits12 Thirteenth reserved System.Int32 memory block. Declaration public int Bits12 Field Value Type Description System.Int32 Remarks Indices 384-415 | Improve this Doc View Source Bits13 Fourteenth reserved System.Int32 memory block. Declaration public int Bits13 Field Value Type Description System.Int32 Remarks Indices 416-447 | Improve this Doc View Source Bits14 Fifteenth reserved System.Int32 memory block. Declaration public int Bits14 Field Value Type Description System.Int32 Remarks Indices 448-479 | Improve this Doc View Source Bits15 Sixteenth reserved System.Int32 memory block. Declaration public int Bits15 Field Value Type Description System.Int32 Remarks Indices 480-511 | Improve this Doc View Source Bits2 Third reserved System.Int32 memory block. Declaration public int Bits2 Field Value Type Description System.Int32 Remarks Indices 64-95 | Improve this Doc View Source Bits3 Fourth reserved System.Int32 memory block. Declaration public int Bits3 Field Value Type Description System.Int32 Remarks Indices 96-127 | Improve this Doc View Source Bits4 Fifth reserved System.Int32 memory block. Declaration public int Bits4 Field Value Type Description System.Int32 Remarks Indices 128-159 | Improve this Doc View Source Bits5 Sixth reserved System.Int32 memory block. Declaration public int Bits5 Field Value Type Description System.Int32 Remarks Indices 160-191 | Improve this Doc View Source Bits6 Seventh reserved System.Int32 memory block. Declaration public int Bits6 Field Value Type Description System.Int32 Remarks Indices 192-223 | Improve this Doc View Source Bits7 Eighth reserved System.Int32 memory block. Declaration public int Bits7 Field Value Type Description System.Int32 Remarks Indices 224-255 | Improve this Doc View Source Bits8 Ninth reserved System.Int32 memory block. Declaration public int Bits8 Field Value Type Description System.Int32 Remarks Indices 256-287 | Improve this Doc View Source Bits9 Tenth reserved System.Int32 memory block. Declaration public int Bits9 Field Value Type Description System.Int32 Remarks Indices 288-319 Properties | Improve this Doc View Source Item[Int32] Access bit in array. Declaration public bool this[int index] { get; set; } Parameters Type Name Description System.Int32 index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray64.html": {
    "href": "api/GDX.Collections.BitArray64.html",
    "title": "BitArray64 | GDX",
    "keywords": "Struct BitArray64 A 64-bit array. Namespace : GDX.Collections Syntax [Serializable] public struct BitArray64 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray64[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray64(Int64) Create a new BitArray64 based on provided bits0 . Declaration public BitArray64(long bits0) Parameters Type Name Description System.Int64 bits0 An existing value to be used to create the backing data for a BitArray64 Fields | Improve this Doc View Source Bits0 First reserved System.Int64 memory block (64-bits). Declaration public long Bits0 Field Value Type Description System.Int64 Remarks Indices 0-63 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.BitArray8.html": {
    "href": "api/GDX.Collections.BitArray8.html",
    "title": "BitArray8 | GDX",
    "keywords": "Struct BitArray8 A 8-bit array. Namespace : GDX.Collections Syntax [Serializable] public struct BitArray8 Examples Useful for packing a bunch of data with known indices tightly. if(myBitArray8[1]) { BeAwesome(); } Constructors | Improve this Doc View Source BitArray8(Byte) Create a new BitArray8 based on provided bits0 . Declaration public BitArray8(byte bits0) Parameters Type Name Description System.Byte bits0 An existing value to be used to create the backing data for a BitArray8 Fields | Improve this Doc View Source Bits0 First reserved System.Byte memory block (8-bits). Declaration public byte Bits0 Field Value Type Description System.Byte Remarks Indices 0-7 Properties | Improve this Doc View Source Item[Byte] Access bit in array. Declaration public bool this[byte index] { get; set; } Parameters Type Name Description System.Byte index Target bit index. Property Value Type Description System.Boolean"
  },
  "api/GDX.Collections.FreeList.html": {
    "href": "api/GDX.Collections.FreeList.html",
    "title": "FreeList | GDX",
    "keywords": "Struct FreeList An array where indices are allocated from and stored in an in-place linked list. Allocating or deallocating a single int from this array is very fast, as is single datum lookup, but neither the allocated indices nor the free indices can be reliably iterated without an external data structure. This structure can be adapted to an arbitrary of external, parallel arrays. Namespace : GDX.Collections Syntax public struct FreeList Constructors | Improve this Doc View Source FreeList(Int32) Declaration public FreeList(int initialCapacity) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the array. Fields | Improve this Doc View Source Count The total number of currently-allocated indices. Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source CurrentFreeIndex The next available index of the free-list. Declaration public int CurrentFreeIndex Field Value Type Description System.Int32 | Improve this Doc View Source Indices Data storage for allocated indices as well as the in-place free-list. Declaration public int[] Indices Field Value Type Description System.Int32 [] Methods | Improve this Doc View Source AddUnchecked(Int32) Allocates an index from the free-list and stores an integer there, without checking for expansion. Declaration public int AddUnchecked(int data) Parameters Type Name Description System.Int32 data The integer value to store at the allocated index. Returns Type Description System.Int32 The index allocated from the free-list. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32) Allocates an index from the free-list and stores an integer there, expanding the array by twice the current size if necessary. Declaration public bool AddWithExpandCheck(int data, out int allocatedIndex) Parameters Type Name Description System.Int32 data The integer value to store at the allocated index. System.Int32 allocatedIndex The index allocated from the free-list. Returns Type Description System.Boolean True if the array expanded. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, Int32) Allocates an index from the free-list and stores an integer there, expanding the array if necessary. Declaration public bool AddWithExpandCheck(int data, out int allocatedIndex, int expandBy) Parameters Type Name Description System.Int32 data The integer value to store at the allocated index. System.Int32 allocatedIndex The index allocated from the free-list. System.Int32 expandBy How much the array should expand by when out of space. Returns Type Description System.Boolean True if the array expanded. | Improve this Doc View Source Clear() Removes all allocated data and rebuilds the free-list. Declaration public void Clear() | Improve this Doc View Source GetAndRemoveAt(Int32) Retrieves the value stored at the given index and deallocates the index, adding it to the free-list. Declaration public int GetAndRemoveAt(int index) Parameters Type Name Description System.Int32 index The index to add to the free-list. Returns Type Description System.Int32 The value stored at the given index. | Improve this Doc View Source RemoveAt(Int32) Deallocates the given index and adds it to the free-list. Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The index to add to the free-list."
  },
  "api/GDX.Collections.Generic.Array2D-1.html": {
    "href": "api/GDX.Collections.Generic.Array2D-1.html",
    "title": "Array2D<T> | GDX",
    "keywords": "Struct Array2D<T> A 2-dimensional array backed by a flat array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct Array2D<T> : IDisposable Type Parameters Name Description T Type of objects. Remarks Mimics multi-dimensional array format. Constructors | Improve this Doc View Source Array2D(Int32, Int32) Create a Array2D<T> . Declaration public Array2D(int rowCount, int columnCount) Parameters Type Name Description System.Int32 rowCount The number of rows (X). System.Int32 columnCount The number of columns (Y). | Improve this Doc View Source Array2D(Int32, Int32, T[]) Create a Array2D<T> providing an existing arrayToUse . Declaration public Array2D(int rowCount, int columnCount, T[] arrayToUse) Parameters Type Name Description System.Int32 rowCount The number of rows (X). System.Int32 columnCount The number of columns (Y). T[] arrayToUse An existing array to use in the Array2D<T> . Fields | Improve this Doc View Source Array The backing flat array. Declaration public T[] Array Field Value Type Description T[] | Improve this Doc View Source ColumnCount The length of each pseudo-array in the dataset. Declaration public int ColumnCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source RowCount The number of pseudo-arrays created to support the dimensionality. Declaration public int RowCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32, Int32] Get a typed object at a specific 2-dimensional index in Array . Declaration public T this[int x, int y] { get; set; } Parameters Type Name Description System.Int32 x The row/line number (vertical axis). System.Int32 y The column number (horizontal axis). Property Value Type Description T Methods | Improve this Doc View Source AddColumns(Int32) Add additional columns to the dataset. Declaration public void AddColumns(int numberOfNewColumns) Parameters Type Name Description System.Int32 numberOfNewColumns The number of columns add. | Improve this Doc View Source AddRows(Int32) Add additional rows to the dataset. Declaration public void AddRows(int numberOfNewRows) Parameters Type Name Description System.Int32 numberOfNewRows The number of rows/arrays to add. | Improve this Doc View Source Dispose() Properly dispose of the Array2D<T> . Declaration public void Dispose() | Improve this Doc View Source GetColumnIndex(Int32) Get the column index of the provided index . Declaration public int GetColumnIndex(int index) Parameters Type Name Description System.Int32 index A valid index contained within Array . Returns Type Description System.Int32 The column index. | Improve this Doc View Source GetRowIndex(Int32) Get the row index of the provided index . Declaration public int GetRowIndex(int index) Parameters Type Name Description System.Int32 index A valid index contained within Array . Returns Type Description System.Int32 The row index. | Improve this Doc View Source ReverseColumns() Reverse the order of the columns in the backing Array . Declaration public void ReverseColumns() | Improve this Doc View Source ReverseRows() Reverse the order of the rows in the backing Array . Declaration public void ReverseRows() | Improve this Doc View Source RotateClockwise() Rotate internal dataset clockwise. Declaration public void RotateClockwise() | Improve this Doc View Source RotateCounterClockwise() Rotate internal dataset counter-clockwise. Declaration public void RotateCounterClockwise() | Improve this Doc View Source ToMultiDimensionalArray() Creates a copy of the internal array as a traditional multi-dimensional array. Declaration public T[, ] ToMultiDimensionalArray() Returns Type Description T[,] A new copy of the backing Array in multi-dimensional form. Remarks Useful for scenarios where fills need to be done with [,] structured multi-dimensional arrays. Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.Array2DExtensions.html": {
    "href": "api/GDX.Collections.Generic.Array2DExtensions.html",
    "title": "Array2DExtensions | GDX",
    "keywords": "Class Array2DExtensions Array2D Based Extension Methods Inheritance System.Object Array2DExtensions Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)2)] public static class Array2DExtensions Methods | Improve this Doc View Source Scale(ref Array2D<Single>, Int32) Generate an array scaled by bilinear interpolation. Declaration public static Array2D<float> Scale(this ref Array2D<float> inputArray, int scaleFactor = 2) Parameters Type Name Description Array2D < System.Single > inputArray The existing Array2D<T> to scale. System.Int32 scaleFactor The multiple to scale by. Returns Type Description Array2D < System.Single > Remarks Works with System.Single values."
  },
  "api/GDX.Collections.Generic.Array3D-1.html": {
    "href": "api/GDX.Collections.Generic.Array3D-1.html",
    "title": "Array3D<T> | GDX",
    "keywords": "Struct Array3D<T> A three-dimensional array backed a flat array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct Array3D<T> : IDisposable Type Parameters Name Description T Type of objects. Constructors | Improve this Doc View Source Array3D(Int32, Int32, Int32) Create a Array3D<T> with a uniform dimensional length. Declaration public Array3D(int width, int height, int depth) Parameters Type Name Description System.Int32 width X-axis length. System.Int32 height Y-axis length. System.Int32 depth Z-axis length. Fields | Improve this Doc View Source Array The backing flat array. Declaration public T[] Array Field Value Type Description T[] | Improve this Doc View Source Depth The stride of the z-axis segment in Array . Declaration public readonly int Depth Field Value Type Description System.Int32 | Improve this Doc View Source DepthLength The total length of a single Depth . Declaration public readonly int DepthLength Field Value Type Description System.Int32 | Improve this Doc View Source Height The stride of the y-axis segment in Array . Declaration public readonly int Height Field Value Type Description System.Int32 | Improve this Doc View Source Length The length of Array . Declaration public readonly int Length Field Value Type Description System.Int32 | Improve this Doc View Source Width The stride of the x-axis segment in Array . Declaration public readonly int Width Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[Int32, Int32, Int32] Access a specific location in the voxel. Declaration public T this[int x, int y, int z] { get; set; } Parameters Type Name Description System.Int32 x X location index. System.Int32 y Y location index. System.Int32 z Z location index. Property Value Type Description T | Improve this Doc View Source Item[int3] Access a specific location in the voxel. Declaration public T this[int3 index] { get; set; } Parameters Type Name Description Unity.Mathematics.int3 index A three-dimensional index. Property Value Type Description T Methods | Improve this Doc View Source Dispose() Properly dispose of the Array3D<T> . Declaration public void Dispose() | Improve this Doc View Source GetFromIndex(Int32) Get the three-dimensional index of a flat array index. Declaration public int3 GetFromIndex(int index) Parameters Type Name Description System.Int32 index A flat array index. Returns Type Description Unity.Mathematics.int3 A three-dimensional voxel index. | Improve this Doc View Source GetFromIndex(int3) Declaration public int GetFromIndex(int3 index) Parameters Type Name Description Unity.Mathematics.int3 index Returns Type Description System.Int32 Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.CircularBuffer-1.html": {
    "href": "api/GDX.Collections.Generic.CircularBuffer-1.html",
    "title": "CircularBuffer<T> | GDX",
    "keywords": "Struct CircularBuffer<T> A sized buffer which loops back over itself as elements are used. Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct CircularBuffer<T> Type Parameters Name Description T The type of System.Object s contained within. Constructors | Improve this Doc View Source CircularBuffer(Int32) Create a CircularBuffer<T> with a capacity . Declaration public CircularBuffer(int capacity) Parameters Type Name Description System.Int32 capacity The maximum number of items allowed in the CircularBuffer<T> | Improve this Doc View Source CircularBuffer(Int32, T[]) Create a CircularBuffer<T> with a capacity , filling with targetItems . Declaration public CircularBuffer(int capacity, T[] targetItems) Parameters Type Name Description System.Int32 capacity The maximum number of items allowed in the CircularBuffer<T> T[] targetItems An array of values to fill the CircularBuffer<T> with. Exceptions Type Condition System.ArgumentException Invalid number of entries provided to the CircularBuffer<T> constructor. System.ArgumentNullException No items were provided to the CircularBuffer<T> constructor. Fields | Improve this Doc View Source Array Internal array of backed data for the CircularBuffer<T> . Declaration public readonly T[] Array Field Value Type Description T[] | Improve this Doc View Source Capacity The cached array length for Array . Declaration public readonly int Capacity Field Value Type Description System.Int32 | Improve this Doc View Source Count The current size of occupied elements in the CircularBuffer<T> . Declaration public int Count Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source EndIndex The index of the last item in Array . Declaration public int EndIndex Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source StartIndex The index of the first item in Array . Declaration public int StartIndex Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32] Access item at pseudoIndex . Declaration public T this[int pseudoIndex] { get; set; } Parameters Type Name Description System.Int32 pseudoIndex Property Value Type Description T Exceptions Type Condition System.IndexOutOfRangeException Provided index is out of buffers range. Methods | Improve this Doc View Source Add(T) Add an item to the Array . Declaration public void Add(T item) Parameters Type Name Description T item The typed System.Object to add. | Improve this Doc View Source Clear() Clear all values of the Array . Declaration public void Clear() | Improve this Doc View Source GetBack() Get the last item in the Array . Declaration public T GetBack() Returns Type Description T The last typed object in Array . | Improve this Doc View Source GetFront() Get the first item in the Array . Declaration public T GetFront() Returns Type Description T The first typed object in Array . | Improve this Doc View Source IsEmpty() Does the Array have any items in it? Declaration public bool IsEmpty() Returns Type Description System.Boolean true/false | Improve this Doc View Source IsFull() Is the Array at capacity? Declaration public bool IsFull() Returns Type Description System.Boolean true/false | Improve this Doc View Source PopBack() Remove an item from the end of the Array . Declaration public void PopBack() | Improve this Doc View Source PopFront() Remove an item from the start of the Array . Declaration public void PopFront() | Improve this Doc View Source PushBack(T) Add an item to the end of the Array . Declaration public void PushBack(T targetItem) Parameters Type Name Description T targetItem The item to add to the end of Array . | Improve this Doc View Source PushFront(T) Add an item to the start of the Array . Declaration public void PushFront(T targetItem) Parameters Type Name Description T targetItem The item to add to the start of Array . | Improve this Doc View Source ToArray() Copy Array to an array of the same type. Declaration public T[] ToArray() Returns Type Description T[] A copied version of the Array as an array."
  },
  "api/GDX.Collections.Generic.CoalesceArray-1.html": {
    "href": "api/GDX.Collections.Generic.CoalesceArray-1.html",
    "title": "CoalesceArray<T> | GDX",
    "keywords": "Struct CoalesceArray<T> Multiple arrays acting as one uniform coalesced array. Namespace : GDX.Collections.Generic Syntax public struct CoalesceArray<T> Type Parameters Name Description T The type of data to be stored. Remarks Stores a maximum of 18,446,744,073,709,551,615 elements. Constructors | Improve this Doc View Source CoalesceArray(UInt64) Declaration public CoalesceArray(ulong length) Parameters Type Name Description System.UInt64 length Properties | Improve this Doc View Source Item[UInt64] Declaration public T this[ulong index] { get; set; } Parameters Type Name Description System.UInt64 index Property Value Type Description T | Improve this Doc View Source Length The number of elements the CoalesceArray<T> is capable of holding. Declaration public ulong Length { readonly get; } Property Value Type Description System.UInt64 Methods | Improve this Doc View Source GetBucket(Int32) Declaration public ref T[] GetBucket(int bucketIndex) Parameters Type Name Description System.Int32 bucketIndex Returns Type Description T[] | Improve this Doc View Source GetBucketCount() Declaration public int GetBucketCount() Returns Type Description System.Int32 | Improve this Doc View Source GetBucketLocation(UInt64) Declaration public (int bucketIndex, int bucketOffset) GetBucketLocation(ulong index) Parameters Type Name Description System.UInt64 index Returns Type Description System.ValueTuple < System.Int32 , System.Int32 > | Improve this Doc View Source Resize(UInt64) Declaration public bool Resize(ulong desiredLength) Parameters Type Name Description System.UInt64 desiredLength Returns Type Description System.Boolean"
  },
  "api/GDX.Collections.Generic.ConcurrentCircularBuffer-1.html": {
    "href": "api/GDX.Collections.Generic.ConcurrentCircularBuffer-1.html",
    "title": "ConcurrentCircularBuffer<T> | GDX",
    "keywords": "Struct ConcurrentCircularBuffer<T> A concurrent sized buffer which loops back over itself as elements are used. Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct ConcurrentCircularBuffer<T> Type Parameters Name Description T The type of System.Object s contained within. Constructors | Improve this Doc View Source ConcurrentCircularBuffer(Int32) Create a ConcurrentCircularBuffer<T> with a capacity . Declaration public ConcurrentCircularBuffer(int capacity) Parameters Type Name Description System.Int32 capacity The maximum number of items allowed in the ConcurrentCircularBuffer<T> | Improve this Doc View Source ConcurrentCircularBuffer(Int32, T[]) Create a ConcurrentCircularBuffer<T> with a capacity , filling with targetItems . Declaration public ConcurrentCircularBuffer(int capacity, T[] targetItems) Parameters Type Name Description System.Int32 capacity The maximum number of items allowed in the ConcurrentCircularBuffer<T> T[] targetItems An array of values to fill the ConcurrentCircularBuffer<T> with. Exceptions Type Condition System.ArgumentException Invalid number of entries provided to the ConcurrentCircularBuffer<T> constructor. System.ArgumentNullException No items were provided to the ConcurrentCircularBuffer<T> constructor. Fields | Improve this Doc View Source Array Internal array of backed data for the ConcurrentCircularBuffer<T> . Declaration public readonly T[] Array Field Value Type Description T[] | Improve this Doc View Source Capacity The cached array length for Array . Declaration public readonly int Capacity Field Value Type Description System.Int32 | Improve this Doc View Source Count The current size of occupied elements in the ConcurrentCircularBuffer<T> . Declaration public int Count Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source EndIndex The index of the last item in Array . Declaration public int EndIndex Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source StartIndex The index of the first item in Array . Declaration public int StartIndex Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32] Access item at pseudoIndex . Declaration public T this[int pseudoIndex] { get; set; } Parameters Type Name Description System.Int32 pseudoIndex Property Value Type Description T Exceptions Type Condition System.IndexOutOfRangeException Provided index is out of buffers range. Methods | Improve this Doc View Source Add(T) Add an item to the Array . Declaration public void Add(T item) Parameters Type Name Description T item The typed System.Object to add. | Improve this Doc View Source Clear() Clear all values of the Array . Declaration public void Clear() | Improve this Doc View Source GetBack() Get the last item in the Array . Declaration public T GetBack() Returns Type Description T The last typed object in Array . | Improve this Doc View Source GetFront() Get the first item in the Array . Declaration public T GetFront() Returns Type Description T The first typed object in Array . | Improve this Doc View Source IsEmpty() Does the Array have any items in it? Declaration public bool IsEmpty() Returns Type Description System.Boolean true/false | Improve this Doc View Source IsFull() Is the Array at capacity? Declaration public bool IsFull() Returns Type Description System.Boolean true/false | Improve this Doc View Source PopBack() Remove an item from the end of the Array . Declaration public void PopBack() | Improve this Doc View Source PopFront() Remove an item from the start of the Array . Declaration public void PopFront() | Improve this Doc View Source PushBack(T) Add an item to the end of the Array . Declaration public void PushBack(T targetItem) Parameters Type Name Description T targetItem The item to add to the end of Array . | Improve this Doc View Source PushFront(T) Add an item to the start of the Array . Declaration public void PushFront(T targetItem) Parameters Type Name Description T targetItem The item to add to the start of Array . | Improve this Doc View Source ToArray() Copy Array to an array of the same type. Declaration public T[] ToArray() Returns Type Description T[] A copied version of the Array as an array."
  },
  "api/GDX.Collections.Generic.DictionaryPrimes.html": {
    "href": "api/GDX.Collections.Generic.DictionaryPrimes.html",
    "title": "DictionaryPrimes | GDX",
    "keywords": "Class DictionaryPrimes A default selection of prime numbers used with different collections. Inheritance System.Object DictionaryPrimes Namespace : GDX.Collections.Generic Syntax public static class DictionaryPrimes Methods | Improve this Doc View Source GetNextSize(Int32) Returns size of hashtable to grow to. Declaration public static int GetNextSize(int oldSize) Parameters Type Name Description System.Int32 oldSize Returns Type Description System.Int32 | Improve this Doc View Source GetPrime(Int32) Get the nearest prime number greater then or equal to the provided minimum . Declaration public static int GetPrime(int minimum) Parameters Type Name Description System.Int32 minimum The lowest possible value. Returns Type Description System.Int32 A prime number. | Improve this Doc View Source GetPrimeAtIndex(Int32) Get the prime number in GDX.Collections.Generic.DictionaryPrimes.s_Primes at index. Declaration public static int GetPrimeAtIndex(int index) Parameters Type Name Description System.Int32 index The valid array index requested. Returns Type Description System.Int32 A prime number. Remarks No out of bounds detection. | Improve this Doc View Source GetPrimesLength() Get the number of prime numbers Declaration public static int GetPrimesLength() Returns Type Description System.Int32 | Improve this Doc View Source SetDefaultPrimes() Establish the default prime numbers in GDX.Collections.Generic.DictionaryPrimes.s_Primes . Declaration public static void SetDefaultPrimes() | Improve this Doc View Source SetPrimes(Int32[]) Set the GDX.Collections.Generic.DictionaryPrimes.s_Primes array with the provided primes . Declaration public static void SetPrimes(int[] primes) Parameters Type Name Description System.Int32 [] primes An array of prime numbers."
  },
  "api/GDX.Collections.Generic.html": {
    "href": "api/GDX.Collections.Generic.html",
    "title": "Namespace GDX.Collections.Generic | GDX",
    "keywords": "Namespace GDX.Collections.Generic Classes Array2DExtensions Array2D Based Extension Methods DictionaryPrimes A default selection of prime numbers used with different collections. IListExtensions System.Collections.Generic.IList<T> Based Extension Methods SerializableDictionary<TKey, TValue> A Unity serializable System.Collections.Generic.Dictionary<TKey, TValue> . SimpleListExtensions SimpleList<T> Based Extension Methods Structs Array2D<T> A 2-dimensional array backed by a flat array. Array3D<T> A three-dimensional array backed a flat array. CircularBuffer<T> A sized buffer which loops back over itself as elements are used. CoalesceArray<T> Multiple arrays acting as one uniform coalesced array. ConcurrentCircularBuffer<T> A concurrent sized buffer which loops back over itself as elements are used. IntKeyDictionary<TValue> An optimized System.Collections.Generic.Dictionary<TKey, TValue> -like data structure with a System.String key requirement. IntKeyEntry<T> NativeArray2D<T> A 2-dimension Unity.Collections.NativeArray<T> backed array. NativeArray3D<T> A three-dimensional Unity.Collections.NativeArray<T> backed array. NativeUniformArray3D<T> A three-dimensional Unity.Collections.NativeArray<T> backed array. SimpleList<T> An optimized System.Collections.Generic.List<T> -like data structure. StringKeyDictionary<TValue> An optimized System.Collections.Generic.Dictionary<TKey, TValue> -like data structure with a System.String key requirement. StringKeyEntry<T> UniformArray3D<T> A uniform three-dimensional array. Enums IteratorState State of Iterator"
  },
  "api/GDX.Collections.Generic.IListExtensions.html": {
    "href": "api/GDX.Collections.Generic.IListExtensions.html",
    "title": "IListExtensions | GDX",
    "keywords": "Class IListExtensions System.Collections.Generic.IList<T> Based Extension Methods Inheritance System.Object IListExtensions Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)2)] public static class IListExtensions Methods | Improve this Doc View Source AddUniqueItem<T>(IList<T>, T) Add an item to a System.Collections.Generic.IList<T> , but only if it is not already contained. Declaration public static bool AddUniqueItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to add too. T targetItem The target object to add. Returns Type Description System.Boolean true/false if this operation was able to add the item. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . | Improve this Doc View Source AddUniqueRange<T>(IList<T>, T[]) Add a range of items to a System.Collections.Generic.IList<T> , checking if each item is unique prior to adding. Declaration public static void AddUniqueRange<T>(this IList<T> targetList, T[] targetItems) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to add too. T[] targetItems The array of items to add. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . | Improve this Doc View Source ContainsItem<T>(IList<T>, T) Does targetList contain targetItem ? Declaration public static bool ContainsItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to look in. T targetItem The target object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source ContainsReference<T>(IList<T>, T) Does targetList contain targetItem ? Declaration public static bool ContainsReference<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The System.Collections.Generic.IList<T> to look in. T targetItem The target object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source RemoveFirstItem<T>(IList<T>, T) Removes the first targetItem from the provided targetList . Declaration public static bool RemoveFirstItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . T targetItem The target object to remove from the targetList . Returns Type Description System.Boolean true/false if the item was removed. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveItems<T>(IList<T>, T) Removes all targetItem from the provided targetList . Declaration public static bool RemoveItems<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . T targetItem The target object to remove from the targetList . Returns Type Description System.Boolean true/false if the item was removed. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 , uses object pointers. | Improve this Doc View Source RemoveItemSwap<T>(IList<T>, Int32) Replaces the object found at the provided index with the last object in targetList , then removes the last item from the targetList . Declaration public static void RemoveItemSwap<T>(this IList<T> targetList, int index) Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . System.Int32 index The index of the item to remove. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks This make sure that you are always removing from the end of a System.Collections.Generic.IList<T> . | Improve this Doc View Source RemoveLastItem<T>(IList<T>, T) Removes the last targetItem from the provided targetList . Declaration public static bool RemoveLastItem<T>(this IList<T> targetList, T targetItem) where T : class Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . T targetItem The target object to remove from the targetList . Returns Type Description System.Boolean true/false if the item was removed. Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source Shuffle<T>(IList<T>) Shuffle the items in the targetList . Declaration public static void Shuffle<T>(this IList<T> targetList) Parameters Type Name Description System.Collections.Generic.IList <T> targetList The target System.Collections.Generic.IList<T> . Type Parameters Name Description T The type of the System.Collections.Generic.IList<T> ."
  },
  "api/GDX.Collections.Generic.IntKeyDictionary-1.html": {
    "href": "api/GDX.Collections.Generic.IntKeyDictionary-1.html",
    "title": "IntKeyDictionary<TValue> | GDX",
    "keywords": "Struct IntKeyDictionary<TValue> An optimized System.Collections.Generic.Dictionary<TKey, TValue> -like data structure with a System.String key requirement. Namespace : GDX.Collections.Generic Syntax [Serializable] public struct IntKeyDictionary<TValue> Type Parameters Name Description TValue Constructors | Improve this Doc View Source IntKeyDictionary(Int32) Initializes the dictionary with at least minCapacity capacity. Declaration public IntKeyDictionary(int minCapacity) Parameters Type Name Description System.Int32 minCapacity The minimal initial capacity to reserve. Fields | Improve this Doc View Source Buckets Declaration public int[] Buckets Field Value Type Description System.Int32 [] | Improve this Doc View Source Count Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source Entries Declaration public IntKeyEntry<TValue>[] Entries Field Value Type Description IntKeyEntry <TValue>[] | Improve this Doc View Source FreeListHead Declaration public int FreeListHead Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[Int32] Directly access a value by key. Declaration public TValue this[int key] { get; set; } Parameters Type Name Description System.Int32 key The target key to look for a value identified by. Property Value Type Description TValue Exceptions Type Condition System.ArgumentNullException Thrown when a null key is provided to lookup. System.Collections.Generic.KeyNotFoundException Thrown when the key is not found in the StringKeyDictionary<TValue> . Methods | Improve this Doc View Source AddSafe(Int32, TValue) Adds the key value pair to the dictionary, checking for duplicate entries and expanding if necessary. Declaration public bool AddSafe(int key, TValue value) Parameters Type Name Description System.Int32 key The key to add. TValue value The value to add. Returns Type Description System.Boolean True if the entry was successfully created. | Improve this Doc View Source AddUnchecked(Int32, TValue) Adds the key value pair to the dictionary, without checking for available capacity or duplicate entries. Declaration public void AddUnchecked(int key, TValue value) Parameters Type Name Description System.Int32 key The key to add. TValue value The value to add. | Improve this Doc View Source AddWithExpandCheck(Int32, TValue) Adds the key value pair to the dictionary, expanding if necessary but not checking for duplicate entries. Declaration public void AddWithExpandCheck(int key, TValue value) Parameters Type Name Description System.Int32 key The key to add. TValue value The value to add. | Improve this Doc View Source AddWithUniqueCheck(Int32, TValue) Adds the key value pair to the dictionary, checking for duplicates but not expanding if necessary. Declaration public bool AddWithUniqueCheck(int key, TValue value) Parameters Type Name Description System.Int32 key The key to add. TValue value The value to add. Returns Type Description System.Boolean True if the entry was successfully created. | Improve this Doc View Source Clear() Clears the dictionary. Declaration public void Clear() | Improve this Doc View Source ContainsKey(Int32) Checks if the dictionary contains the given key. Declaration public bool ContainsKey(int key) Parameters Type Name Description System.Int32 key The key to check for. Returns Type Description System.Boolean True if the dictionary contains the key. | Improve this Doc View Source ExpandWhenFull() Resizes the dictionary with the assumption that it is full. Do not use otherwise. Declaration public void ExpandWhenFull() | Improve this Doc View Source IndexOf(Int32) Finds the index of the entry corresponding to a key. Declaration public int IndexOf(int key) Parameters Type Name Description System.Int32 key The key to find the index of. Returns Type Description System.Int32 The index of the entry, or -1 if the entry does not exist. | Improve this Doc View Source MoveNext(ref Int32) Iterates the dictionary. Declaration public bool MoveNext(ref int iteratedIndexCount) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. Returns Type Description System.Boolean Whether or not the iterator found an entry Remarks If you use iteratedIndexCount during iteration, you need to decrement it by 1 to properly access the current iterations index. If you suspect the dictionary might be modified while iterating, this will not catch the error. You must use the other overload instead. | Improve this Doc View Source MoveNext(ref Int32, out IntKeyEntry<TValue>) Iterates the dictionary. NOTE: if you suspect the dictionary might be modified while iterating, this will not catch the error -- use the other overload instead. Declaration public bool MoveNext(ref int iteratedIndexCount, out IntKeyEntry<TValue> entry) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. IntKeyEntry <TValue> entry The entry returned by the iterator Returns Type Description System.Boolean Whether or not the iterator found an entry | Improve this Doc View Source MoveNext(ref Int32, Int32, in Int32, out IntKeyEntry<TValue>) Iterates the dictionary. Declaration public IteratorState MoveNext(ref int iteratedIndexCount, int iteratorVersion, in int dictionaryVersion, out IntKeyEntry<TValue> entry) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. System.Int32 iteratorVersion The version when iteration started. System.Int32 dictionaryVersion The current version of the dictionary - update this on add, remove, or clear operations. IntKeyEntry <TValue> entry The entry returned by the iterator Returns Type Description IteratorState Whether the iterator found an entry, finished iteration, or could not continue due to an invalid version. | Improve this Doc View Source Reserve(Int32) Expands the dictionary if it does not have enough empty space for capacityToReserve . Declaration public void Reserve(int capacityToReserve) Parameters Type Name Description System.Int32 capacityToReserve | Improve this Doc View Source TryGetValue(Int32, out TValue) Attempts to get the value for the given key; returns true if key was found, false otherwise. Declaration public bool TryGetValue(int key, out TValue value) Parameters Type Name Description System.Int32 key The key to retrieve. TValue value The value of the entry found. Returns Type Description System.Boolean True if the entry was found; false otherwise. | Improve this Doc View Source TryModifyValue(Int32, TValue) Replaces the value of the entry if the entry exists. Declaration public bool TryModifyValue(int key, TValue value) Parameters Type Name Description System.Int32 key The key of the entry to modify. TValue value The new value of the entry. Returns Type Description System.Boolean True if the entry was found. | Improve this Doc View Source TryRemove(Int32) Removes the entry if it exists. Declaration public bool TryRemove(int key) Parameters Type Name Description System.Int32 key The key to remove. Returns Type Description System.Boolean True if the entry was found. | Improve this Doc View Source TryRemoveNoValueClear(Int32) Removes the entry if it exists, but does not remove the value of the key value pair. Declaration public bool TryRemoveNoValueClear(int key) Parameters Type Name Description System.Int32 key The key to remove. Returns Type Description System.Boolean True if the entry was found."
  },
  "api/GDX.Collections.Generic.IntKeyEntry-1.html": {
    "href": "api/GDX.Collections.Generic.IntKeyEntry-1.html",
    "title": "IntKeyEntry<T> | GDX",
    "keywords": "Struct IntKeyEntry<T> Namespace : GDX.Collections.Generic Syntax [Serializable] public struct IntKeyEntry<T> Type Parameters Name Description T Fields | Improve this Doc View Source Key Declaration public int Key Field Value Type Description System.Int32 | Improve this Doc View Source Next Declaration public int Next Field Value Type Description System.Int32 | Improve this Doc View Source Value Declaration public T Value Field Value Type Description T"
  },
  "api/GDX.Collections.Generic.IteratorState.html": {
    "href": "api/GDX.Collections.Generic.IteratorState.html",
    "title": "IteratorState | GDX",
    "keywords": "Enum IteratorState State of Iterator Namespace : GDX.Collections.Generic Syntax public enum IteratorState : byte Fields Name Description Finished Unable to iterate any further. FoundEntry Found an entry meeting criteria. InvalidVersion The data being iterated over has changed. Extension Methods EnumExtensions.HasFlags<IteratorState>(IteratorState)"
  },
  "api/GDX.Collections.Generic.NativeArray2D-1.html": {
    "href": "api/GDX.Collections.Generic.NativeArray2D-1.html",
    "title": "NativeArray2D<T> | GDX",
    "keywords": "Struct NativeArray2D<T> A 2-dimension Unity.Collections.NativeArray<T> backed array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct NativeArray2D<T> : IDisposable where T : struct Type Parameters Name Description T Type of objects. Remarks Use X (horizontal) and Y (vertical) arrangement. Constructors | Improve this Doc View Source NativeArray2D(Int32, Int32, Allocator, NativeArrayOptions) Create a NativeArray2D<T> . Declaration public NativeArray2D(int rowCount, int columnCount, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 rowCount The number of rows (X). System.Int32 columnCount The number of columns (Y). Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Fields | Improve this Doc View Source Array The backing Unity.Collections.NativeArray<T> . Declaration public NativeArray<T> Array Field Value Type Description Unity.Collections.NativeArray <T> | Improve this Doc View Source ColumnCount The length of each pseudo-array in the dataset. Declaration public int ColumnCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source RowCount The number of pseudo-arrays created to support the dimensionality. Declaration public int RowCount Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Properties | Improve this Doc View Source Item[Int32, Int32] Get a typed object at a specific 2-dimensional index in Array . Declaration public T this[int x, int y] { get; set; } Parameters Type Name Description System.Int32 x The row/line number (vertical axis). System.Int32 y The column number (horizontal axis). Property Value Type Description T Methods | Improve this Doc View Source AddColumns(Int32, Allocator, NativeArrayOptions) Add additional columns to the dataset. Declaration public void AddColumns(int numberOfNewColumns, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 numberOfNewColumns The number of columns add. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? | Improve this Doc View Source AddRows(Int32, Allocator, NativeArrayOptions) Add additional rows to the dataset. Declaration public void AddRows(int numberOfNewRows, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 numberOfNewRows The number of rows/arrays to add. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? | Improve this Doc View Source Dispose() Properly dispose of Array . Declaration public void Dispose() | Improve this Doc View Source ReverseColumns() Reverse the order of the columns in the backing Array . Declaration public void ReverseColumns() | Improve this Doc View Source ReverseRows() Reverse the order of the rows in the backing Array . Declaration public void ReverseRows() | Improve this Doc View Source ToMultiDimensionalArray() Creates a copy of the internal array as a traditional multi-dimensional array. Declaration public T[, ] ToMultiDimensionalArray() Returns Type Description T[,] A new copy of the backing Array in multi-dimensional form. Remarks Useful for scenarios where fills need to be done with [,] structured multi-dimensional arrays. Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.NativeArray3D-1.html": {
    "href": "api/GDX.Collections.Generic.NativeArray3D-1.html",
    "title": "NativeArray3D<T> | GDX",
    "keywords": "Struct NativeArray3D<T> A three-dimensional Unity.Collections.NativeArray<T> backed array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct NativeArray3D<T> : IDisposable where T : struct Type Parameters Name Description T Type of objects. Constructors | Improve this Doc View Source NativeArray3D(Int32, Int32, Int32, Allocator, NativeArrayOptions) Create a NativeArray3D<T> with a uniform dimensional length. Declaration public NativeArray3D(int width, int height, int depth, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 width X-axis length. System.Int32 height Y-axis length. System.Int32 depth Z-axis length. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Fields | Improve this Doc View Source Array The backing Unity.Collections.NativeArray<T> . Declaration public NativeArray<T> Array Field Value Type Description Unity.Collections.NativeArray <T> | Improve this Doc View Source Depth The stride of the z-axis segment in Array . Declaration public readonly int Depth Field Value Type Description System.Int32 | Improve this Doc View Source DepthLength The total length of a single Depth . Declaration public readonly int DepthLength Field Value Type Description System.Int32 | Improve this Doc View Source Height The stride of the y-axis segment in Array . Declaration public readonly int Height Field Value Type Description System.Int32 | Improve this Doc View Source Length The length of Array . Declaration public readonly int Length Field Value Type Description System.Int32 | Improve this Doc View Source Width The stride of the x-axis segment in Array . Declaration public readonly int Width Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[Int32, Int32, Int32] Access a specific location in the voxel. Declaration public T this[int x, int y, int z] { get; set; } Parameters Type Name Description System.Int32 x X location index. System.Int32 y Y location index. System.Int32 z Z location index. Property Value Type Description T | Improve this Doc View Source Item[int3] Access a specific location in the voxel. Declaration public T this[int3 index] { get; set; } Parameters Type Name Description Unity.Mathematics.int3 index A three-dimensional index. Property Value Type Description T Methods | Improve this Doc View Source Dispose() Properly dispose of the NativeUniformArray3D<T> . Declaration public void Dispose() | Improve this Doc View Source GetFromIndex(Int32) Get the three-dimensional index of a flat array index. Declaration public int3 GetFromIndex(int index) Parameters Type Name Description System.Int32 index A flat array index. Returns Type Description Unity.Mathematics.int3 A three-dimensional voxel index. | Improve this Doc View Source GetFromIndex(int3) Declaration public int GetFromIndex(int3 index) Parameters Type Name Description Unity.Mathematics.int3 index Returns Type Description System.Int32 Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.NativeUniformArray3D-1.html": {
    "href": "api/GDX.Collections.Generic.NativeUniformArray3D-1.html",
    "title": "NativeUniformArray3D<T> | GDX",
    "keywords": "Struct NativeUniformArray3D<T> A three-dimensional Unity.Collections.NativeArray<T> backed array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct NativeUniformArray3D<T> : IDisposable where T : struct Type Parameters Name Description T Type of objects. Constructors | Improve this Doc View Source NativeUniformArray3D(Int32, Allocator, NativeArrayOptions) Create a NativeUniformArray3D<T> with a uniform dimensional length. Declaration public NativeUniformArray3D(int stride, Allocator allocator, NativeArrayOptions nativeArrayOptions) Parameters Type Name Description System.Int32 stride X length, Y length and Z length will all be set to this value. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArrayOptions nativeArrayOptions Should the memory be cleared on allocation? Fields | Improve this Doc View Source Array The backing Unity.Collections.NativeArray<T> . Declaration public NativeArray<T> Array Field Value Type Description Unity.Collections.NativeArray <T> | Improve this Doc View Source Length The length of Array . Declaration public readonly int Length Field Value Type Description System.Int32 | Improve this Doc View Source Stride The stride of each dimensional segment in Array . Declaration public readonly int Stride Field Value Type Description System.Int32 | Improve this Doc View Source StrideSquared Stores a cached copy of the stride squared. Declaration public readonly int StrideSquared Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[Int32, Int32, Int32] Access a specific location in the voxel. Declaration public T this[int x, int y, int z] { get; set; } Parameters Type Name Description System.Int32 x X location index. System.Int32 y Y location index. System.Int32 z Z location index. Property Value Type Description T | Improve this Doc View Source Item[int3] Access a specific location in the voxel. Declaration public T this[int3 index] { get; set; } Parameters Type Name Description Unity.Mathematics.int3 index A 3-Dimensional index. Property Value Type Description T Methods | Improve this Doc View Source Dispose() Properly dispose of the NativeUniformArray3D<T> . Declaration public void Dispose() | Improve this Doc View Source GetFromIndex(Int32) Get the three-dimensional index of a flat array index. Declaration public int3 GetFromIndex(int index) Parameters Type Name Description System.Int32 index A flat array index. Returns Type Description Unity.Mathematics.int3 A three-dimensional voxel index. Implements System.IDisposable"
  },
  "api/GDX.Collections.Generic.SerializableDictionary-2.html": {
    "href": "api/GDX.Collections.Generic.SerializableDictionary-2.html",
    "title": "SerializableDictionary<TKey, TValue> | GDX",
    "keywords": "Class SerializableDictionary<TKey, TValue> A Unity serializable System.Collections.Generic.Dictionary<TKey, TValue> . Inheritance System.Object System.Collections.Generic.Dictionary <TKey, TValue> SerializableDictionary<TKey, TValue> Implements System.Collections.Generic.IDictionary <TKey, TValue> System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.Generic.IReadOnlyDictionary <TKey, TValue> System.Collections.Generic.IReadOnlyCollection < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable UnityEngine.ISerializationCallbackReceiver Namespace : GDX.Collections.Generic Syntax [Serializable] [VisualScriptingCompatible((short)1)] public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey The dictionary's key System.Type . TValue The dictionary's value System.Type . Remarks This will NOT work with System.Object based objects, use UnityEngine.Object if you must. While .NET has solutions for creating custom serialization paths, Unity uses its own system to serialize data into YAML structures. This also assumes that the types provided can be serialized by Unity. The process of serializing and deserializing this dictionary should not be considered performant. The property drawer will not show structs, it will be blank. It does work however if done through code. Constructors | Improve this Doc View Source SerializableDictionary() Type constructor. Declaration public SerializableDictionary() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source GetSerializedDataLength() Get the length of the serialized data arrays. Declaration public int GetSerializedDataLength() Returns Type Description System.Int32 An integer value representing the count. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsSerializableType(Type) Is the type capable of being serialized by the SerializableDictionary<TKey, TValue> , utilizing Unity's own serialization system? Declaration public static bool IsSerializableType(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean true/false if the type is valid. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source LoadSerializedData(Boolean) Load the data into the System.Collections.Generic.Dictionary<TKey, TValue> cached in the serialized data. Declaration public void LoadSerializedData(bool clearAfterLoad = true) Parameters Type Name Description System.Boolean clearAfterLoad Should the serialized data be cleared after loading? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnAfterDeserialize() Rehydrate the serialized data arrays back into a cohesive System.Collections.Generic.Dictionary<TKey, TValue> . Declaration public void OnAfterDeserialize() Remarks Invoked by Unity, calls LoadSerializedData(Boolean) . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnBeforeSerialize() Build out serialized data arrays and associative data, used to rehydrate during deserialization. Declaration public void OnBeforeSerialize() Remarks Invoked by Unity, calls SaveSerializedData() . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OverwriteSerializedData(TKey[], TValue[]) Overwrite data in the serialized arrays with the provided data. Declaration public void OverwriteSerializedData(TKey[] keyArray, TValue[] valueArray) Parameters Type Name Description TKey[] keyArray An array of keys. TValue[] valueArray An array of values. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source SaveSerializedData() Fill serializable arrays from dictionary data. Declaration public void SaveSerializedData() Remarks We will always create the arrays so the property drawers function nicely. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GDX.Collections.Generic.SimpleList-1.html": {
    "href": "api/GDX.Collections.Generic.SimpleList-1.html",
    "title": "SimpleList<T> | GDX",
    "keywords": "Struct SimpleList<T> An optimized System.Collections.Generic.List<T> -like data structure. Namespace : GDX.Collections.Generic Syntax [VisualScriptingCompatible((short)1)] public struct SimpleList<T> Type Parameters Name Description T The type of the System.Object s contained within. Constructors | Improve this Doc View Source SimpleList(T[]) Create a SimpleList<T> providing an existing arrayToUse . Declaration public SimpleList(T[] arrayToUse) Parameters Type Name Description T[] arrayToUse An existing array to use in the SimpleList<T> . | Improve this Doc View Source SimpleList(T[], Int32) Create a SimpleList<T> providing an existing arrayToUse and setting the Count . Declaration public SimpleList(T[] arrayToUse, int count) Parameters Type Name Description T[] arrayToUse An existing array to use in the SimpleList<T> . System.Int32 count An existing element count. | Improve this Doc View Source SimpleList(Int32) Create a SimpleList<T> with an initial capacity . Declaration public SimpleList(int capacity) Parameters Type Name Description System.Int32 capacity An initial sizing for the Array . Fields | Improve this Doc View Source Array Internal array of backed data for the SimpleList<T> . Declaration public T[] Array Field Value Type Description T[] | Improve this Doc View Source Count The current number of occupied elements in the CircularBuffer<T> . Declaration public int Count Field Value Type Description System.Int32 Remarks CAUTION! Changing this will alter the understanding of the data. Methods | Improve this Doc View Source AddExpandClearBoth(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Clears old and new arrays on resize. Declaration public void AddExpandClearBoth(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddExpandClearNew(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Clears unused indices of the new array on resize. Declaration public void AddExpandClearNew(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddExpandClearOld(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Clears the old array on resize after copying its contents. Declaration public void AddExpandClearOld(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddExpandNoClear(T, ArrayPool<T>) Add an item to the SimpleList<T> , checking if Array needs to be resized. Declaration public void AddExpandNoClear(T item, ArrayPool<T> pool) Parameters Type Name Description T item A typed System.Object to add. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source AddUnchecked(T) Add an item to the SimpleList<T> without checking the Array size. Declaration public void AddUnchecked(T item) Parameters Type Name Description T item A typed System.Object to add. | Improve this Doc View Source AddWithExpandCheck(T) Add an item to the SimpleList<T> , checking if Array needs to be resized. Declaration public void AddWithExpandCheck(T item) Parameters Type Name Description T item A typed System.Object to add. | Improve this Doc View Source AddWithExpandCheck(T, Int32) Add an item to the SimpleList<T> , checking if Array needs to be resized. Declaration public void AddWithExpandCheck(T item, int howMuchToExpand) Parameters Type Name Description T item A typed System.Object to add. System.Int32 howMuchToExpand How much to expand the array by. | Improve this Doc View Source Clear() Clear out the Array in SimpleList<T> and sets the Count to 0. Declaration public void Clear() | Improve this Doc View Source Compact() Shrink/compact the backing Array so there is no unused space. Declaration public void Compact() | Improve this Doc View Source InsertExpandClearBoth(Int32, T, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Clears old and new arrays on resize. Declaration public void InsertExpandClearBoth(int index, T item, ArrayPool<T> pool) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertExpandClearNew(Int32, T, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Clears unused indices of the new array on resize. Declaration public void InsertExpandClearNew(int index, T item, ArrayPool<T> pool) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertExpandClearOld(Int32, T, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Clears the old array on resize after copying its contents. Declaration public void InsertExpandClearOld(int index, T item, ArrayPool<T> pool) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertExpandNoClear(Int32, T, ArrayPool<T>) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void InsertExpandNoClear(int index, T item, ArrayPool<T> pool) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source InsertUnchecked(Int32, T) Insert an item into the SimpleList<T> without checking the Array size. Declaration public void InsertUnchecked(int index, T item) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. | Improve this Doc View Source InsertWithExpandCheck(Int32, T) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void InsertWithExpandCheck(int index, T item) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. | Improve this Doc View Source InsertWithExpandCheck(Int32, T, Int32) Insert an item into the SimpleList<T> , checking if Array needs to be resized. Declaration public void InsertWithExpandCheck(int index, T item, int howMuchToExpand) Parameters Type Name Description System.Int32 index The index in Array to add the item at. T item A typed System.Object to insert. System.Int32 howMuchToExpand The number of elements to add at the end of the array when expanding. | Improve this Doc View Source RemoveAt(Int32) Remove an item from the SimpleList<T> at a specific index . Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The target index. | Improve this Doc View Source RemoveAtSwapBack(Int32) Remove an item from the SimpleList<T> at a specific index , swapping it with the item from the highest used index. Declaration public void RemoveAtSwapBack(int index) Parameters Type Name Description System.Int32 index The target index. | Improve this Doc View Source RemoveFromBack() Remove the last element in the SimpleList<T> . Declaration public void RemoveFromBack() | Improve this Doc View Source Reserve(Int32) Resizes the Array , ensuring there are the provided number of empty spots in it. Declaration public void Reserve(int numberToReserve) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. | Improve this Doc View Source ReserveClearBoth(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Clears old and new arrays on resize. Declaration public void ReserveClearBoth(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source ReserveClearNew(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Clears unused indices of the new array on resize. Declaration public void ReserveClearNew(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source ReserveClearOld(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Clears the old array on resize after copying its contents. Declaration public void ReserveClearOld(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source ReserveNoClear(Int32, ArrayPool<T>) Resizes the Array , ensuring there are the provided number of empty spots in it. Declaration public void ReserveNoClear(int numberToReserve, ArrayPool<T> pool) Parameters Type Name Description System.Int32 numberToReserve Number of desired empty spots. ArrayPool <T> pool Pool to allocate the array from if resizing. | Improve this Doc View Source Reverse() Reverse the order of Array . Declaration public void Reverse()"
  },
  "api/GDX.Collections.Generic.SimpleListExtensions.html": {
    "href": "api/GDX.Collections.Generic.SimpleListExtensions.html",
    "title": "SimpleListExtensions | GDX",
    "keywords": "Class SimpleListExtensions SimpleList<T> Based Extension Methods Inheritance System.Object SimpleListExtensions Namespace : GDX.Collections.Generic Syntax public static class SimpleListExtensions Remarks Methods found in this extensions class are less performant then the included methods in SimpleList<T> . They are seperated out to clearly delineate this performance regression. Methods | Improve this Doc View Source AddUncheckedUniqueItem<T>(ref SimpleList<T>, T) Add an item to the SimpleList<T> without checking the internal size, making sure that the item is not already contained in the SimpleList<T> . Declaration public static bool AddUncheckedUniqueItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetItem The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the item successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddUncheckedUniqueReference<T>(ref SimpleList<T>, T) Add an object reference to the SimpleList<T> without checking the internal size, making sure that the reference is not already contained in the SimpleList<T> . Does not prevent addition of different objects for which Equals returns true. Declaration public static bool AddUncheckedUniqueReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetReference The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the reference successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddWithExpandCheckUniqueItem<T>(ref SimpleList<T>, T) Add an item to the SimpleList<T> with checking the internal size (expanding as necessary), making sure that the item is not already contained in the SimpleList<T> . Declaration public static bool AddWithExpandCheckUniqueItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetItem The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the item successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddWithExpandCheckUniqueReference<T>(ref SimpleList<T>, T) Add an object reference to the SimpleList<T> with checking the internal size (expanding as necessary), making sure that the reference is not already contained in the SimpleList<T> . Does not prevent addition of different objects for which Equals returns true. Declaration public static bool AddWithExpandCheckUniqueReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetReference The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the reference successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source AddWithExpandCheckUniqueValue<T>(ref SimpleList<T>, T) Add an item to the SimpleList<T> with checking the internal size (expanding as necessary), making sure that the item is not already contained in the SimpleList<T> . Declaration public static bool AddWithExpandCheckUniqueValue<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> to add to. T targetItem The target class object to add. Returns Type Description System.Boolean true/false if the operation was able to add the item successfully. Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source Contains<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool Contains<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . | Improve this Doc View Source ContainsItem<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool ContainsItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source ContainsReference<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool ContainsReference<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . Remarks Ignores equality check and end up comparing object pointers. | Improve this Doc View Source ContainsValue<T>(ref SimpleList<T>, T) Does targetSimpleList contain targetItem ? Declaration public static bool ContainsValue<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The target class object to look for. Returns Type Description System.Boolean true/false Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source FirstIndexOf<T>(ref SimpleList<T>, T) Find the first index of targetItem in targetSimpleList . Declaration public static int FirstIndexOf<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetSimpleList backing array, or -1 if not found. Type Parameters Name Description T The type of the array. Remarks This will work for System.String comparisons. | Improve this Doc View Source FirstIndexOfItem<T>(ref SimpleList<T>, T) Find the first index of targetItem in targetSimpleList . Declaration public static int FirstIndexOfItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetSimpleList backing array, or -1 if not found. Type Parameters Name Description T The type of the array. Remarks Ignores equality check and end up comparing object pointers. Do NOT use this for System.String types. | Improve this Doc View Source FirstIndexOfValue<T>(ref SimpleList<T>, T) Find the first index of targetValue in targetSimpleList . Declaration public static int FirstIndexOfValue<T>(this ref SimpleList<T> targetSimpleList, T targetValue) where T : struct Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetValue The value to be found. Returns Type Description System.Int32 The index of targetValue in targetSimpleList backing array, or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source LastIndexOf<T>(ref SimpleList<T>, T) Find the last index of targetItem in targetSimpleList . Declaration public static int LastIndexOf<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : IEquatable<T> Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetSimpleList backing array, or -1 if not found. Type Parameters Name Description T The type of the array. Remarks This will work for System.String comparisons. | Improve this Doc View Source LastIndexOfItem<T>(ref SimpleList<T>, T) Find the last index of targetItem in targetSimpleList . Declaration public static int LastIndexOfItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetItem The object to be found. Returns Type Description System.Int32 The index of targetItem in targetSimpleList backing array, or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source LastIndexOfValue<T>(ref SimpleList<T>, T) Find the last index of targetValue in targetSimpleList . Declaration public static int LastIndexOfValue<T>(this ref SimpleList<T> targetSimpleList, T targetValue) where T : struct Parameters Type Name Description SimpleList <T> targetSimpleList The SimpleList<T> to look in. T targetValue The value to be found. Returns Type Description System.Int32 The index of targetValue in targetSimpleList backing array, or -1 if not found. Type Parameters Name Description T The type of the array. | Improve this Doc View Source RemoveFirstItem<T>(ref SimpleList<T>, T) Removes the first targetItem from the provided targetSimpleList . Declaration public static bool RemoveFirstItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetItem The target object to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an item was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveFirstReference<T>(ref SimpleList<T>, T) Removes the first targetReference from the provided targetSimpleList . Only removes direct object references, i.e. equivalent strings at different memory addresses would not be removed. Declaration public static bool RemoveFirstReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetReference The target object to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an object reference was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveItems<T>(ref SimpleList<T>, T) Removes all targetItem from the provided targetSimpleList . Declaration public static bool RemoveItems<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetItem The item to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if items were removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveLastItem<T>(ref SimpleList<T>, T) Removes the last targetItem from the provided targetSimpleList . Declaration public static bool RemoveLastItem<T>(this ref SimpleList<T> targetSimpleList, T targetItem) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetItem The target object to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an item was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveLastReference<T>(ref SimpleList<T>, T) Removes the last reference to targetReference from the provided targetSimpleList . Only removes direct object references, i.e. equivalent strings at different memory addresses would not be removed. Declaration public static bool RemoveLastReference<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetReference The target object reference to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if an object reference was removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 . | Improve this Doc View Source RemoveReferences<T>(ref SimpleList<T>, T) Removes all instances of references to targetReference from the provided targetSimpleList . Only removes direct object references, i.e. equivalent strings at different memory addresses would not be removed. Declaration public static bool RemoveReferences<T>(this ref SimpleList<T> targetSimpleList, T targetReference) where T : class Parameters Type Name Description SimpleList <T> targetSimpleList The target SimpleList<T> . T targetReference The object reference to remove from the targetSimpleList . Returns Type Description System.Boolean true/false if any references were removed. Type Parameters Name Description T The type of the SimpleList<T> . Remarks Avoids using System.Collections.Generic.EqualityComparer`1 ."
  },
  "api/GDX.Collections.Generic.StringKeyDictionary-1.html": {
    "href": "api/GDX.Collections.Generic.StringKeyDictionary-1.html",
    "title": "StringKeyDictionary<TValue> | GDX",
    "keywords": "Struct StringKeyDictionary<TValue> An optimized System.Collections.Generic.Dictionary<TKey, TValue> -like data structure with a System.String key requirement. Namespace : GDX.Collections.Generic Syntax [Serializable] public struct StringKeyDictionary<TValue> Type Parameters Name Description TValue Constructors | Improve this Doc View Source StringKeyDictionary(Int32) Initializes the dictionary with at least minCapacity capacity. Declaration public StringKeyDictionary(int minCapacity) Parameters Type Name Description System.Int32 minCapacity The minimal initial capacity to reserve. Fields | Improve this Doc View Source Buckets Declaration public int[] Buckets Field Value Type Description System.Int32 [] | Improve this Doc View Source Count Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source Entries Declaration public StringKeyEntry<TValue>[] Entries Field Value Type Description StringKeyEntry <TValue>[] | Improve this Doc View Source FreeListHead Declaration public int FreeListHead Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[String] Directly access a value by key. Declaration public TValue this[string key] { get; set; } Parameters Type Name Description System.String key The target key to look for a value identified by. Property Value Type Description TValue Exceptions Type Condition System.ArgumentNullException Thrown when a null key is provided to lookup. System.Collections.Generic.KeyNotFoundException Thrown when the key is not found in the StringKeyDictionary<TValue> . Methods | Improve this Doc View Source AddSafe(String, TValue) Adds the key value pair to the dictionary, checking for duplicate entries and expanding if necessary. Declaration public bool AddSafe(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. Returns Type Description System.Boolean True if the entry was successfully created. | Improve this Doc View Source AddUnchecked(String, TValue) Adds the key value pair to the dictionary, without checking for available capacity or duplicate entries. Declaration public void AddUnchecked(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. | Improve this Doc View Source AddWithExpandCheck(String, TValue) Adds the key value pair to the dictionary, expanding if necessary but not checking for duplicate entries. Declaration public void AddWithExpandCheck(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. | Improve this Doc View Source AddWithUniqueCheck(String, TValue) Adds the key value pair to the dictionary, checking for duplicates but not expanding if necessary. Declaration public bool AddWithUniqueCheck(string key, TValue value) Parameters Type Name Description System.String key The key to add. TValue value The value to add. Returns Type Description System.Boolean True if the entry was successfully created. | Improve this Doc View Source Clear() Clears the dictionary. Declaration public void Clear() | Improve this Doc View Source ContainsKey(String) Checks if the dictionary contains the given key. Declaration public bool ContainsKey(string key) Parameters Type Name Description System.String key The key to check for. Returns Type Description System.Boolean True if the dictionary contains the key. | Improve this Doc View Source ExpandWhenFull() Resizes the dictionary with the assumption that it is full. Do not use otherwise. Declaration public void ExpandWhenFull() | Improve this Doc View Source IndexOf(String) Finds the index of the entry corresponding to a key. Declaration public int IndexOf(string key) Parameters Type Name Description System.String key The key to find the index of. Returns Type Description System.Int32 The index of the entry, or -1 if the entry does not exist. | Improve this Doc View Source MoveNext(ref Int32) Iterates the dictionary. NOTE: if you suspect the dictionary might be modified while iterating, this will not catch the error -- use the other overload instead. Declaration public bool MoveNext(ref int iteratedIndexCount) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. Returns Type Description System.Boolean Whether or not the iterator found an entry | Improve this Doc View Source MoveNext(ref Int32, out StringKeyEntry<TValue>) Iterates the dictionary. NOTE: if you suspect the dictionary might be modified while iterating, this will not catch the error -- use the other overload instead. Declaration public bool MoveNext(ref int iteratedIndexCount, out StringKeyEntry<TValue> entry) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. StringKeyEntry <TValue> entry The entry returned by the iterator Returns Type Description System.Boolean Whether or not the iterator found an entry | Improve this Doc View Source MoveNext(ref Int32, Int32, in Int32, out StringKeyEntry<TValue>) Iterates the dictionary. Declaration public IteratorState MoveNext(ref int iteratedIndexCount, int iteratorVersion, in int dictionaryVersion, out StringKeyEntry<TValue> entry) Parameters Type Name Description System.Int32 iteratedIndexCount The number of indices iterated so far - pass in 0 at the start of iteration. System.Int32 iteratorVersion The version when iteration started. System.Int32 dictionaryVersion The current version of the dictionary - update this on add, remove, or clear operations. StringKeyEntry <TValue> entry The entry returned by the iterator Returns Type Description IteratorState Whether the iterator found an entry, finished iteration, or could not continue due to an invalid version. | Improve this Doc View Source Reserve(Int32) Expands the dictionary if it does not have enough empty space for capacityToReserve . Declaration public void Reserve(int capacityToReserve) Parameters Type Name Description System.Int32 capacityToReserve | Improve this Doc View Source TryGetValue(String, out TValue) Attempts to get the value for the given key; returns true if key was found, false otherwise. Declaration public bool TryGetValue(string key, out TValue value) Parameters Type Name Description System.String key The key to retrieve. TValue value The value of the entry found. Returns Type Description System.Boolean True if the entry was found; false otherwise. | Improve this Doc View Source TryModifyValue(String, TValue) Replaces the value of the entry if the entry exists. Declaration public bool TryModifyValue(string key, TValue value) Parameters Type Name Description System.String key The key of the entry to modify. TValue value The new value of the entry. Returns Type Description System.Boolean True if the entry was found. | Improve this Doc View Source TryRemove(String) Removes the entry if it exists. Declaration public bool TryRemove(string key) Parameters Type Name Description System.String key The key to remove. Returns Type Description System.Boolean True if the entry was found. | Improve this Doc View Source TryRemoveNoValueClear(String) Removes the entry if it exists, but does not remove the value of the key value pair. Declaration public bool TryRemoveNoValueClear(string key) Parameters Type Name Description System.String key The key to remove. Returns Type Description System.Boolean True if the entry was found."
  },
  "api/GDX.Collections.Generic.StringKeyEntry-1.html": {
    "href": "api/GDX.Collections.Generic.StringKeyEntry-1.html",
    "title": "StringKeyEntry<T> | GDX",
    "keywords": "Struct StringKeyEntry<T> Namespace : GDX.Collections.Generic Syntax [Serializable] public struct StringKeyEntry<T> Type Parameters Name Description T Fields | Improve this Doc View Source HashCode Declaration public int HashCode Field Value Type Description System.Int32 | Improve this Doc View Source Key Declaration public string Key Field Value Type Description System.String | Improve this Doc View Source Next Declaration public int Next Field Value Type Description System.Int32 | Improve this Doc View Source Value Declaration public T Value Field Value Type Description T"
  },
  "api/GDX.Collections.Generic.UniformArray3D-1.html": {
    "href": "api/GDX.Collections.Generic.UniformArray3D-1.html",
    "title": "UniformArray3D<T> | GDX",
    "keywords": "Struct UniformArray3D<T> A uniform three-dimensional array. Implements System.IDisposable Namespace : GDX.Collections.Generic Syntax public struct UniformArray3D<T> : IDisposable Type Parameters Name Description T Type of objects. Constructors | Improve this Doc View Source UniformArray3D(Int32) Create a UniformArray3D<T> with a uniform dimensional length. Declaration public UniformArray3D(int stride) Parameters Type Name Description System.Int32 stride X length, Y length and Z length will all be set to this value. Fields | Improve this Doc View Source Array The backing Array . Declaration public T[] Array Field Value Type Description T[] | Improve this Doc View Source Length The length of Array . Declaration public readonly int Length Field Value Type Description System.Int32 | Improve this Doc View Source Stride The stride of each dimensional segment in Array . Declaration public readonly int Stride Field Value Type Description System.Int32 | Improve this Doc View Source StrideSquared Stores a cached copy of the stride squared. Declaration public readonly int StrideSquared Field Value Type Description System.Int32 Properties | Improve this Doc View Source Item[Int32, Int32, Int32] Access a specific location in the voxel. Declaration public T this[int x, int y, int z] { get; set; } Parameters Type Name Description System.Int32 x X location index. System.Int32 y Y location index. System.Int32 z Z location index. Property Value Type Description T Remarks x + WIDTH * (y + DEPTH * z) | Improve this Doc View Source Item[int3] Access a specific location in the voxel. Declaration public T this[int3 index] { get; set; } Parameters Type Name Description Unity.Mathematics.int3 index A three-dimensional index. Property Value Type Description T Methods | Improve this Doc View Source Dispose() Properly dispose of the UniformArray3D<T> . Declaration public void Dispose() | Improve this Doc View Source GetFromIndex(Int32) Get the three-dimensional index of a flat array index. Declaration public int3 GetFromIndex(int index) Parameters Type Name Description System.Int32 index A flat array index. Returns Type Description Unity.Mathematics.int3 A three-dimensional voxel index. | Improve this Doc View Source GetFromIndex(Int32, Int32, Int32) Get the three-dimensional index of a flat array index. Declaration public static int3 GetFromIndex(int index, int stride, int strideSquared) Parameters Type Name Description System.Int32 index A flat array index. System.Int32 stride The predetermined length of an axis. System.Int32 strideSquared The squared value of stride . Returns Type Description Unity.Mathematics.int3 A three-dimensional voxel index. Implements System.IDisposable"
  },
  "api/GDX.Collections.html": {
    "href": "api/GDX.Collections.html",
    "title": "Namespace GDX.Collections | GDX",
    "keywords": "Namespace GDX.Collections Structs ArrayHolder<T> A struct purely created to allow for serialization of multi-dimensional arrays. BitArray128 A 128-bit array. BitArray16 A 16-bit array. BitArray256 A 256-bit array. BitArray32 A 32-bit array. BitArray512 A 512-bit array. BitArray64 A 64-bit array. BitArray8 A 8-bit array. FreeList An array where indices are allocated from and stored in an in-place linked list. Allocating or deallocating a single int from this array is very fast, as is single datum lookup, but neither the allocated indices nor the free indices can be reliably iterated without an external data structure. This structure can be adapted to an arbitrary of external, parallel arrays. NativeArraySparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. SparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration."
  },
  "api/GDX.Collections.NativeArraySparseSet.html": {
    "href": "api/GDX.Collections.NativeArraySparseSet.html",
    "title": "NativeArraySparseSet | GDX",
    "keywords": "Struct NativeArraySparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. Implements System.IDisposable Namespace : GDX.Collections Syntax public struct NativeArraySparseSet : IDisposable Constructors | Improve this Doc View Source NativeArraySparseSet(Int32, Allocator) Create a NativeArraySparseSet with an initialCapacity . Declaration public NativeArraySparseSet(int initialCapacity, Allocator allocator) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the sparse and dense int arrays. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. | Improve this Doc View Source NativeArraySparseSet(Int32, Allocator, out NativeArray<UInt64>) Create a NativeArraySparseSet with an initialCapacity . Declaration public NativeArraySparseSet(int initialCapacity, Allocator allocator, out NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the sparse and dense int arrays. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. Fields | Improve this Doc View Source Count How many indices are being used currently? Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source DenseArray Holds references to the sparse array for swapping indices. Declaration public NativeArray<int> DenseArray Field Value Type Description Unity.Collections.NativeArray < System.Int32 > | Improve this Doc View Source FreeIndex The first free (currently unused) index in the sparse array. Declaration public int FreeIndex Field Value Type Description System.Int32 | Improve this Doc View Source SparseArray Holds references to dense array indices. Declaration public NativeArray<int> SparseArray Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Its own indices are claimed and freed via a free-list. Methods | Improve this Doc View Source AddUnchecked(out Int32, out Int32) Adds a sparse/dense index pair to the set without checking if the set needs to expand. Declaration public void AddUnchecked(out int sparseIndex, out int denseIndex) Parameters Type Name Description System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. | Improve this Doc View Source AddUnchecked(out Int32, out Int32, NativeArray<UInt64>, out UInt64) Adds a sparse/dense index pair to the set without checking if the set needs to expand. Declaration public void AddUnchecked(out int sparseIndex, out int denseIndex, NativeArray<ulong> versionArray, out ulong version) Parameters Type Name Description System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. System.UInt64 version Enables detection of use-after-free errors when using the sparse index as a reference. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, out Int32, Allocator) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck(int expandBy, out int sparseIndex, out int denseIndex, Allocator allocator) Parameters Type Name Description System.Int32 expandBy How many indices to expand by. System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Returns Type Description System.Boolean True if the index pool expanded. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, out Int32, Allocator, ref NativeArray<UInt64>) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck(int expandBy, out int sparseIndex, out int denseIndex, Allocator allocator, ref NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 expandBy How many indices to expand by. System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. Returns Type Description System.Boolean True if the index pool expanded. | Improve this Doc View Source Clear() Clear the dense and sparse arrays. Declaration public void Clear() | Improve this Doc View Source Clear(NativeArray<UInt64>) Clear the dense and sparse arrays. Declaration public void Clear(NativeArray<ulong> versionArray) Parameters Type Name Description Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. | Improve this Doc View Source ClearWithVersionArrayReset(NativeArray<UInt64>) Clear the dense and sparse arrays and reset the version array. Note: Only clear the version array if you are sure there are no outstanding dependencies on version numbers. Declaration public void ClearWithVersionArrayReset(NativeArray<ulong> versionArray) Parameters Type Name Description Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Expand(Int32, Allocator) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity, Allocator allocator) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. Unity.Collections.Allocator allocator The Unity.Collections.Allocator type to use. | Improve this Doc View Source Expand(Int32, Allocator, ref NativeArray<UInt64>) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity, Allocator allocator, ref NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. Unity.Collections.Allocator allocator Which Unity memory allocator to use with the backing array. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. | Improve this Doc View Source GetDenseIndexUnchecked(Int32) Gets the value of the sparse array at the given index without any data validation. Declaration public int GetDenseIndexUnchecked(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index to check in the sparse array. Returns Type Description System.Int32 The dense index at the given sparse index. | Improve this Doc View Source GetDenseIndexWithBoundsAndVersionCheck(Int32, UInt64, NativeArray<UInt64>) Gets the value of the sparse array at the given index, or -1 if the given sparse index is invalid.. Declaration public int GetDenseIndexWithBoundsAndVersionCheck(int sparseIndex, ulong version, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithBoundsCheck(Int32) Gets the value of the sparse array at the given index, or -1 if the dense and sparse indices don't point to each other or if the dense index is outside the dense bounds. Declaration public int GetDenseIndexWithBoundsCheck(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithVersionCheck(Int32, UInt64, NativeArray<UInt64>) Gets the value of the sparse array at the given index, or -1 if the version number does not match. Declaration public int GetDenseIndexWithVersionCheck(int sparseIndex, ulong version, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source RemoveUnchecked(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUnchecked(int sparseIndexToRemove) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. | Improve this Doc View Source RemoveUnchecked(Int32, out Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, out int indexToSwapFrom, out int indexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. | Improve this Doc View Source RemoveUnchecked(Int32, NativeArray<UInt64>) Removes the associated sparse/dense index pair from active use and increments the version. Declaration public void RemoveUnchecked(int sparseIndexToRemove, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. | Improve this Doc View Source RemoveUnchecked(Int32, NativeArray<UInt64>, out Int32, out Int32) Removes the associated sparse/dense index pair from active use and increments the version. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, NativeArray<ulong> versionArray, out int indexToSwapFrom, out int indexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, NativeArray<UInt64>) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, NativeArray<UInt64>, out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, NativeArray<ulong> versionArray, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveWithBoundsAndVersionChecks(ref Int32, UInt64, NativeArray<UInt64>, out Int32, out Int32) Removes the associated sparse/dense index pair from active use. calls. Declaration public bool RemoveWithBoundsAndVersionChecks(ref int sparseIndexToRemove, ulong version, NativeArray<ulong> versionArray, out int indexToSwapFrom, out int indexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. Returns Type Description System.Boolean True if the element was successfully removed. | Improve this Doc View Source RemoveWithBoundsCheck(ref Int32, out Int32, out Int32) Removes the entry corresponding to the sparse index if the entry is within bounds and currently in use. Declaration public bool RemoveWithBoundsCheck(ref int sparseIndexToRemove, out int dataIndexToSwapFrom, out int dataIndexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index corresponding to the entry to remove. Cleared to -1 in this operation. System.Int32 dataIndexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 dataIndexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. Returns Type Description System.Boolean True if the index reference was valid, and thus removed. | Improve this Doc View Source RemoveWithVersionCheck(Int32, UInt64, NativeArray<UInt64>, out Int32, out Int32) Attempts to remove the associated sparse/dense index pair from active use and increments the version if successful. Out parameters used to manage parallel data arrays. Declaration public bool RemoveWithVersionCheck(int sparseIndexToRemove, ulong version, NativeArray<ulong> versionArray, out int indexToSwapFrom, out int indexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. Unity.Collections.NativeArray < System.UInt64 > versionArray The array containing the version number to check against. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. Returns Type Description System.Boolean True if the entry was valid and thus removed. | Improve this Doc View Source Reserve(Int32, Allocator) Reallocate the dense and sparse arrays with additional capacity if there are not at least numberToReserve unused entries. Declaration public void Reserve(int numberToReserve, Allocator allocator) Parameters Type Name Description System.Int32 numberToReserve The number of unused entries to ensure capacity for. Unity.Collections.Allocator allocator The allocator to use on expansion. | Improve this Doc View Source Reserve(Int32, Allocator, ref NativeArray<UInt64>) Reallocate the dense and sparse arrays with additional capacity if there are not at least numberToReserve unused entries. Declaration public void Reserve(int numberToReserve, Allocator allocator, ref NativeArray<ulong> versionArray) Parameters Type Name Description System.Int32 numberToReserve The number of unused entries to ensure capacity for. Unity.Collections.Allocator allocator The allocator to use on expansion. Unity.Collections.NativeArray < System.UInt64 > versionArray Enables detection of use-after-free errors when using sparse indices as references. Implements System.IDisposable"
  },
  "api/GDX.Collections.Pooling.ArrayPool-1.html": {
    "href": "api/GDX.Collections.Pooling.ArrayPool-1.html",
    "title": "ArrayPool<T> | GDX",
    "keywords": "Struct ArrayPool<T> An object pool for arrays with power-of-two lengths. Namespace : GDX.Collections.Pooling Syntax public struct ArrayPool<T> Type Parameters Name Description T The data type contained by pooled arrays. Constructors | Improve this Doc View Source ArrayPool(Int32[], Int32[]) Initialize the array pool with initial and maximum sizes for each power-of-two, 0 through 30 inclusive (the maximum power-of-two length supported in C#). Declaration public ArrayPool(int[] initialPoolCounts, int[] maxPoolCapacities) Parameters Type Name Description System.Int32 [] initialPoolCounts System.Int32 [] maxPoolCapacities Fields | Improve this Doc View Source ArrayPools Declaration public JaggedArrayWithCount<T>[] ArrayPools Field Value Type Description JaggedArrayWithCount <T>[] | Improve this Doc View Source MaxPoolCapacities Declaration public int[] MaxPoolCapacities Field Value Type Description System.Int32 [] Methods | Improve this Doc View Source Get(Int32) Allocates an array from the pool. Finds an array of the smallest power-of-two length larger than or equal to the requested size. Declaration public T[] Get(int requestedSize) Parameters Type Name Description System.Int32 requestedSize The desired array length. The returned array will be the smallest power-of-two larger than or equal to this size. Returns Type Description T[] | Improve this Doc View Source Return(T[]) Return a power-of-two sized array to the pool. Only pass power-of-two sized arrays to this function. Does not clear the array. Declaration public void Return(T[] array) Parameters Type Name Description T[] array The power-of-two sized array to return to the pool. Power-of-two sizes only."
  },
  "api/GDX.Collections.Pooling.GameObjectPool.html": {
    "href": "api/GDX.Collections.Pooling.GameObjectPool.html",
    "title": "GameObjectPool | GDX",
    "keywords": "Class GameObjectPool UnityEngine.GameObject based functionality extending the SimpleListManagedPool to better support UnityEngine.GameObject patterns. Inheritance System.Object GameObjectPool Namespace : GDX.Collections.Pooling Syntax [VisualScriptingCompatible((short)1)] public static class GameObjectPool Methods | Improve this Doc View Source CreatePool(GameObject, Transform, Int32, Int32, Boolean, Boolean, Boolean) Create a UnityEngine.GameObject based SimpleListManagedPool for the provided gameObject . Declaration public static IManagedPool CreatePool(GameObject gameObject, Transform parent, int minimumObjects = 10, int maximumObjects = 50, bool allowCreateMore = true, bool allowReuseWhenCapped = false, bool allowManagedTearDown = false) Parameters Type Name Description UnityEngine.GameObject gameObject The object which going to be cloned. UnityEngine.Transform parent The container object. System.Int32 minimumObjects The minimum number of objects to be pooled. System.Int32 maximumObjects The maximum number of objects to be pooled. System.Boolean allowCreateMore Can more items be created as needed when starved for items? System.Boolean allowReuseWhenCapped Should we reuse oldest items when starving for items? System.Boolean allowManagedTearDown Does the pool allow a managed tear down event call? Returns Type Description IManagedPool Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Boolean) Get the next available item from the pool . Declaration public static GameObject Get(SimpleListManagedPool pool, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Transform, Boolean, Boolean, Boolean) Get the next available item from the pool and parent it to a UnityEngine.Transform . Declaration public static GameObject Get(SimpleListManagedPool pool, Transform parent, bool worldPositionStays = false, bool zeroLocalPosition = true, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . System.Boolean worldPositionStays Ensure that the world position of the item pulled from the SimpleListManagedPool remains the same through parenting. System.Boolean zeroLocalPosition Set the local position of the item pulled from the SimpleListManagedPool to being UnityEngine.Vector3.zero after parenting. System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Transform, Vector3, Quaternion, Boolean) Get the next available item from the pool , parent it to a UnityEngine.Transform , and then set it's local position and rotation. Declaration public static GameObject Get(SimpleListManagedPool pool, Transform parent, Vector3 localPosition, Quaternion localRotation, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . UnityEngine.Vector3 localPosition The local position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Quaternion localRotation The local rotation to set on the item pulled from the SimpleListManagedPool after parenting. System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Transform, Vector3, Vector3, Boolean) Get the next available item from the pool , parent it to a UnityEngine.Transform , and then setting it's local position and where it is looking. Declaration public static GameObject Get(SimpleListManagedPool pool, Transform parent, Vector3 localPosition, Vector3 worldLookAtPosition, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . UnityEngine.Vector3 localPosition The local position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Vector3 worldLookAtPosition The world position to have the item pulled from the SimpleListManagedPool look at System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Quaternion, Boolean) Get the next available item from the pool , and set its world position and rotation. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Quaternion worldRotation, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool . UnityEngine.Quaternion worldRotation The world rotation to set on the item pulled from the SimpleListManagedPool . System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Quaternion, Transform, Boolean) Get the next available item from the pool , and set its world position and rotation after parenting. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Quaternion worldRotation, Transform parent, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Quaternion worldRotation The world rotation to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Vector3, Boolean) Get the next available item from the pool , and set its world position and where it is looking. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Vector3 worldLookAtPosition, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool . UnityEngine.Vector3 worldLookAtPosition The world position to have the item pulled from the SimpleListManagedPool look at System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(SimpleListManagedPool, Vector3, Vector3, Transform, Boolean) Get the next available item from the pool , and set its world position and look at position after parenting. Declaration public static GameObject Get(SimpleListManagedPool pool, Vector3 worldPosition, Vector3 worldLookAtPosition, Transform parent, bool triggerOnSpawnedFromPool = true) Parameters Type Name Description SimpleListManagedPool pool The SimpleListManagedPool created with GameObjectPool to pull an item from. UnityEngine.Vector3 worldPosition The world position to set on the item pulled from the SimpleListManagedPool after parenting. UnityEngine.Vector3 worldLookAtPosition The world position to have the item pulled from the SimpleListManagedPool look at after parenting. UnityEngine.Transform parent The transform parent on the item pulled from the SimpleListManagedPool . System.Boolean triggerOnSpawnedFromPool Should the GDX.Collections.Pooling.GameObjectPool.OnSpawnedFromPoolAction(GDX.Collections.Pooling.SimpleListManagedPool,System.Object) be called when getting this item. Returns Type Description UnityEngine.GameObject A UnityEngine.GameObject from the SimpleListManagedPool , or null if no item is available. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetOrCreatePool(GameObject, Transform, Int32, Int32, Boolean, Boolean, Boolean) Gets a pool for the gameObject , or creates a new SimpleListManagedPool for it. Declaration public static IManagedPool GetOrCreatePool(GameObject gameObject, Transform parent, int minimumObjects = 10, int maximumObjects = 50, bool allowCreateMore = true, bool allowReuseWhenCapped = false, bool allowManagedTearDown = false) Parameters Type Name Description UnityEngine.GameObject gameObject The object which going to be cloned. UnityEngine.Transform parent The container object. System.Int32 minimumObjects The minimum number of objects to be pooled. System.Int32 maximumObjects The maximum number of objects to be pooled. System.Boolean allowCreateMore Can more items be created as needed when starved for items? System.Boolean allowReuseWhenCapped Should we reuse oldest items when starving for items? System.Boolean allowManagedTearDown Does the pool allow a managed tear down event call? Returns Type Description IManagedPool Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Collections.Pooling.html": {
    "href": "api/GDX.Collections.Pooling.html",
    "title": "Namespace GDX.Collections.Pooling | GDX",
    "keywords": "Namespace GDX.Collections.Pooling Classes GameObjectPool UnityEngine.GameObject based functionality extending the SimpleListManagedPool to better support UnityEngine.GameObject patterns. ManagedPoolBuilder A time-slicing builder behaviour for IManagedPool . ManagedPools A managed pooling system implementation primarily meant for the object oriented patterns, based on the C# base object. SimpleListManagedPool A System.Object SimpleList<T> backed pool implementation. Structs ArrayPool<T> An object pool for arrays with power-of-two lengths. JaggedArrayWithCount<T> Interfaces IGameObjectPoolItem An interface describing the functionality needed for an item to be understood by GameObjectPool , if callbacks are to be made. IManagedPool An interface describing the functionality needed for a pool to be understood by ManagedPools ."
  },
  "api/GDX.Collections.Pooling.IGameObjectPoolItem.html": {
    "href": "api/GDX.Collections.Pooling.IGameObjectPoolItem.html",
    "title": "IGameObjectPoolItem | GDX",
    "keywords": "Interface IGameObjectPoolItem An interface describing the functionality needed for an item to be understood by GameObjectPool , if callbacks are to be made. Namespace : GDX.Collections.Pooling Syntax public interface IGameObjectPoolItem Methods | Improve this Doc View Source GetGameObject() Declaration GameObject GetGameObject() Returns Type Description UnityEngine.GameObject Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetParentPool() Return the IManagedPool which the IGameObjectPoolItem is currently managed by. Declaration IManagedPool GetParentPool() Returns Type Description IManagedPool An IManagedPool if the IGameObjectPoolItem is attached to a pool, otherwise null. Remarks It is possible that a pooled item may exist without a parent in some custom scenario. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsValidItem() Is the IGameObjectPoolItem thought to be valid? Declaration bool IsValidItem() Returns Type Description System.Boolean true/false if the item is found to be valid. Remarks Sometimes a UnityEngine.GameObject may get destroyed without the pool knowing, this contains checks to validate if the item can be returned to a pool and reused appropriately. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnReturnedToPool() Called when this item is returned to the IManagedPool . Declaration void OnReturnedToPool() Remarks This should handle everything, including disabling the UnityEngine.GameObject . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source OnSpawnedFromPool() Called when this item is spawned from the IManagedPool . Declaration void OnSpawnedFromPool() Remarks This should handle everything, including enabling the UnityEngine.GameObject . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ReturnToPool() Return the item to the IManagedPool which it is associated too. Declaration void ReturnToPool() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source SetParentPool(IManagedPool) Set the IManagedPool which this item believes it belongs too. Declaration void SetParentPool(IManagedPool targetManagedPool) Parameters Type Name Description IManagedPool targetManagedPool The parent IManagedPool . Remarks This is used during creation to assign the parent that is creating the item. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Collections.Pooling.IManagedPool.html": {
    "href": "api/GDX.Collections.Pooling.IManagedPool.html",
    "title": "IManagedPool | GDX",
    "keywords": "Interface IManagedPool An interface describing the functionality needed for a pool to be understood by ManagedPools . Namespace : GDX.Collections.Pooling Syntax public interface IManagedPool Methods | Improve this Doc View Source CreateItem() Create a pooled item and add it to the IManagedPool . Declaration void CreateItem() | Improve this Doc View Source ForceRemove(Object) Remove an item from an IManagedPool immediately, removing it from tracking and not calling any actions on it. Declaration void ForceRemove(object item) Parameters Type Name Description System.Object item The target System.Object to attempt to remove. | Improve this Doc View Source Get(Boolean) Get the next available item from an IManagedPool . Declaration object Get(bool triggerOnSpawnedFromPool = true) Parameters Type Name Description System.Boolean triggerOnSpawnedFromPool Returns Type Description System.Object An item if available, otherwise null. | Improve this Doc View Source GetBaseObject() Return the System.Object which the pool is built from. Declaration object GetBaseObject() Returns Type Description System.Object The System.Object the IManagedPool is modelled around. | Improve this Doc View Source GetKey() Get the unique identifier for the IManagedPool . Declaration uint GetKey() Returns Type Description System.UInt32 A unique identifier. | Improve this Doc View Source HasMinimumPooledItems() Does the IManagedPool contain the minimum number of items. Declaration bool HasMinimumPooledItems() Returns Type Description System.Boolean true/false if enough items are found contained in the IManagedPool . | Improve this Doc View Source IsAllowedManagedTearDown() Should the IManagedPool destroy itself when ManagedPools requests a tear down? Declaration bool IsAllowedManagedTearDown() Returns Type Description System.Boolean true/false if flagged to allow for managed tear down / clean up. | Improve this Doc View Source IsManaged(Object) Is the item managed by this IManagedPool ? Declaration bool IsManaged(object item) Parameters Type Name Description System.Object item The System.Object to evaluate. Returns Type Description System.Boolean true/false if the item is managed by the IManagedPool . | Improve this Doc View Source IsPooled(Object) Is the provided item found in the IManagedPool 's internal available pool of objects? Declaration bool IsPooled(object item) Parameters Type Name Description System.Object item The item to evaluate. Returns Type Description System.Boolean | Improve this Doc View Source Return(Object) Return the item to the IManagedPool 's internal collection. Declaration void Return(object item) Parameters Type Name Description System.Object item The item to return to the IManagedPool . | Improve this Doc View Source ReturnAll(Boolean) Return all spawned System.Object s to the IManagedPool . Declaration void ReturnAll(bool shouldShrink = true) Parameters Type Name Description System.Boolean shouldShrink Should the IManagedPool be shrunk to its original maximum size? Remarks Shrinking the pools helps with pools that have grown out of necessity past their maximum size | Improve this Doc View Source TearDown() Destroy all System.Object s associated with the IManagedPool . Declaration void TearDown()"
  },
  "api/GDX.Collections.Pooling.JaggedArrayWithCount-1.html": {
    "href": "api/GDX.Collections.Pooling.JaggedArrayWithCount-1.html",
    "title": "JaggedArrayWithCount<T> | GDX",
    "keywords": "Struct JaggedArrayWithCount<T> Namespace : GDX.Collections.Pooling Syntax public struct JaggedArrayWithCount<T> Type Parameters Name Description T Fields | Improve this Doc View Source Count Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source Pool Declaration public T[][] Pool Field Value Type Description T[][]"
  },
  "api/GDX.Collections.Pooling.ManagedPoolBuilder.html": {
    "href": "api/GDX.Collections.Pooling.ManagedPoolBuilder.html",
    "title": "ManagedPoolBuilder | GDX",
    "keywords": "Class ManagedPoolBuilder A time-slicing builder behaviour for IManagedPool . Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour ManagedPoolBuilder Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag Namespace : GDX.Collections.Pooling Syntax public class ManagedPoolBuilder : MonoBehaviour Remarks A demonstration of usage can be found in GameObjectPool . Fields | Improve this Doc View Source DestroyBuilderOnFinish Should the ManagedPoolBuilder destroy itself when finished? Declaration public static bool DestroyBuilderOnFinish Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source InstantiatesPerFrame The number of instantiates to make per frame. Declaration public static int InstantiatesPerFrame Field Value Type Description System.Int32 Remarks During defined loading periods this value could be increased for faster allocations, and then returned to a much more performant value afterwards. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source AddManagedPool(IManagedPool) Add an IManagedPool to the builder to be built out. Declaration public static void AddManagedPool(IManagedPool targetManagedPool) Parameters Type Name Description IManagedPool targetManagedPool The IManagedPool to build out. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source RemoveManagedPool(IManagedPool) Remove an IManagedPool from the builder. Declaration public static void RemoveManagedPool(IManagedPool targetManagedPool) Parameters Type Name Description IManagedPool targetManagedPool The IManagedPool to be removed. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Extension Methods MonoBehaviourExtensions.GetFirstComponentInChildrenComplex<T>(MonoBehaviour, Boolean, Boolean, Int32) ObjectExtensions.SafeDestroy(Object, Single)"
  },
  "api/GDX.Collections.Pooling.ManagedPools.html": {
    "href": "api/GDX.Collections.Pooling.ManagedPools.html",
    "title": "ManagedPools | GDX",
    "keywords": "Class ManagedPools A managed pooling system implementation primarily meant for the object oriented patterns, based on the C# base object. Inheritance System.Object ManagedPools Namespace : GDX.Collections.Pooling Syntax [VisualScriptingCompatible((short)1)] public static class ManagedPools Methods | Improve this Doc View Source GetNextPoolKey() Get the next available pool key. Declaration public static uint GetNextPoolKey() Returns Type Description System.UInt32 A unique pool identifying key. Remarks Increments the previously issued stored value, and returns the new value. | Improve this Doc View Source GetPool(UInt32) Get a registered IManagedPool based on its key . Declaration public static IManagedPool GetPool(uint key) Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description IManagedPool An IManagedPool identified by the provided key . | Improve this Doc View Source GetPool<T>(UInt32) Get a registered IManagedPool based on its key . Declaration public static T GetPool<T>(uint key) Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description T A type casted pool identified by the provided key . Type Parameters Name Description T The type of the pool, used to cast the return pool | Improve this Doc View Source GetPoolWithContainsCheck(UInt32) Get a registered IManagedPool based on its key , first checking if it is registered. Declaration public static IManagedPool GetPoolWithContainsCheck(uint key) Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description IManagedPool An IManagedPool identified by the provided key , null if not found. | Improve this Doc View Source GetPoolWithContainsCheck<T>(UInt32) Get a registered IManagedPool based on its key , first checking if it is registered. Declaration public static T GetPoolWithContainsCheck<T>(uint key) where T : class Parameters Type Name Description System.UInt32 key The unique key to use when looking for the IManagedPool . Returns Type Description T A type casted pool identified by the provided key , null if not found. Type Parameters Name Description T The type of the pool, used to cast the return pool | Improve this Doc View Source HasPool(UInt32) Is an IManagedPool registered with the provided key ? Declaration public static bool HasPool(uint key) Parameters Type Name Description System.UInt32 key A unique pool key Returns Type Description System.Boolean true if a pool is found registered with this system, false otherwise. | Improve this Doc View Source Register(IManagedPool) Register a IManagedPool with the global management system. Declaration public static void Register(IManagedPool managedPool) Parameters Type Name Description IManagedPool managedPool Target IManagedPool | Improve this Doc View Source ReturnAll(Boolean) Attempts to return all spawned items to their original IManagedPool s. Declaration public static void ReturnAll(bool shouldShrink = true) Parameters Type Name Description System.Boolean shouldShrink Should the pool be shrunk (destroying created items) to its original set minimum size? | Improve this Doc View Source TearDown(Boolean) Execute TearDown() (destroying contents) on all registered IManagedPool which have been flagged to accept it, evaluated by IsAllowedManagedTearDown() . Declaration public static void TearDown(bool forceAll = false) Parameters Type Name Description System.Boolean forceAll Execute TearDown() regardless of the IsAllowedManagedTearDown() response. Remarks This will unregister the IManagedPool itself as well. | Improve this Doc View Source TryGetFirstPool(Object, out IManagedPool) Attempt to get an IManagedPool based on the baseObject . Declaration public static bool TryGetFirstPool(object baseObject, out IManagedPool pool) Parameters Type Name Description System.Object baseObject The System.Object which was used to create the pool. IManagedPool pool The first found IManagedPool created with baseObject . Returns Type Description System.Boolean true/false if an IManagedPool was found. | Improve this Doc View Source Unregister(IManagedPool) Unregister a IManagedPool from with the management system. Declaration public static void Unregister(IManagedPool managedPool) Parameters Type Name Description IManagedPool managedPool Target IManagedPool"
  },
  "api/GDX.Collections.Pooling.SimpleListManagedPool.html": {
    "href": "api/GDX.Collections.Pooling.SimpleListManagedPool.html",
    "title": "SimpleListManagedPool | GDX",
    "keywords": "Class SimpleListManagedPool A System.Object SimpleList<T> backed pool implementation. Inheritance System.Object SimpleListManagedPool Implements IManagedPool Namespace : GDX.Collections.Pooling Syntax public sealed class SimpleListManagedPool : IManagedPool Constructors | Improve this Doc View Source SimpleListManagedPool(Object, Func<SimpleListManagedPool, Object>, Int32, Int32, Object, Boolean, Boolean, Boolean, Boolean) Create a SimpleListManagedPool . Declaration public SimpleListManagedPool(object baseObject, Func<SimpleListManagedPool, object> createItemFunc, int minimumObjects = 10, int maximumObjects = 50, object containerObject = null, bool prewarmPool = true, bool allowCreateMore = true, bool allowReuseWhenCapped = false, bool allowManagedTearDown = false) Parameters Type Name Description System.Object baseObject The object which going to be cloned. System.Func < SimpleListManagedPool , System.Object > createItemFunc The function used to create new items for the pool. System.Int32 minimumObjects The minimum number of objects to be managed by the pool. System.Int32 maximumObjects The maximum number of objects to be managed by the pool. System.Object containerObject A reference to an object which should be used as the container for created items. System.Boolean prewarmPool Should this pool create its items during the constructor? System.Boolean allowCreateMore Can more items be created as needed when starved for items? System.Boolean allowReuseWhenCapped Should we reuse oldest items when starving for items? System.Boolean allowManagedTearDown Does the pool allow a managed tear down event call? Fields | Improve this Doc View Source BaseObject The object which the pool is based off of, used as a model when creating new items. Declaration public readonly object BaseObject Field Value Type Description System.Object | Improve this Doc View Source ContainerObject The object which serves as a container for all objects of the pool. Declaration public readonly object ContainerObject Field Value Type Description System.Object Remarks Used more by implementations of pools, then this base class. | Improve this Doc View Source destroyedItem An event invoked when an item is destroyed by the SimpleListManagedPool . Declaration public Action<object> destroyedItem Field Value Type Description System.Action < System.Object > | Improve this Doc View Source Flags A BitArray8 used to store pool based flags, as well as provide additional spots for implementations. Declaration public BitArray8 Flags Field Value Type Description BitArray8 Remarks Index 0-3 ( GDX.Collections.Pooling.SimpleListManagedPool.k_AllowCreateMoreFlag , GDX.Collections.Pooling.SimpleListManagedPool.k_AllowManagedTeardownFlag , GDX.Collections.Pooling.SimpleListManagedPool.k_AllowReuseFlag , and GDX.Collections.Pooling.SimpleListManagedPool.k_PrewarmPoolFlag ) are used by the SimpleListManagedPool itself, leaving 4-7 for additional use. | Improve this Doc View Source InCachedCount A cached count of the number of items contained in InItems . Declaration public int InCachedCount Field Value Type Description System.Int32 | Improve this Doc View Source InItems A collection of items that are currently contained in the pool for use when spawning items upon request. Declaration public SimpleList<object> InItems Field Value Type Description SimpleList < System.Object > | Improve this Doc View Source OutCachedCount A cached count of the number of items contained in GDX.Collections.Pooling.SimpleListManagedPool.m_OutItems . Declaration public int OutCachedCount Field Value Type Description System.Int32 | Improve this Doc View Source returnedItem An event invoked when an item is returned to the SimpleListManagedPool . Declaration public Action<SimpleListManagedPool, object> returnedItem Field Value Type Description System.Action < SimpleListManagedPool , System.Object > | Improve this Doc View Source spawnedItem An event invoked when an item is spawned from the SimpleListManagedPool . Declaration public Action<SimpleListManagedPool, object> spawnedItem Field Value Type Description System.Action < SimpleListManagedPool , System.Object > | Improve this Doc View Source tearingDown An event invoked when a pool is tearing down, before the items are pooled. Declaration public Action<SimpleListManagedPool> tearingDown Field Value Type Description System.Action < SimpleListManagedPool > Methods | Improve this Doc View Source CreateItem() Create a pooled item and add it to the IManagedPool . Declaration public void CreateItem() | Improve this Doc View Source Finalize() The SimpleListManagedPool destructor which unregisters itself from ManagedPools . Declaration protected void Finalize() | Improve this Doc View Source ForceRemove(Object) Remove an item from an IManagedPool immediately, removing it from tracking and not calling any actions on it. Declaration public void ForceRemove(object item) Parameters Type Name Description System.Object item The target System.Object to attempt to remove. | Improve this Doc View Source Get(Boolean) Get the next available item from an IManagedPool . Declaration public object Get(bool triggerOnSpawnedFromPool = true) Parameters Type Name Description System.Boolean triggerOnSpawnedFromPool Returns Type Description System.Object An item if available, otherwise null. | Improve this Doc View Source GetBaseObject() Return the System.Object which the pool is built from. Declaration public object GetBaseObject() Returns Type Description System.Object The System.Object the IManagedPool is modelled around. | Improve this Doc View Source GetKey() Get the unique identifier for the IManagedPool . Declaration public uint GetKey() Returns Type Description System.UInt32 A unique identifier. | Improve this Doc View Source HasMinimumPooledItems() Does the IManagedPool contain the minimum number of items. Declaration public bool HasMinimumPooledItems() Returns Type Description System.Boolean true/false if enough items are found contained in the IManagedPool . | Improve this Doc View Source IsAllowedManagedTearDown() Should the IManagedPool destroy itself when ManagedPools requests a tear down? Declaration public bool IsAllowedManagedTearDown() Returns Type Description System.Boolean true/false if flagged to allow for managed tear down / clean up. | Improve this Doc View Source IsManaged(Object) Is the item managed by this IManagedPool ? Declaration public bool IsManaged(object item) Parameters Type Name Description System.Object item The System.Object to evaluate. Returns Type Description System.Boolean true/false if the item is managed by the IManagedPool . | Improve this Doc View Source IsPooled(Object) Is the provided item found in the IManagedPool 's internal available pool of objects? Declaration public bool IsPooled(object item) Parameters Type Name Description System.Object item The item to evaluate. Returns Type Description System.Boolean | Improve this Doc View Source Return(Object) Return the item to the IManagedPool 's internal collection. Declaration public void Return(object item) Parameters Type Name Description System.Object item The item to return to the IManagedPool . | Improve this Doc View Source ReturnAll(Boolean) Return all spawned System.Object s to the IManagedPool . Declaration public void ReturnAll(bool shouldShrink = true) Parameters Type Name Description System.Boolean shouldShrink Should the IManagedPool be shrunk to its original maximum size? Remarks Shrinking the pools helps with pools that have grown out of necessity past their maximum size | Improve this Doc View Source TearDown() Destroy all System.Object s associated with the IManagedPool . Declaration public void TearDown() Implements IManagedPool"
  },
  "api/GDX.Collections.SparseSet.html": {
    "href": "api/GDX.Collections.SparseSet.html",
    "title": "SparseSet | GDX",
    "keywords": "Struct SparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. Namespace : GDX.Collections Syntax public struct SparseSet Constructors | Improve this Doc View Source SparseSet(Int32) Create a SparseSet with an initialCapacity . Declaration public SparseSet(int initialCapacity) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the sparse and dense int arrays. | Improve this Doc View Source SparseSet(Int32, out UInt64[]) Create a SparseSet with an initialCapacity . Declaration public SparseSet(int initialCapacity, out ulong[] versionArray) Parameters Type Name Description System.Int32 initialCapacity The initial capacity of the sparse and dense int arrays. System.UInt64 [] versionArray Array containing version numbers to check sparse references against. Fields | Improve this Doc View Source Count How many indices are being used currently? Declaration public int Count Field Value Type Description System.Int32 | Improve this Doc View Source DenseArray Holds references to the sparse array for swapping indices. Declaration public int[] DenseArray Field Value Type Description System.Int32 [] | Improve this Doc View Source FreeIndex The first free (currently unused) index in the sparse array. Declaration public int FreeIndex Field Value Type Description System.Int32 | Improve this Doc View Source SparseArray Holds references to dense array indices. Declaration public int[] SparseArray Field Value Type Description System.Int32 [] Remarks Its own indices are claimed and freed via a free-list. Methods | Improve this Doc View Source AddUnchecked(out Int32, out Int32) Adds a sparse/dense index pair to the set without checking if the set needs to expand. Declaration public void AddUnchecked(out int sparseIndex, out int denseIndex) Parameters Type Name Description System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. | Improve this Doc View Source AddUnchecked(out Int32, out Int32, UInt64[], out UInt64) Adds a sparse/dense index pair to the set without checking if the set needs to expand. Declaration public void AddUnchecked(out int sparseIndex, out int denseIndex, ulong[] versionArray, out ulong version) Parameters Type Name Description System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. System.UInt64 [] versionArray The array containing the version number to check against. System.UInt64 version Enables detection of use-after-free errors when using the sparse index as a reference. | Improve this Doc View Source AddUnchecked<T0>(T0, T0[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0>(T0 obj0, T0[] array0) Parameters Type Name Description T0 obj0 T0[] array0 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 | Improve this Doc View Source AddUnchecked<T0, T1>(T0, T0[], T1, T1[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1>(T0 obj0, T0[] array0, T1 obj1, T1[] array1) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 | Improve this Doc View Source AddUnchecked<T0, T1, T2>(T0, T0[], T1, T1[], T2, T2[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3>(T0, T0[], T1, T1[], T2, T2[], T3, T3[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4, T5>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[], T5, T5[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4, T5>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4, T5 obj5, T5[] array5) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 T5 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4, T5, T6>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[], T5, T5[], T6, T6[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4, T5, T6>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4, T5 obj5, T5[] array5, T6 obj6, T6[] array6) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 | Improve this Doc View Source AddUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(T0, T0[], T1, T1[], T2, T2[], T3, T3[], T4, T4[], T5, T5[], T6, T6[], T7, T7[]) Adds to the set without checking if the set needs to expand. Declaration public int AddUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(T0 obj0, T0[] array0, T1 obj1, T1[] array1, T2 obj2, T2[] array2, T3 obj3, T3[] array3, T4 obj4, T4[] array4, T5 obj5, T5[] array5, T6 obj6, T6[] array6, T7 obj7, T7[] array7) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 T7 obj7 T7[] array7 Returns Type Description System.Int32 The sparse index allocated Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, out Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck(int expandBy, out int sparseIndex, out int denseIndex) Parameters Type Name Description System.Int32 expandBy How many indices to expand by. System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. Returns Type Description System.Boolean True if the index pool expanded. | Improve this Doc View Source AddWithExpandCheck(Int32, out Int32, out Int32, ref UInt64[], out UInt64) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck(int expandBy, out int sparseIndex, out int denseIndex, ref ulong[] versionArray, out ulong version) Parameters Type Name Description System.Int32 expandBy How many indices to expand by. System.Int32 sparseIndex The sparse index allocated. System.Int32 denseIndex The dense index allocated. System.UInt64 [] versionArray The array containing the version number to check against. System.UInt64 version Enables detection of use-after-free errors when using the sparse index as a reference. Returns Type Description System.Boolean True if the index pool expanded. | Improve this Doc View Source AddWithExpandCheck<T0>(T0, ref T0[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0>(T0 obj0, ref T0[] array0, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 | Improve this Doc View Source AddWithExpandCheck<T0, T1>(T0, ref T0[], T1, ref T1[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2>(T0, ref T0[], T1, ref T1[], T2, ref T2[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4, T5>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], T5, ref T5[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4, T5>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, T5 obj5, ref T5[] array5, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 T5 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], T5, ref T5[], T6, ref T6[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, T5 obj5, ref T5[] array5, T6 obj6, ref T6[] array6, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 | Improve this Doc View Source AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6, T7>(T0, ref T0[], T1, ref T1[], T2, ref T2[], T3, ref T3[], T4, ref T4[], T5, ref T5[], T6, ref T6[], T7, ref T7[], out Int32, Int32) Adds a sparse/dense index pair to the set and expands the arrays if necessary. Declaration public bool AddWithExpandCheck<T0, T1, T2, T3, T4, T5, T6, T7>(T0 obj0, ref T0[] array0, T1 obj1, ref T1[] array1, T2 obj2, ref T2[] array2, T3 obj3, ref T3[] array3, T4 obj4, ref T4[] array4, T5 obj5, ref T5[] array5, T6 obj6, ref T6[] array6, T7 obj7, ref T7[] array7, out int lookupIndex, int howMuchToExpand = 16) Parameters Type Name Description T0 obj0 T0[] array0 T1 obj1 T1[] array1 T2 obj2 T2[] array2 T3 obj3 T3[] array3 T4 obj4 T4[] array4 T5 obj5 T5[] array5 T6 obj6 T6[] array6 T7 obj7 T7[] array7 System.Int32 lookupIndex System.Int32 howMuchToExpand Returns Type Description System.Boolean True if the index pool expanded. Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Clear() Clear the dense and sparse arrays. Declaration public void Clear() | Improve this Doc View Source Clear(UInt64[]) Clear the dense and sparse arrays. Declaration public void Clear(ulong[] versionArray) Parameters Type Name Description System.UInt64 [] versionArray Array containing version numbers to check against. | Improve this Doc View Source ClearWithVersionArrayReset(UInt64[]) Clear the dense and sparse arrays and reset the version array. Note: Only clear the version array if you are sure there are no outstanding dependencies on version numbers. Declaration public void ClearWithVersionArrayReset(ulong[] versionArray) Parameters Type Name Description System.UInt64 [] versionArray Array containing version numbers to check against. | Improve this Doc View Source Expand(Int32) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. | Improve this Doc View Source Expand(Int32, ref UInt64[]) Reallocate the dense and sparse arrays with additional capacity. Declaration public void Expand(int extraCapacity, ref ulong[] versionArray) Parameters Type Name Description System.Int32 extraCapacity How many indices to expand the dense and sparse arrays by. System.UInt64 [] versionArray Array containing version numbers to check against. | Improve this Doc View Source GetDenseIndexUnchecked(Int32) Gets the value of the sparse array at the given index without any data validation. Declaration public int GetDenseIndexUnchecked(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index to check in the sparse array. Returns Type Description System.Int32 The dense index at the given sparse index. | Improve this Doc View Source GetDenseIndexWithBoundsAndVersionCheck(Int32, UInt64, UInt64[]) Gets the value of the sparse array at the given index, or -1 if the given sparse index is invalid.. Declaration public int GetDenseIndexWithBoundsAndVersionCheck(int sparseIndex, ulong version, ulong[] versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. System.UInt64 [] versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithBoundsCheck(Int32) Gets the value of the sparse array at the given index, or -1 if the dense and sparse indices don't point to each other or if the dense index is outside the dense bounds. Declaration public int GetDenseIndexWithBoundsCheck(int sparseIndex) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source GetDenseIndexWithVersionCheck(Int32, UInt64, UInt64[]) Gets the value of the sparse array at the given index, or -1 if the version number does not match. Declaration public int GetDenseIndexWithVersionCheck(int sparseIndex, ulong version, ulong[] versionArray) Parameters Type Name Description System.Int32 sparseIndex The index in the sparse array to check against. System.UInt64 version The version number associated with the sparse index. System.UInt64 [] versionArray The array containing the version number to check against. Returns Type Description System.Int32 The dense index pointed to by the current sparse index, or -1 if invalid. | Improve this Doc View Source RemoveUnchecked(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUnchecked(int sparseIndexToRemove) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. | Improve this Doc View Source RemoveUnchecked(Int32, out Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, out int indexToSwapFrom, out int indexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. | Improve this Doc View Source RemoveUnchecked(Int32, UInt64[], out Int32, out Int32) Removes the associated sparse/dense index pair from active use and increments the version. Out parameters used to manage parallel data arrays. Declaration public void RemoveUnchecked(int sparseIndexToRemove, ulong[] versionArray, out int indexToSwapFrom, out int indexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at indexToSwapTo. System.Int32 indexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. | Improve this Doc View Source RemoveUnchecked<T0>(Int32, T0[]) Declaration public void RemoveUnchecked<T0>(int sparseIndexToRemove, T0[] array0) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 Type Parameters Name Description T0 | Improve this Doc View Source RemoveUnchecked<T0, T1>(Int32, T0[], T1[]) Declaration public void RemoveUnchecked<T0, T1>(int sparseIndexToRemove, T0[] array0, T1[] array1) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 Type Parameters Name Description T0 T1 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2>(Int32, T0[], T1[], T2[]) Declaration public void RemoveUnchecked<T0, T1, T2>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 Type Parameters Name Description T0 T1 T2 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3>(Int32, T0[], T1[], T2[], T3[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 Type Parameters Name Description T0 T1 T2 T3 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4>(Int32, T0[], T1[], T2[], T3[], T4[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 Type Parameters Name Description T0 T1 T2 T3 T4 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4, T5>(Int32, T0[], T1[], T2[], T3[], T4[], T5[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4, T5>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4, T5[] array5) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 T5[] array5 Type Parameters Name Description T0 T1 T2 T3 T4 T5 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6>(Int32, T0[], T1[], T2[], T3[], T4[], T5[], T6[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4, T5[] array5, T6[] array6) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 T5[] array5 T6[] array6 Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 | Improve this Doc View Source RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(Int32, T0[], T1[], T2[], T3[], T4[], T5[], T6[], T7[]) Declaration public void RemoveUnchecked<T0, T1, T2, T3, T4, T5, T6, T7>(int sparseIndexToRemove, T0[] array0, T1[] array1, T2[] array2, T3[] array3, T4[] array4, T5[] array5, T6[] array6, T7[] array7) Parameters Type Name Description System.Int32 sparseIndexToRemove T0[] array0 T1[] array1 T2[] array2 T3[] array3 T4[] array4 T5[] array5 T6[] array6 T7[] array7 Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, UInt64[]) Removes the associated sparse/dense index pair from active use. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, ulong[] versionArray) Parameters Type Name Description System.Int32 denseIndexToRemove The dense index associated with the sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. | Improve this Doc View Source RemoveUncheckedFromDenseIndex(Int32, UInt64[], out Int32) Removes the associated sparse/dense index pair from active use. Out parameter used to manage parallel data arrays. Declaration public void RemoveUncheckedFromDenseIndex(int denseIndexToRemove, ulong[] versionArray, out int indexToSwapFrom) Parameters Type Name Description System.Int32 denseIndexToRemove The sparse index to remove. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 indexToSwapFrom Set the data array value at this index to default after swapping with the data array value at denseIndexToRemove. | Improve this Doc View Source RemoveWithBoundsAndVersionChecks(ref Int32, UInt64, UInt64[], out Int32, out Int32) Removes the allocated entry corresponding to the sparse index. Declaration public bool RemoveWithBoundsAndVersionChecks(ref int sparseIndexToRemove, ulong version, ulong[] versionArray, out int dataIndexToSwapFrom, out int dataIndexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index corresponding to the entry to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against erroneously accessing freed indices currently in use with an outdated reference. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 dataIndexToSwapFrom Set the data array value at this index to default after swapping with the data array value at dataIndexToSwapTo. System.Int32 dataIndexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. Returns Type Description System.Boolean True if the entry was valid and thus removed. | Improve this Doc View Source RemoveWithBoundsCheck(ref Int32, out Int32, out Int32) Frees the allocated entry corresponding to the sparse index. WARNING: Will not protect against accidentally removing twice if the index in question was recycled between Remove calls. The sparse index corresponding to the entry to remove. Replace the data array value at this index with the data array value at indexToSwapFrom. Set the data array value at this index to default after swapping with the data array value at dataIndexToSwapTo. Declaration public bool RemoveWithBoundsCheck(ref int sparseIndexToRemove, out int dataIndexToSwapFrom, out int dataIndexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove System.Int32 dataIndexToSwapFrom System.Int32 dataIndexToSwapTo Returns Type Description System.Boolean True if the entry was valid and thus removed. | Improve this Doc View Source RemoveWithVersionCheck(Int32, UInt64, UInt64[], out Int32, out Int32) Removes the allocated entry corresponding to the sparse index. Indicates which dense indices were swapped as a result of removing the entry. Declaration public bool RemoveWithVersionCheck(int sparseIndexToRemove, ulong version, ulong[] versionArray, out int dataIndexToSwapFrom, out int dataIndexToSwapTo) Parameters Type Name Description System.Int32 sparseIndexToRemove The sparse index to remove. System.UInt64 version The version number of the int used to access the sparse index. Used to guard against accessing indices that have been removed and reused. System.UInt64 [] versionArray The array where version numbers to check against are stored. System.Int32 dataIndexToSwapFrom Set the data array value at this index to default after swapping with the data array value at dataIndexToSwapTo. System.Int32 dataIndexToSwapTo Replace the data array value at this index with the data array value at indexToSwapFrom. Returns Type Description System.Boolean Whether or not the remove attempt succeeded. | Improve this Doc View Source Reserve(Int32) Declaration public void Reserve(int numberToReserve) Parameters Type Name Description System.Int32 numberToReserve | Improve this Doc View Source Reserve(Int32, ref UInt64[]) Declaration public void Reserve(int numberToReserve, ref ulong[] versionArray) Parameters Type Name Description System.Int32 numberToReserve System.UInt64 [] versionArray"
  },
  "api/GDX.Config.html": {
    "href": "api/GDX.Config.html",
    "title": "Config | GDX",
    "keywords": "Class Config Project-wide configuration configurable for runtime override. Inheritance System.Object Config Namespace : GDX Syntax public static class Config Remarks Field order matters to the Config Generator. Fields | Improve this Doc View Source BuildInfo Should the BuildInfo file be written during builds? Declaration [OriginalValue(false)] public static bool BuildInfo Field Value Type Description System.Boolean | Improve this Doc View Source BuildInfoAssemblyDefinition Ensure that there is an assembly definition wrapping the generated content. Declaration [OriginalValue(true)] public static bool BuildInfoAssemblyDefinition Field Value Type Description System.Boolean | Improve this Doc View Source BuildInfoBuildChangelistArgument The argument key for the build's changelist to be passed to the BuildInfoGenerator. Declaration [OriginalValue(\"BUILD_CHANGELIST\")] public static string BuildInfoBuildChangelistArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildDescriptionArgument The argument key for the build description to be passed to the BuildInfoGenerator. Declaration [OriginalValue(\"BUILD_DESC\")] public static string BuildInfoBuildDescriptionArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildNumberArgument The argument key for the build number to be passed to the BuildInfoGenerator. Declaration [OriginalValue(\"BUILD\")] public static string BuildInfoBuildNumberArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildStreamArgument The argument key for the build's stream to be passed to the BuildInfoGenerator. Declaration [OriginalValue(\"BUILD_STREAM\")] public static string BuildInfoBuildStreamArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildTaskArgument The argument key for the build's task to be passed to the BuildInfoGenerator. Declaration [OriginalValue(\"BUILD_TASK\")] public static string BuildInfoBuildTaskArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoNamespace The namespace where the BuildInfo should be placed. Declaration [OriginalValue(\"Generated.Build\")] public static string BuildInfoNamespace Field Value Type Description System.String | Improve this Doc View Source BuildInfoOutputPath The path to output the BuildInfo file. Declaration [OriginalValue(\"Generated/Build/BuildInfo.cs\")] public static string BuildInfoOutputPath Field Value Type Description System.String | Improve this Doc View Source CommandLineParserArgumentPrefix What should be used to denote arguments in the command line? Declaration [OriginalValue(\"--\")] public static string CommandLineParserArgumentPrefix Field Value Type Description System.String | Improve this Doc View Source CommandLineParserArgumentSplit What should be used to split arguments from their values in the command line? Declaration [OriginalValue(\"=\")] public static string CommandLineParserArgumentSplit Field Value Type Description System.String | Improve this Doc View Source ConfigOutputPath The asset database relative path of the GDX config override file. Declaration [OriginalValue(\"Generated/GDX.generated.cs\")] public static string ConfigOutputPath Field Value Type Description System.String | Improve this Doc View Source EditorTaskDirectorSystem Should the Editor Task Director tick the Task Director. Declaration [OriginalValue(true)] public static bool EditorTaskDirectorSystem Field Value Type Description System.Boolean | Improve this Doc View Source EditorTaskDirectorSystemTickRate How often should the editor task director tick trigger the task director to tick? Declaration [OriginalValue(0.5)] public static double EditorTaskDirectorSystemTickRate Field Value Type Description System.Double | Improve this Doc View Source EnvironmentDeveloperConsole Should the GDX tools menu be added in the editor? Declaration [OriginalValue(true)] public static bool EnvironmentDeveloperConsole Field Value Type Description System.Boolean | Improve this Doc View Source EnvironmentScriptingDefineSymbol Should a GDX scripting define symbol be added to all target build groups. Declaration [OriginalValue(false)] public static bool EnvironmentScriptingDefineSymbol Field Value Type Description System.Boolean | Improve this Doc View Source EnvironmentToolsMenu Should the GDX tools menu be added in the editor? Declaration [OriginalValue(false)] public static bool EnvironmentToolsMenu Field Value Type Description System.Boolean | Improve this Doc View Source FormatVersion A reference number to what version the config was generated based off of. Declaration public const int FormatVersion = 2 Field Value Type Description System.Int32 | Improve this Doc View Source LocalizationDefaultCulture The language to set the default thread culture too. Declaration [OriginalValue(Localization.Language.English)] public static Localization.Language LocalizationDefaultCulture Field Value Type Description Localization.Language | Improve this Doc View Source LocalizationSetDefaultCulture Should the default thread culture be set? Declaration [OriginalValue(true)] public static bool LocalizationSetDefaultCulture Field Value Type Description System.Boolean | Improve this Doc View Source PlatformAutomationFolder The project relative path where automation should store its artifacts. Declaration [OriginalValue(\"GDX_Automation\")] public static string PlatformAutomationFolder Field Value Type Description System.String | Improve this Doc View Source PlatformCacheFolder The project relative path to use as a cache. Declaration [OriginalValue(\"GDX_Cache\")] public static string PlatformCacheFolder Field Value Type Description System.String | Improve this Doc View Source TaskDirectorSystem Should the Task Director System be added to the player loop during playmode. Declaration [OriginalValue(false)] public static bool TaskDirectorSystem Field Value Type Description System.Boolean | Improve this Doc View Source TaskDirectorSystemTickRate How often should the task director tick in playmode? Declaration [OriginalValue(0.1F)] public static float TaskDirectorSystemTickRate Field Value Type Description System.Single | Improve this Doc View Source UpdateProviderCheckForUpdates Should GDX check for updates at editor time? Declaration [OriginalValue(true)] public static bool UpdateProviderCheckForUpdates Field Value Type Description System.Boolean"
  },
  "api/GDX.Core.html": {
    "href": "api/GDX.Core.html",
    "title": "Core | GDX",
    "keywords": "Class Core Inheritance System.Object Core Namespace : GDX Syntax [Preserve] public static class Core Fields | Improve this Doc View Source EmptyObjectArray An empty System.Object array useful when things require it. Declaration public static readonly object[] EmptyObjectArray Field Value Type Description System.Object [] | Improve this Doc View Source MainThreadID The main threads identifier. Declaration public static int MainThreadID Field Value Type Description System.Int32 | Improve this Doc View Source OverrideClass Declaration public const string OverrideClass = \"CustomConfig\" Field Value Type Description System.String | Improve this Doc View Source OverrideMethod Declaration public const string OverrideMethod = \"Init\" Field Value Type Description System.String | Improve this Doc View Source PerformanceCategory Declaration public const string PerformanceCategory = \"GDX.Performance\" Field Value Type Description System.String | Improve this Doc View Source Random A pseudorandom number generated seeded with StartTicks . Declaration public static WELL1024a Random Field Value Type Description WELL1024a Remarks Useful for generic randomness where determinism is not required. | Improve this Doc View Source StartTicks The point in tick based time when the core was initialized. Declaration public static readonly long StartTicks Field Value Type Description System.Int64 | Improve this Doc View Source TestCategory Declaration public const string TestCategory = \"GDX.Tests\" Field Value Type Description System.String Methods | Improve this Doc View Source InitializeAtRuntime() Declaration [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)] public static void InitializeAtRuntime() | Improve this Doc View Source InitializeOnMainThread() Main-thread initializer. Declaration [InitializeOnLoadMethod] public static void InitializeOnMainThread() Remarks It might be important to call this function if you are using GDX related configurations inside of another decorated static method. An example of this sort of usage is in the TaskDirectorSystem ."
  },
  "api/GDX.DataTables.CellValues.AnimationCurveCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.AnimationCurveCellValue.html",
    "title": "AnimationCurveCellValue | GDX",
    "keywords": "Struct AnimationCurveCellValue A DataTableBase UnityEngine.AnimationCurve cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct AnimationCurveCellValue Constructors | Improve this Doc View Source AnimationCurveCellValue(DataTableBase, Int32, Int32) Creates an AnimationCurveCellValue . Declaration public AnimationCurveCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.AnimationCurve object referenced from the DataTableBase . Declaration public AnimationCurve Get() Returns Type Description UnityEngine.AnimationCurve An UnityEngine.AnimationCurve object. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public AnimationCurve GetUnsafe() Returns Type Description UnityEngine.AnimationCurve An UnityEngine.AnimationCurve object. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(AnimationCurve, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(AnimationCurve newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.AnimationCurve newValue An UnityEngine.AnimationCurve object. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.BoolCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.BoolCellValue.html",
    "title": "BoolCellValue | GDX",
    "keywords": "Struct BoolCellValue A DataTableBase System.Boolean cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct BoolCellValue Constructors | Improve this Doc View Source BoolCellValue(DataTableBase, Int32, Int32) Creates a BoolCellValue . Declaration public BoolCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Boolean value referenced from the DataTableBase . Declaration public bool Get() Returns Type Description System.Boolean A System.Boolean value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public bool GetUnsafe() Returns Type Description System.Boolean A System.Boolean value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Boolean, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(bool newValue, bool updateTable = true) Parameters Type Name Description System.Boolean newValue A System.Boolean value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.BoundsCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.BoundsCellValue.html",
    "title": "BoundsCellValue | GDX",
    "keywords": "Struct BoundsCellValue A DataTableBase UnityEngine.Bounds cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct BoundsCellValue Constructors | Improve this Doc View Source BoundsCellValue(DataTableBase, Int32, Int32) Creates a BoundsCellValue . Declaration public BoundsCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Bounds value referenced from the DataTableBase . Declaration public Bounds Get() Returns Type Description UnityEngine.Bounds A UnityEngine.Bounds struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Bounds GetUnsafe() Returns Type Description UnityEngine.Bounds A UnityEngine.Bounds struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Bounds, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Bounds newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Bounds newValue A UnityEngine.Bounds struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.BoundsIntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.BoundsIntCellValue.html",
    "title": "BoundsIntCellValue | GDX",
    "keywords": "Struct BoundsIntCellValue A DataTableBase UnityEngine.BoundsInt cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct BoundsIntCellValue Constructors | Improve this Doc View Source BoundsIntCellValue(DataTableBase, Int32, Int32) Creates a BoundsIntCellValue . Declaration public BoundsIntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.BoundsInt value referenced from the DataTableBase . Declaration public BoundsInt Get() Returns Type Description UnityEngine.BoundsInt A UnityEngine.BoundsInt struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public BoundsInt GetUnsafe() Returns Type Description UnityEngine.BoundsInt A UnityEngine.BoundsInt struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(BoundsInt, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(BoundsInt newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.BoundsInt newValue A UnityEngine.BoundsInt struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.ByteCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.ByteCellValue.html",
    "title": "ByteCellValue | GDX",
    "keywords": "Struct ByteCellValue A DataTableBase System.Byte cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct ByteCellValue Constructors | Improve this Doc View Source ByteCellValue(DataTableBase, Int32, Int32) Creates a ByteCellValue . Declaration public ByteCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Byte value referenced from the DataTableBase . Declaration public byte Get() Returns Type Description System.Byte A System.Byte value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public byte GetUnsafe() Returns Type Description System.Byte A System.Byte value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Byte, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(byte newValue, bool updateTable = true) Parameters Type Name Description System.Byte newValue A System.Byte value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.CharCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.CharCellValue.html",
    "title": "CharCellValue | GDX",
    "keywords": "Struct CharCellValue A DataTableBase System.Char cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct CharCellValue Constructors | Improve this Doc View Source CharCellValue(DataTableBase, Int32, Int32) Creates a CharCellValue . Declaration public CharCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Char value referenced from the DataTableBase . Declaration public char Get() Returns Type Description System.Char A System.Char value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public char GetUnsafe() Returns Type Description System.Char A System.Char value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Char, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(char newValue, bool updateTable = true) Parameters Type Name Description System.Char newValue A System.Char value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.ColorCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.ColorCellValue.html",
    "title": "ColorCellValue | GDX",
    "keywords": "Struct ColorCellValue A DataTableBase UnityEngine.Color cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct ColorCellValue Constructors | Improve this Doc View Source ColorCellValue(DataTableBase, Int32, Int32) Creates a ColorCellValue . Declaration public ColorCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Color value referenced from the DataTableBase . Declaration public Color Get() Returns Type Description UnityEngine.Color A UnityEngine.Color struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Color GetUnsafe() Returns Type Description UnityEngine.Color A UnityEngine.Color struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Color, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Color newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Color newValue A UnityEngine.Color struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.DoubleCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.DoubleCellValue.html",
    "title": "DoubleCellValue | GDX",
    "keywords": "Struct DoubleCellValue A DataTableBase System.Double cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct DoubleCellValue Constructors | Improve this Doc View Source DoubleCellValue(DataTableBase, Int32, Int32) Creates a DoubleCellValue . Declaration public DoubleCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Double value referenced from the DataTableBase . Declaration public double Get() Returns Type Description System.Double A System.Double value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public double GetUnsafe() Returns Type Description System.Double A System.Double value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Double, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(double newValue, bool updateTable = true) Parameters Type Name Description System.Double newValue A System.Double value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.EnumIntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.EnumIntCellValue.html",
    "title": "EnumIntCellValue | GDX",
    "keywords": "Struct EnumIntCellValue A DataTableBase System.Enum cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct EnumIntCellValue Constructors | Improve this Doc View Source EnumIntCellValue(DataTableBase, Int32, Int32) Creates a FloatCellValue . Declaration public EnumIntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Single value referenced from the DataTableBase . Declaration public int Get() Returns Type Description System.Int32 A System.Single value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetEnum() Get the System.Enum value of the DataTableBase cell's value. Declaration public Enum GetEnum() Returns Type Description System.Enum The transposed value. Remarks Values are stored as System.Int32 , there are some cases where having the System.Enum could be useful. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public int GetUnsafe() Returns Type Description System.Int32 A System.Int32 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Int32, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(int newValue, bool updateTable = true) Parameters Type Name Description System.Int32 newValue A System.Single value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.FloatCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.FloatCellValue.html",
    "title": "FloatCellValue | GDX",
    "keywords": "Struct FloatCellValue A DataTableBase System.Single cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct FloatCellValue Constructors | Improve this Doc View Source FloatCellValue(DataTableBase, Int32, Int32) Creates a FloatCellValue . Declaration public FloatCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Single value referenced from the DataTableBase . Declaration public float Get() Returns Type Description System.Single A System.Single value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public float GetUnsafe() Returns Type Description System.Single A System.Single value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Single, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(float newValue, bool updateTable = true) Parameters Type Name Description System.Single newValue A System.Single value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.GradientCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.GradientCellValue.html",
    "title": "GradientCellValue | GDX",
    "keywords": "Struct GradientCellValue A DataTableBase UnityEngine.Gradient cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct GradientCellValue Constructors | Improve this Doc View Source GradientCellValue(DataTableBase, Int32, Int32) Creates a GradientCellValue . Declaration public GradientCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Gradient object referenced from the DataTableBase . Declaration public Gradient Get() Returns Type Description UnityEngine.Gradient A UnityEngine.Gradient object. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Gradient GetUnsafe() Returns Type Description UnityEngine.Gradient A UnityEngine.Gradient object. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Gradient, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Gradient newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Gradient newValue A UnityEngine.Gradient object. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.Hash128CellValue.html": {
    "href": "api/GDX.DataTables.CellValues.Hash128CellValue.html",
    "title": "Hash128CellValue | GDX",
    "keywords": "Struct Hash128CellValue A DataTableBase UnityEngine.Hash128 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct Hash128CellValue Constructors | Improve this Doc View Source Hash128CellValue(DataTableBase, Int32, Int32) Creates a Hash128CellValue . Declaration public Hash128CellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Hash128 value referenced from the DataTableBase . Declaration public Hash128 Get() Returns Type Description UnityEngine.Hash128 A UnityEngine.Hash128 struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Hash128 GetUnsafe() Returns Type Description UnityEngine.Hash128 A UnityEngine.Hash128 struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Hash128, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Hash128 newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Hash128 newValue A UnityEngine.Hash128 struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.html": {
    "href": "api/GDX.DataTables.CellValues.html",
    "title": "Namespace GDX.DataTables.CellValues | GDX",
    "keywords": "Namespace GDX.DataTables.CellValues Structs AnimationCurveCellValue A DataTableBase UnityEngine.AnimationCurve cell reference. BoolCellValue A DataTableBase System.Boolean cell reference. BoundsCellValue A DataTableBase UnityEngine.Bounds cell reference. BoundsIntCellValue A DataTableBase UnityEngine.BoundsInt cell reference. ByteCellValue A DataTableBase System.Byte cell reference. CharCellValue A DataTableBase System.Char cell reference. ColorCellValue A DataTableBase UnityEngine.Color cell reference. DoubleCellValue A DataTableBase System.Double cell reference. EnumIntCellValue A DataTableBase System.Enum cell reference. FloatCellValue A DataTableBase System.Single cell reference. GradientCellValue A DataTableBase UnityEngine.Gradient cell reference. Hash128CellValue A DataTableBase UnityEngine.Hash128 cell reference. IntCellValue A DataTableBase System.Int32 cell reference. LayerMaskCellValue A DataTableBase UnityEngine.LayerMask cell reference. LongCellValue A DataTableBase System.Int64 cell reference. ObjectCellValue A DataTableBase UnityEngine.Object cell reference. QuaternionCellValue A DataTableBase UnityEngine.Quaternion cell reference. RectCellValue A DataTableBase UnityEngine.Rect cell reference. RectIntCellValue A DataTableBase UnityEngine.RectInt cell reference. SByteCellValue A DataTableBase System.SByte cell reference. ShortCellValue A DataTableBase System.Int16 cell reference. StringCellValue A DataTableBase System.String cell reference. UIntCellValue A DataTableBase System.UInt32 cell reference. ULongCellValue A DataTableBase System.UInt64 cell reference. UShortCellValue A DataTableBase System.UInt16 cell reference. Vector2CellValue A DataTableBase UnityEngine.Vector2 cell reference. Vector2IntCellValue A DataTableBase UnityEngine.Vector2Int cell reference. Vector3CellValue A DataTableBase UnityEngine.Vector3 cell reference. Vector3IntCellValue A DataTableBase UnityEngine.Vector3Int cell reference. Vector4CellValue A DataTableBase UnityEngine.Vector4 cell reference."
  },
  "api/GDX.DataTables.CellValues.IntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.IntCellValue.html",
    "title": "IntCellValue | GDX",
    "keywords": "Struct IntCellValue A DataTableBase System.Int32 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct IntCellValue Constructors | Improve this Doc View Source IntCellValue(DataTableBase, Int32, Int32) Creates an IntCellValue . Declaration public IntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Int32 value referenced from the DataTableBase . Declaration public int Get() Returns Type Description System.Int32 An System.Int32 value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public int GetUnsafe() Returns Type Description System.Int32 An System.Int32 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Int32, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(int newValue, bool updateTable = true) Parameters Type Name Description System.Int32 newValue An System.Int32 value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.LayerMaskCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.LayerMaskCellValue.html",
    "title": "LayerMaskCellValue | GDX",
    "keywords": "Struct LayerMaskCellValue A DataTableBase UnityEngine.LayerMask cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct LayerMaskCellValue Constructors | Improve this Doc View Source LayerMaskCellValue(DataTableBase, Int32, Int32) Creates a LayerMaskCellValue . Declaration public LayerMaskCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.LayerMask value referenced from the DataTableBase . Declaration public LayerMask Get() Returns Type Description UnityEngine.LayerMask A UnityEngine.LayerMask struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public LayerMask GetUnsafe() Returns Type Description UnityEngine.LayerMask A UnityEngine.LayerMask struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(LayerMask, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(LayerMask newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.LayerMask newValue A UnityEngine.LayerMask struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.LongCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.LongCellValue.html",
    "title": "LongCellValue | GDX",
    "keywords": "Struct LongCellValue A DataTableBase System.Int64 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct LongCellValue Constructors | Improve this Doc View Source LongCellValue(DataTableBase, Int32, Int32) Creates a LongCellValue . Declaration public LongCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Int64 value referenced from the DataTableBase . Declaration public long Get() Returns Type Description System.Int64 A System.Int64 value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public long GetUnsafe() Returns Type Description System.Int64 A System.Int64 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Int64, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(long newValue, bool updateTable = true) Parameters Type Name Description System.Int64 newValue A System.Int64 value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.ObjectCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.ObjectCellValue.html",
    "title": "ObjectCellValue | GDX",
    "keywords": "Struct ObjectCellValue A DataTableBase UnityEngine.Object cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct ObjectCellValue Constructors | Improve this Doc View Source ObjectCellValue(DataTableBase, Int32, Int32) Creates a ObjectCellValue . Declaration public ObjectCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Object referenced from the DataTableBase . Declaration public Object Get() Returns Type Description UnityEngine.Object An UnityEngine.Object . Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Object GetUnsafe() Returns Type Description UnityEngine.Object An UnityEngine.Object . Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Object, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Object newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Object newValue An UnityEngine.Object . System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.QuaternionCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.QuaternionCellValue.html",
    "title": "QuaternionCellValue | GDX",
    "keywords": "Struct QuaternionCellValue A DataTableBase UnityEngine.Quaternion cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct QuaternionCellValue Constructors | Improve this Doc View Source QuaternionCellValue(DataTableBase, Int32, Int32) Creates a QuaternionCellValue . Declaration public QuaternionCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Quaternion value referenced from the DataTableBase . Declaration public Quaternion Get() Returns Type Description UnityEngine.Quaternion A UnityEngine.Quaternion struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Quaternion GetUnsafe() Returns Type Description UnityEngine.Quaternion A UnityEngine.Quaternion struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Quaternion, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Quaternion newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Quaternion newValue A UnityEngine.Quaternion struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version. | Improve this Doc View Source Set(Vector3, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector3 eulerAngles, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector3 eulerAngles A UnityEngine.Vector3 struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version. | Improve this Doc View Source Set(Vector4, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector4 newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector4 newValue A UnityEngine.Vector4 struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.RectCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.RectCellValue.html",
    "title": "RectCellValue | GDX",
    "keywords": "Struct RectCellValue A DataTableBase UnityEngine.Rect cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct RectCellValue Constructors | Improve this Doc View Source RectCellValue(DataTableBase, Int32, Int32) Creates a RectCellValue . Declaration public RectCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Rect value referenced from the DataTableBase . Declaration public Rect Get() Returns Type Description UnityEngine.Rect A UnityEngine.Rect struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Rect GetUnsafe() Returns Type Description UnityEngine.Rect A UnityEngine.Rect struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Rect, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Rect newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Rect newValue A UnityEngine.Rect struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.RectIntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.RectIntCellValue.html",
    "title": "RectIntCellValue | GDX",
    "keywords": "Struct RectIntCellValue A DataTableBase UnityEngine.RectInt cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct RectIntCellValue Constructors | Improve this Doc View Source RectIntCellValue(DataTableBase, Int32, Int32) Creates a RectIntCellValue . Declaration public RectIntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.RectInt value referenced from the DataTableBase . Declaration public RectInt Get() Returns Type Description UnityEngine.RectInt A UnityEngine.RectInt struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public RectInt GetUnsafe() Returns Type Description UnityEngine.RectInt A UnityEngine.RectInt struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(RectInt, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(RectInt newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.RectInt newValue A UnityEngine.RectInt struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.SByteCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.SByteCellValue.html",
    "title": "SByteCellValue | GDX",
    "keywords": "Struct SByteCellValue A DataTableBase System.SByte cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct SByteCellValue Constructors | Improve this Doc View Source SByteCellValue(DataTableBase, Int32, Int32) Creates a SByteCellValue . Declaration public SByteCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.SByte value referenced from the DataTableBase . Declaration public sbyte Get() Returns Type Description System.SByte A System.SByte value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public sbyte GetUnsafe() Returns Type Description System.SByte A System.SByte value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(SByte, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(sbyte newValue, bool updateTable = true) Parameters Type Name Description System.SByte newValue A System.SByte value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.ShortCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.ShortCellValue.html",
    "title": "ShortCellValue | GDX",
    "keywords": "Struct ShortCellValue A DataTableBase System.Int16 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct ShortCellValue Constructors | Improve this Doc View Source ShortCellValue(DataTableBase, Int32, Int32) Creates a ShortCellValue . Declaration public ShortCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.Int16 value referenced from the DataTableBase . Declaration public short Get() Returns Type Description System.Int16 A System.Int16 value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public short GetUnsafe() Returns Type Description System.Int16 A System.Int16 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Int16, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(short newValue, bool updateTable = true) Parameters Type Name Description System.Int16 newValue A System.Int16 value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.StringCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.StringCellValue.html",
    "title": "StringCellValue | GDX",
    "keywords": "Struct StringCellValue A DataTableBase System.String cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct StringCellValue Constructors | Improve this Doc View Source StringCellValue(DataTableBase, Int32, Int32) Creates a StringCellValue . Declaration public StringCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.String value referenced from the DataTableBase . Declaration public string Get() Returns Type Description System.String A System.String value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public string GetUnsafe() Returns Type Description System.String A System.String value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(String, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(string newValue, bool updateTable = true) Parameters Type Name Description System.String newValue A System.String value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.UIntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.UIntCellValue.html",
    "title": "UIntCellValue | GDX",
    "keywords": "Struct UIntCellValue A DataTableBase System.UInt32 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct UIntCellValue Constructors | Improve this Doc View Source UIntCellValue(DataTableBase, Int32, Int32) Creates a UIntCellValue . Declaration public UIntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.UInt32 value referenced from the DataTableBase . Declaration public uint Get() Returns Type Description System.UInt32 A System.UInt32 value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public uint GetUnsafe() Returns Type Description System.UInt32 A System.UInt32 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(UInt32, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(uint newValue, bool updateTable = true) Parameters Type Name Description System.UInt32 newValue A System.UInt32 value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.ULongCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.ULongCellValue.html",
    "title": "ULongCellValue | GDX",
    "keywords": "Struct ULongCellValue A DataTableBase System.UInt64 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct ULongCellValue Constructors | Improve this Doc View Source ULongCellValue(DataTableBase, Int32, Int32) Creates a ULongCellValue . Declaration public ULongCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.UInt64 value referenced from the DataTableBase . Declaration public ulong Get() Returns Type Description System.UInt64 A System.UInt64 value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public ulong GetUnsafe() Returns Type Description System.UInt64 A System.UInt64 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(UInt64, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(ulong newValue, bool updateTable = true) Parameters Type Name Description System.UInt64 newValue A System.UInt64 value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.UShortCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.UShortCellValue.html",
    "title": "UShortCellValue | GDX",
    "keywords": "Struct UShortCellValue A DataTableBase System.UInt16 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct UShortCellValue Constructors | Improve this Doc View Source UShortCellValue(DataTableBase, Int32, Int32) Creates a UShortCellValue . Declaration public UShortCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the System.UInt16 value referenced from the DataTableBase . Declaration public ushort Get() Returns Type Description System.UInt16 A System.UInt16 value. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public ushort GetUnsafe() Returns Type Description System.UInt16 A System.UInt16 value. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(UInt16, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(ushort newValue, bool updateTable = true) Parameters Type Name Description System.UInt16 newValue A System.UInt16 value. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.Vector2CellValue.html": {
    "href": "api/GDX.DataTables.CellValues.Vector2CellValue.html",
    "title": "Vector2CellValue | GDX",
    "keywords": "Struct Vector2CellValue A DataTableBase UnityEngine.Vector2 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct Vector2CellValue Constructors | Improve this Doc View Source Vector2CellValue(DataTableBase, Int32, Int32) Creates a Vector2CellValue . Declaration public Vector2CellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Vector2 value referenced from the DataTableBase . Declaration public Vector2 Get() Returns Type Description UnityEngine.Vector2 A UnityEngine.Vector2 struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Vector2 GetUnsafe() Returns Type Description UnityEngine.Vector2 A UnityEngine.Vector2 struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Vector2, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector2 newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector2 newValue A UnityEngine.Vector2 struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.Vector2IntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.Vector2IntCellValue.html",
    "title": "Vector2IntCellValue | GDX",
    "keywords": "Struct Vector2IntCellValue A DataTableBase UnityEngine.Vector2Int cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct Vector2IntCellValue Constructors | Improve this Doc View Source Vector2IntCellValue(DataTableBase, Int32, Int32) Creates a Vector2IntCellValue . Declaration public Vector2IntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Vector2Int value referenced from the DataTableBase . Declaration public Vector2Int Get() Returns Type Description UnityEngine.Vector2Int A UnityEngine.Vector2Int struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Vector2Int GetUnsafe() Returns Type Description UnityEngine.Vector2Int A UnityEngine.Vector2Int struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Vector2Int, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector2Int newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector2Int newValue A UnityEngine.Vector2Int struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.Vector3CellValue.html": {
    "href": "api/GDX.DataTables.CellValues.Vector3CellValue.html",
    "title": "Vector3CellValue | GDX",
    "keywords": "Struct Vector3CellValue A DataTableBase UnityEngine.Vector3 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct Vector3CellValue Constructors | Improve this Doc View Source Vector3CellValue(DataTableBase, Int32, Int32) Creates a Vector3CellValue . Declaration public Vector3CellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Vector3 value referenced from the DataTableBase . Declaration public Vector3 Get() Returns Type Description UnityEngine.Vector3 A UnityEngine.Vector3 struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Vector3 GetUnsafe() Returns Type Description UnityEngine.Vector3 A UnityEngine.Vector3 struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Vector3, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector3 newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector3 newValue A UnityEngine.Vector3 struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.Vector3IntCellValue.html": {
    "href": "api/GDX.DataTables.CellValues.Vector3IntCellValue.html",
    "title": "Vector3IntCellValue | GDX",
    "keywords": "Struct Vector3IntCellValue A DataTableBase UnityEngine.Vector3Int cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct Vector3IntCellValue Constructors | Improve this Doc View Source Vector3IntCellValue(DataTableBase, Int32, Int32) Creates a Vector3IntCellValue . Declaration public Vector3IntCellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Vector3Int value referenced from the DataTableBase . Declaration public Vector3Int Get() Returns Type Description UnityEngine.Vector3Int A UnityEngine.Vector3Int struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Vector3Int GetUnsafe() Returns Type Description UnityEngine.Vector3Int A UnityEngine.Vector3Int struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Vector3Int, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector3Int newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector3Int newValue A UnityEngine.Vector3Int struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.CellValues.Vector4CellValue.html": {
    "href": "api/GDX.DataTables.CellValues.Vector4CellValue.html",
    "title": "Vector4CellValue | GDX",
    "keywords": "Struct Vector4CellValue A DataTableBase UnityEngine.Vector4 cell reference. Namespace : GDX.DataTables.CellValues Syntax [Serializable] public struct Vector4CellValue Constructors | Improve this Doc View Source Vector4CellValue(DataTableBase, Int32, Int32) Creates a Vector4CellValue . Declaration public Vector4CellValue(DataTableBase dataTable, int rowIdentifier, int columnIdentifier) Parameters Type Name Description DataTableBase dataTable The referenced DataTableBase . System.Int32 rowIdentifier The unique row identifier to use when polling the dataTable . System.Int32 columnIdentifier The unique column identifier to use when polling the dataTable . Fields | Improve this Doc View Source ColumnIdentifier The unique column identifier used when accessing the DataTable . Declaration public int ColumnIdentifier Field Value Type Description System.Int32 | Improve this Doc View Source DataTable The DataTableBase polled for cell data. Declaration public DataTableBase DataTable Field Value Type Description DataTableBase | Improve this Doc View Source RowIdentifier The unique row identifier used when accessing the DataTable . Declaration public int RowIdentifier Field Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Get the UnityEngine.Vector4 value referenced from the DataTableBase . Declaration public Vector4 Get() Returns Type Description UnityEngine.Vector4 A UnityEngine.Vector4 struct. Remarks This will evaluate if the version of the table matches the internally cached version, and will update the cached reference if necessary. | Improve this Doc View Source GetDataVersion() Get the internally cached version of the DataTableBase 's data version. Declaration public ulong GetDataVersion() Returns Type Description System.UInt64 A version number. | Improve this Doc View Source GetSupportedType() Get the Serializable.SerializableTypes which this struct supports. Declaration public static Serializable.SerializableTypes GetSupportedType() Returns Type Description Serializable.SerializableTypes A Serializable.SerializableTypes . | Improve this Doc View Source GetUnsafe() Get the cached value without a version check. Declaration public Vector4 GetUnsafe() Returns Type Description UnityEngine.Vector4 A UnityEngine.Vector4 struct. Remarks This can respond with a default value if a Get() call has not been made yet to populate the internally cached value. | Improve this Doc View Source Set(Vector4, Boolean) Sets the cached value of the struct and by default, updates the associated DataTableBase . Declaration public void Set(Vector4 newValue, bool updateTable = true) Parameters Type Name Description UnityEngine.Vector4 newValue A UnityEngine.Vector4 struct. System.Boolean updateTable Should the value be pushed back to the referenced DataTableBase cell? Remarks Updating the DataTableBase will update the cached table version."
  },
  "api/GDX.DataTables.ColumnDescription.html": {
    "href": "api/GDX.DataTables.ColumnDescription.html",
    "title": "ColumnDescription | GDX",
    "keywords": "Struct ColumnDescription A description of a column in a DataTableBase . Namespace : GDX.DataTables Syntax public struct ColumnDescription Fields | Improve this Doc View Source Identifier The unique identifier for the column. Declaration public int Identifier Field Value Type Description System.Int32 | Improve this Doc View Source Name The given name of the column. Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source SortOrder The current sort order. Declaration public int SortOrder Field Value Type Description System.Int32 | Improve this Doc View Source Type The type of data stored in the column. Declaration public Serializable.SerializableTypes Type Field Value Type Description Serializable.SerializableTypes Methods | Improve this Doc View Source ToString() Generates a custom string based on the column. Declaration public override string ToString() Returns Type Description System.String A user-friendly string representation of the ColumnDescription . Overrides System.ValueType.ToString()"
  },
  "api/GDX.DataTables.DataBinding.DataBindingProvider.html": {
    "href": "api/GDX.DataTables.DataBinding.DataBindingProvider.html",
    "title": "DataBindingProvider | GDX",
    "keywords": "Class DataBindingProvider Data translation functionality for DataTableBase . Inheritance System.Object DataBindingProvider Namespace : GDX.DataTables.DataBinding Syntax public static class DataBindingProvider Methods | Improve this Doc View Source Export(DataTableBase, String, Boolean) Export the content of a given DataTableBase to a target format. Declaration public static void Export(DataTableBase dataTable, string uri, bool jsonFallback = true) Parameters Type Name Description DataTableBase dataTable The DataTableBase System.String uri The output path/uri where to send the data, absolute if on disk System.Boolean jsonFallback If the format cannot be determined by the uri, fallback to JSON. | Improve this Doc View Source GetFormatFromFile(String) Declaration public static FormatBase GetFormatFromFile(string filePath) Parameters Type Name Description System.String filePath Returns Type Description FormatBase | Improve this Doc View Source GetFormatFromUri(String) Declaration public static FormatBase GetFormatFromUri(string uri) Parameters Type Name Description System.String uri Returns Type Description FormatBase | Improve this Doc View Source GetFormats() Declaration public static FormatBase[] GetFormats() Returns Type Description FormatBase [] | Improve this Doc View Source GetImportDialogExtensions() Declaration public static string[] GetImportDialogExtensions() Returns Type Description System.String [] | Improve this Doc View Source Import(DataTableBase, String, Boolean, Boolean) Update the DataTableBase with the data found in the given file. Declaration public static bool Import(DataTableBase dataTable, string uri, bool removeRowIfNotFound = true, bool jsonFallback = true) Parameters Type Name Description DataTableBase dataTable The target DataTableBase to apply changes to. System.String uri The resource path to load data from, absolute if on disk. System.Boolean removeRowIfNotFound Should rows that are not found in the file content be removed? System.Boolean jsonFallback If the importer is unable to determine the format based on the URI, fallback to assuming its JSON. Returns Type Description System.Boolean Was the import successful? Remarks It's important that the Row Identifier column remains unchanged, no structural changes have occured, and no changes of column order were made. Object references will be maintained during update, only values will be updated. | Improve this Doc View Source RegisterFormat(FormatBase) Declaration public static void RegisterFormat(FormatBase format) Parameters Type Name Description FormatBase format | Improve this Doc View Source UnregisterFormat(FormatBase) Declaration public static void UnregisterFormat(FormatBase format) Parameters Type Name Description FormatBase format"
  },
  "api/GDX.DataTables.DataBinding.FormatBase.html": {
    "href": "api/GDX.DataTables.DataBinding.FormatBase.html",
    "title": "FormatBase | GDX",
    "keywords": "Class FormatBase A custom binding to be used with a DataTableBase . Inheritance System.Object FormatBase Namespace : GDX.DataTables.DataBinding Syntax public abstract class FormatBase Methods | Improve this Doc View Source GetBindingTimestamp(String) Get the latest timestamp for the binding format. Declaration public abstract DateTime GetBindingTimestamp(string uri) Parameters Type Name Description System.String uri The binding Uri. Returns Type Description System.DateTime A UTC timestamp. | Improve this Doc View Source GetFilePreferredExtension() Get the preferred file extension for this format Declaration public abstract string GetFilePreferredExtension() Returns Type Description System.String An extension, with period. Remarks If an on-disk format. | Improve this Doc View Source GetFriendlyName() Get the user-friendly name of the format. Declaration public abstract string GetFriendlyName() Returns Type Description System.String Returns the name of the format. | Improve this Doc View Source GetImportDialogExtensions() Get the information needed for a system level dialog to populate with this format. Declaration public abstract string[] GetImportDialogExtensions() Returns Type Description System.String [] | Improve this Doc View Source IsFileHeader(String) Does the file header match what we expect it to be for this format? Declaration public abstract bool IsFileHeader(string headerContent) Parameters Type Name Description System.String headerContent A small read section of the file used to evaluate the header content. Returns Type Description System.Boolean true/false if it is the expected header. Remarks This should be overloaded as always false for remote formats (think Google Sheets). | Improve this Doc View Source IsOnDiskFormat() Is this format expected to be on a local disk? Declaration public abstract bool IsOnDiskFormat() Returns Type Description System.Boolean true/false | Improve this Doc View Source IsUri(String) Does the binding Uri match what we would expect for this platform? Declaration public abstract bool IsUri(string uri) Parameters Type Name Description System.String uri The binding Uri. Returns Type Description System.Boolean true/false if it matches as expected. | Improve this Doc View Source Pull(String, UInt64, Int32) Get an updated data set to apply to the DataTableBase . Declaration public abstract SerializableTable Pull(string uri, ulong currentDataVersion, int currentStructuralVersion) Parameters Type Name Description System.String uri The URI to access data from, an absolute path if on local disk. System.UInt64 currentDataVersion The data version known to Unity. System.Int32 currentStructuralVersion The structural version known to Unity. Returns Type Description SerializableTable A built out representation of the data. | Improve this Doc View Source Push(String, SerializableTable) Pushes a set of data onto the binding. Declaration public abstract bool Push(string uri, SerializableTable serializableTable) Parameters Type Name Description System.String uri The URI to send data to, an absolute path if on local disk. SerializableTable serializableTable The full data set. Returns Type Description System.Boolean true/false was successful."
  },
  "api/GDX.DataTables.DataBinding.html": {
    "href": "api/GDX.DataTables.DataBinding.html",
    "title": "Namespace GDX.DataTables.DataBinding | GDX",
    "keywords": "Namespace GDX.DataTables.DataBinding Classes DataBindingProvider Data translation functionality for DataTableBase . FormatBase A custom binding to be used with a DataTableBase . SerializableRow A serializable representation of a row of data from a DataTableBase . SerializableTable A serializable object used during import and export of DataTableBase based data."
  },
  "api/GDX.DataTables.DataBinding.SerializableRow.html": {
    "href": "api/GDX.DataTables.DataBinding.SerializableRow.html",
    "title": "SerializableRow | GDX",
    "keywords": "Class SerializableRow A serializable representation of a row of data from a DataTableBase . Inheritance System.Object SerializableRow Namespace : GDX.DataTables.DataBinding Syntax [Serializable] public class SerializableRow Constructors | Improve this Doc View Source SerializableRow(Int32) Create a new serializable row. Declaration public SerializableRow(int columns) Parameters Type Name Description System.Int32 columns The number of columns in that row. Fields | Improve this Doc View Source Data The row's data. Declaration public string[] Data Field Value Type Description System.String [] | Improve this Doc View Source Identifier The unique row identifier. Declaration public int Identifier Field Value Type Description System.Int32 | Improve this Doc View Source Name The row's user-friendly name. Declaration public string Name Field Value Type Description System.String"
  },
  "api/GDX.DataTables.DataBinding.SerializableTable.html": {
    "href": "api/GDX.DataTables.DataBinding.SerializableTable.html",
    "title": "SerializableTable | GDX",
    "keywords": "Class SerializableTable A serializable object used during import and export of DataTableBase based data. Inheritance System.Object SerializableTable Namespace : GDX.DataTables.DataBinding Syntax [Serializable] public class SerializableTable Constructors | Improve this Doc View Source SerializableTable() Creates a new empty SerializableTable . Declaration public SerializableTable() | Improve this Doc View Source SerializableTable(DataTableBase) Creates a new SerializableTable from a DataTableBase . Declaration public SerializableTable(DataTableBase dataTable) Parameters Type Name Description DataTableBase dataTable Populate the data set from this target. Fields | Improve this Doc View Source DataVersion The version of the data at the point of export. Declaration public ulong DataVersion Field Value Type Description System.UInt64 | Improve this Doc View Source Headers The column names. Declaration public string[] Headers Field Value Type Description System.String [] | Improve this Doc View Source Rows The row data. Declaration public SerializableRow[] Rows Field Value Type Description SerializableRow [] | Improve this Doc View Source StructureVersion The structural version of the data at the point of export. Declaration public int StructureVersion Field Value Type Description System.Int32 | Improve this Doc View Source Types The column types. Declaration public string[] Types Field Value Type Description System.String [] Methods | Improve this Doc View Source Update(DataTableBase, Boolean) Update the target dataTable based on the data found in the SerializableTable Declaration public bool Update(DataTableBase dataTable, bool removeRowIfNotFound = true) Parameters Type Name Description DataTableBase dataTable The DataTableBase to update. System.Boolean removeRowIfNotFound Should rows not found in the SerializableTable be removed from the DataTableBase . Returns Type Description System.Boolean Was this operation successful?"
  },
  "api/GDX.DataTables.DataTableBase.html": {
    "href": "api/GDX.DataTables.DataTableBase.html",
    "title": "DataTableBase | GDX",
    "keywords": "Class DataTableBase The base framework of a UnityEngine.ScriptableObject backed DataTable. Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject DataTableBase StableDataTable Namespace : GDX.DataTables Syntax public abstract class DataTableBase : ScriptableObject Remarks Similar to UE's https://docs.unrealengine.com/5.2/en-US/data-driven-gameplay-elements-in-unreal-engine/ . Methods | Improve this Doc View Source AddColumn(Serializable.SerializableTypes, String, Int32) Add a column. Declaration public abstract int AddColumn(Serializable.SerializableTypes columnType, string columnName, int insertAtColumnIdentifier = -1) Parameters Type Name Description Serializable.SerializableTypes columnType The type of data being stored in the column. System.String columnName The user-friendly name of the column. System.Int32 insertAtColumnIdentifier The column identifier to insert the column at, otherwise -1 will place the column at the end. Returns Type Description System.Int32 The unique column identifier of the created column. | Improve this Doc View Source AddRow(String, Int32) Add a row Declaration public abstract int AddRow(string rowName = null, int insertAtRowIdentifier = -1) Parameters Type Name Description System.String rowName The user-friendly name of the column. System.Int32 insertAtRowIdentifier The row identifier to insert the row at, otherwise -1 will place the row at the end. Returns Type Description System.Int32 The unique row identifier of the created row. | Improve this Doc View Source GetAllColumnDescriptions() Get all columns' ColumnDescription ; ordered. Declaration public abstract ColumnDescription[] GetAllColumnDescriptions() Returns Type Description ColumnDescription [] An array of ColumnDescription s. | Improve this Doc View Source GetAllRowDescriptions() Get all rows' RowDescription ; ordered. Declaration public abstract RowDescription[] GetAllRowDescriptions() Returns Type Description RowDescription [] An array of RowDescription s. | Improve this Doc View Source GetAnimationCurve(Int32, Int32) Get a UnityEngine.AnimationCurve object from the specified cell. Declaration public abstract AnimationCurve GetAnimationCurve(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.AnimationCurve A UnityEngine.AnimationCurve object. | Improve this Doc View Source GetBool(Int32, Int32) Get a System.Boolean value from the specified cell. Declaration public abstract bool GetBool(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Boolean A System.Boolean value. | Improve this Doc View Source GetBounds(Int32, Int32) Get a UnityEngine.Bounds struct from the specified cell. Declaration public abstract Bounds GetBounds(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Bounds A UnityEngine.Bounds struct. | Improve this Doc View Source GetBoundsInt(Int32, Int32) Get a UnityEngine.BoundsInt struct from the specified cell. Declaration public abstract BoundsInt GetBoundsInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.BoundsInt A UnityEngine.BoundsInt struct. | Improve this Doc View Source GetByte(Int32, Int32) Get a System.Byte value from the specified cell. Declaration public abstract byte GetByte(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Byte A System.Byte value. | Improve this Doc View Source GetChar(Int32, Int32) Get a System.Char value from the specified cell. Declaration public abstract char GetChar(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Char A System.Char value. | Improve this Doc View Source GetColor(Int32, Int32) Get a UnityEngine.Color struct from the specified cell. Declaration public abstract Color GetColor(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Color A UnityEngine.Color struct. | Improve this Doc View Source GetColumnCount() Returns the number of columns in the . Declaration public abstract int GetColumnCount() Returns Type Description System.Int32 A count of columns. | Improve this Doc View Source GetColumnDescription(Int32) Get a ColumnDescription describing a column in the specified position. Declaration public abstract ColumnDescription GetColumnDescription(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description ColumnDescription A ColumnDescription for the target column. | Improve this Doc View Source GetColumnDescriptionByOrder(Int32) Get a ColumnDescription describing a column in the specified position. Declaration public abstract ColumnDescription GetColumnDescriptionByOrder(int order) Parameters Type Name Description System.Int32 order The ordered index/position. Returns Type Description ColumnDescription A ColumnDescription for the target column. | Improve this Doc View Source GetColumnName(Int32) Get the user-friendly name of the identified column. Declaration public abstract string GetColumnName(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.String A user-friendly name. | Improve this Doc View Source GetColumnOrder(Int32) Set the specified column's order. Declaration public abstract int GetColumnOrder(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int32 The column's order/position. | Improve this Doc View Source GetDataVersion() Get the internally stored data version for the DataTableBase . Declaration public abstract ulong GetDataVersion() Returns Type Description System.UInt64 Remarks Every time something changes in the table, be it structural or data, this value is changed. This allows for checks of if cached values need to be re-polled. | Improve this Doc View Source GetDouble(Int32, Int32) Get a System.Double value from the specified cell. Declaration public abstract double GetDouble(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Double A System.Double value. | Improve this Doc View Source GetEnumInt(Int32, Int32) Get am System.Int32 value of an enumeration from the specified cell. Declaration public abstract int GetEnumInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int32 An integer value for the enumeration | Improve this Doc View Source GetFloat(Int32, Int32) Get a System.Single value from the specified cell. Declaration public abstract float GetFloat(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Single A System.Single value. | Improve this Doc View Source GetGradient(Int32, Int32) Get a UnityEngine.Gradient object from the specified cell. Declaration public abstract Gradient GetGradient(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Gradient A UnityEngine.Gradient object. | Improve this Doc View Source GetHash128(Int32, Int32) Get a UnityEngine.Hash128 struct from the specified cell. Declaration public abstract Hash128 GetHash128(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Hash128 A UnityEngine.Hash128 struct. | Improve this Doc View Source GetInt(Int32, Int32) Get a System.Int32 value from the specified cell. Declaration public abstract int GetInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int32 A System.Int32 value. | Improve this Doc View Source GetLayerMask(Int32, Int32) Get a UnityEngine.LayerMask struct from the specified cell. Declaration public abstract LayerMask GetLayerMask(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.LayerMask A UnityEngine.LayerMask struct. | Improve this Doc View Source GetLong(Int32, Int32) Get a System.Int64 value from the specified cell. Declaration public abstract long GetLong(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int64 A System.Int64 value. | Improve this Doc View Source GetMetaData() Gets/creates the metadata sub-object used to store author-time information with the data table. Declaration public DataTableMetaData GetMetaData() Returns Type Description DataTableMetaData The associated metadata for the DataTableBase . Remarks This is only available in the editor. It will always return null at runtime. | Improve this Doc View Source GetObject(Int32, Int32) Get an UnityEngine.Object object from the specified cell. Declaration public abstract Object GetObject(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Object An UnityEngine.Object . | Improve this Doc View Source GetQuaternion(Int32, Int32) Get a UnityEngine.Quaternion struct from the specified cell. Declaration public abstract Quaternion GetQuaternion(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Quaternion A UnityEngine.Quaternion struct. | Improve this Doc View Source GetRect(Int32, Int32) Get a UnityEngine.Rect struct from the specified cell. Declaration public abstract Rect GetRect(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Rect A UnityEngine.Rect struct. | Improve this Doc View Source GetRectInt(Int32, Int32) Get a UnityEngine.RectInt struct from the specified cell. Declaration public abstract RectInt GetRectInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.RectInt A UnityEngine.RectInt struct. | Improve this Doc View Source GetRowCount() Returns the number of rows in the . Declaration public abstract int GetRowCount() Returns Type Description System.Int32 A count of rows. | Improve this Doc View Source GetRowDescription(Int32) Get a RowDescription describing a row. Declaration public abstract RowDescription GetRowDescription(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. Returns Type Description RowDescription A RowDescription for the target row. | Improve this Doc View Source GetRowDescriptionByOrder(Int32) Get a RowDescription describing a row in the specified position. Declaration public abstract RowDescription GetRowDescriptionByOrder(int order) Parameters Type Name Description System.Int32 order The ordered index/position. Returns Type Description RowDescription A RowDescription for the target row. | Improve this Doc View Source GetRowName(Int32) Get the user-friendly name of the identified row. Declaration public abstract string GetRowName(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. Returns Type Description System.String A user-friendly name. | Improve this Doc View Source GetRowOrder(Int32) Get the specified row's order. Declaration public abstract int GetRowOrder(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. Returns Type Description System.Int32 The row's order/position. | Improve this Doc View Source GetSByte(Int32, Int32) Get a System.SByte value from the specified cell. Declaration public abstract sbyte GetSByte(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.SByte A System.SByte value. | Improve this Doc View Source GetShort(Int32, Int32) Get a System.Int16 value from the specified cell. Declaration public abstract short GetShort(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int16 A System.Int16 value. | Improve this Doc View Source GetString(Int32, Int32) Get a System.String value from the specified cell. Declaration public abstract string GetString(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.String A System.String value. | Improve this Doc View Source GetStructureCurrentVersion() Get the current structure version for the DataTableBase class itself. Declaration public abstract int GetStructureCurrentVersion() Returns Type Description System.Int32 The structure version number. | Improve this Doc View Source GetStructureVersion() Get the internally stored structure version for the DataTableBase . Declaration public abstract int GetStructureVersion() Returns Type Description System.Int32 The structure version number. Remarks Think of this as format version, if the internals change and the table needs to be updated this is the indicator for old data. | Improve this Doc View Source GetTypeNameForColumn(Int32) Get the type's assembly qualified name for the specified column. Declaration public abstract string GetTypeNameForColumn(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.String An assembly qualified name. | Improve this Doc View Source GetUInt(Int32, Int32) Get a System.UInt32 value from the specified cell. Declaration public abstract uint GetUInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.UInt32 A System.UInt32 value. | Improve this Doc View Source GetULong(Int32, Int32) Get a System.UInt64 value from the specified cell. Declaration public abstract ulong GetULong(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.UInt64 A System.UInt64 value. | Improve this Doc View Source GetUShort(Int32, Int32) Get a System.UInt16 value from the specified cell. Declaration public abstract ushort GetUShort(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.UInt16 A System.UInt16 value. | Improve this Doc View Source GetVector2(Int32, Int32) Get a UnityEngine.Vector2 struct from the specified cell. Declaration public abstract Vector2 GetVector2(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector2 A UnityEngine.Vector2 struct. | Improve this Doc View Source GetVector2Int(Int32, Int32) Get a UnityEngine.Vector2Int struct from the specified cell. Declaration public abstract Vector2Int GetVector2Int(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector2Int A UnityEngine.Vector2Int struct. | Improve this Doc View Source GetVector3(Int32, Int32) Get a UnityEngine.Vector3 struct from the specified cell. Declaration public abstract Vector3 GetVector3(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector3 A UnityEngine.Vector3 struct. | Improve this Doc View Source GetVector3Int(Int32, Int32) Get a UnityEngine.Vector3Int struct from the specified cell. Declaration public abstract Vector3Int GetVector3Int(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector3Int A UnityEngine.Vector3Int struct. | Improve this Doc View Source GetVector4(Int32, Int32) Get a UnityEngine.Vector4 struct from the specified cell. Declaration public abstract Vector4 GetVector4(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector4 A UnityEngine.Vector4 struct. | Improve this Doc View Source Migrate(Int32) Applies migration logic used to upgrade previous implementations of a DataTableBase . Declaration public abstract bool Migrate(int currentVersion) Parameters Type Name Description System.Int32 currentVersion The current version of a DataTableBase format. Returns Type Description System.Boolean Was the migration successful? | Improve this Doc View Source RemoveColumn(Serializable.SerializableTypes, Int32) Remove a column. Declaration public abstract void RemoveColumn(Serializable.SerializableTypes columnType, int columnIdentifier = -1) Parameters Type Name Description Serializable.SerializableTypes columnType The type of data being stored in the column. System.Int32 columnIdentifier The known column's identifier. | Improve this Doc View Source RemoveRow(Int32) Remove a row. Declaration public abstract void RemoveRow(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The known row's identifier. | Improve this Doc View Source SetAllColumnOrders(Int32[]) Set the order of columns in the DataTableBase . Declaration public abstract void SetAllColumnOrders(int[] orderedColumnIdentifiers) Parameters Type Name Description System.Int32 [] orderedColumnIdentifiers An array of column unique identifiers, in the order to be set. | Improve this Doc View Source SetAllRowOrders(Int32[]) Set the order of rows in the DataTableBase . Declaration public abstract void SetAllRowOrders(int[] orderedRowIdentifiers) Parameters Type Name Description System.Int32 [] orderedRowIdentifiers An array of row unique identifiers, in the order to be set. | Improve this Doc View Source SetAnimationCurve(Int32, Int32, AnimationCurve) Sets the specified cell's UnityEngine.AnimationCurve object. Declaration public abstract ulong SetAnimationCurve(int rowIdentifier, int columnIdentifier, AnimationCurve newObject) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.AnimationCurve newObject The updated object. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetBool(Int32, Int32, Boolean) Sets the specified cell's System.Boolean value. Declaration public abstract ulong SetBool(int rowIdentifier, int columnIdentifier, bool newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Boolean newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetBounds(Int32, Int32, Bounds) Sets the specified cell's UnityEngine.Bounds struct. Declaration public abstract ulong SetBounds(int rowIdentifier, int columnIdentifier, Bounds newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Bounds newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetBoundsInt(Int32, Int32, BoundsInt) Sets the specified cell's UnityEngine.BoundsInt struct. Declaration public abstract ulong SetBoundsInt(int rowIdentifier, int columnIdentifier, BoundsInt newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.BoundsInt newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetByte(Int32, Int32, Byte) Sets the specified cell's System.Byte value. Declaration public abstract ulong SetByte(int rowIdentifier, int columnIdentifier, byte newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Byte newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetChar(Int32, Int32, Char) Sets the specified cell's System.Char value. Declaration public abstract ulong SetChar(int rowIdentifier, int columnIdentifier, char newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Char newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetColor(Int32, Int32, Color) Sets the specified cell's UnityEngine.Color struct. Declaration public abstract ulong SetColor(int rowIdentifier, int columnIdentifier, Color newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Color newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetColumnName(Int32, String) Set the user-friendly name of the identified column. Declaration public abstract void SetColumnName(int columnIdentifier, string columnName) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. System.String columnName The desired user-friendly name for the column. | Improve this Doc View Source SetColumnOrder(Int32, Int32) Set the specified column's order. Declaration public abstract void SetColumnOrder(int columnIdentifier, int newSortOrder) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. System.Int32 newSortOrder The ordered index/position. | Improve this Doc View Source SetDouble(Int32, Int32, Double) Sets the specified cell's System.Double value. Declaration public abstract ulong SetDouble(int rowIdentifier, int columnIdentifier, double newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Double newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetEnumInt(Int32, Int32, Int32) Sets the specified cell's enumeration value. Declaration public abstract ulong SetEnumInt(int rowIdentifier, int columnIdentifier, int newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int32 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetFloat(Int32, Int32, Single) Sets the specified cell's System.Single value. Declaration public abstract ulong SetFloat(int rowIdentifier, int columnIdentifier, float newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Single newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetGradient(Int32, Int32, Gradient) Sets the specified cell's UnityEngine.Gradient object. Declaration public abstract ulong SetGradient(int rowIdentifier, int columnIdentifier, Gradient newObject) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Gradient newObject The updated object. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetHash128(Int32, Int32, Hash128) Sets the specified cell's UnityEngine.Hash128 struct. Declaration public abstract ulong SetHash128(int rowIdentifier, int columnIdentifier, Hash128 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Hash128 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetInt(Int32, Int32, Int32) Sets the specified cell's System.Int32 value. Declaration public abstract ulong SetInt(int rowIdentifier, int columnIdentifier, int newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int32 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetLayerMask(Int32, Int32, LayerMask) Sets the specified cell's UnityEngine.LayerMask struct. Declaration public abstract ulong SetLayerMask(int rowIdentifier, int columnIdentifier, LayerMask newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.LayerMask newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetLong(Int32, Int32, Int64) Sets the specified cell's System.Int64 value. Declaration public abstract ulong SetLong(int rowIdentifier, int columnIdentifier, long newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int64 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetObject(Int32, Int32, Object) Sets the specified cell's UnityEngine.Object object. Declaration public abstract ulong SetObject(int rowIdentifier, int columnIdentifier, Object newObject) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Object newObject The updated object. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetQuaternion(Int32, Int32, Quaternion) Sets the specified cell's UnityEngine.Quaternion struct. Declaration public abstract ulong SetQuaternion(int rowIdentifier, int columnIdentifier, Quaternion newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Quaternion newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetRect(Int32, Int32, Rect) Sets the specified cell's UnityEngine.Rect struct. Declaration public abstract ulong SetRect(int rowIdentifier, int columnIdentifier, Rect newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Rect newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetRectInt(Int32, Int32, RectInt) Sets the specified cell's UnityEngine.RectInt struct. Declaration public abstract ulong SetRectInt(int rowIdentifier, int columnIdentifier, RectInt newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.RectInt newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetRowName(Int32, String) Set the user-friendly name of the identified row. Declaration public abstract void SetRowName(int rowIdentifier, string rowName) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.String rowName The desired user-friendly name for the row. | Improve this Doc View Source SetRowOrder(Int32, Int32) Set the specified row's order. Declaration public abstract void SetRowOrder(int rowIdentifier, int newSortOrder) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 newSortOrder The ordered index/position. | Improve this Doc View Source SetSByte(Int32, Int32, SByte) Sets the specified cell's System.SByte value. Declaration public abstract ulong SetSByte(int rowIdentifier, int columnIdentifier, sbyte newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.SByte newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetShort(Int32, Int32, Int16) Sets the specified cell's System.Int16 value. Declaration public abstract ulong SetShort(int rowIdentifier, int columnIdentifier, short newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int16 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetString(Int32, Int32, String) Sets the specified cell's System.String value. Declaration public abstract ulong SetString(int rowIdentifier, int columnIdentifier, string newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.String newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetTypeNameForColumn(Int32, String) Set the type's assembly qualified name for the specified column. Declaration public abstract void SetTypeNameForColumn(int columnIdentifier, string assemblyQualifiedName) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. System.String assemblyQualifiedName The assembly qualified name. Remarks More info can be found at https://learn.microsoft.com/en-us/dotnet/api/system.type.assemblyqualifiedname?view=net-7.0 . This allows for filtering of the generated fields. | Improve this Doc View Source SetUInt(Int32, Int32, UInt32) Sets the specified cell's System.UInt32 value. Declaration public abstract ulong SetUInt(int rowIdentifier, int columnIdentifier, uint newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.UInt32 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetULong(Int32, Int32, UInt64) Sets the specified cell's System.UInt64 value. Declaration public abstract ulong SetULong(int rowIdentifier, int columnIdentifier, ulong newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.UInt64 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetUShort(Int32, Int32, UInt16) Sets the specified cell's System.UInt16 value. Declaration public abstract ulong SetUShort(int rowIdentifier, int columnIdentifier, ushort newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.UInt16 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetVector2(Int32, Int32, Vector2) Sets the specified cell's UnityEngine.Vector2 struct. Declaration public abstract ulong SetVector2(int rowIdentifier, int columnIdentifier, Vector2 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector2 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetVector2Int(Int32, Int32, Vector2Int) Sets the specified cell's UnityEngine.Vector2Int struct. Declaration public abstract ulong SetVector2Int(int rowIdentifier, int columnIdentifier, Vector2Int newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector2Int newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetVector3(Int32, Int32, Vector3) Sets the specified cell's UnityEngine.Vector3 struct. Declaration public abstract ulong SetVector3(int rowIdentifier, int columnIdentifier, Vector3 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector3 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetVector3Int(Int32, Int32, Vector3Int) Sets the specified cell's UnityEngine.Vector3Int struct. Declaration public abstract ulong SetVector3Int(int rowIdentifier, int columnIdentifier, Vector3Int newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector3Int newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. | Improve this Doc View Source SetVector4(Int32, Int32, Vector4) Sets the specified cell's UnityEngine.Vector4 struct. Declaration public abstract ulong SetVector4(int rowIdentifier, int columnIdentifier, Vector4 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector4 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Extension Methods ObjectExtensions.SafeDestroy(Object, Single) DataTableExtensions.GetCellValueAsString(DataTableBase, Int32, Int32, Serializable.SerializableTypes) DataTableExtensions.SetCellValueFromString(DataTableBase, Int32, Int32, String, Serializable.SerializableTypes)"
  },
  "api/GDX.DataTables.DataTableExtensions.html": {
    "href": "api/GDX.DataTables.DataTableExtensions.html",
    "title": "DataTableExtensions | GDX",
    "keywords": "Class DataTableExtensions DataTableBase Based Extension Methods Inheritance System.Object DataTableExtensions Namespace : GDX.DataTables Syntax public static class DataTableExtensions Methods | Improve this Doc View Source GetCellValueAsString(DataTableBase, Int32, Int32, Serializable.SerializableTypes) Get the value of a cell in a DataTableBase , as a System.String . Declaration public static string GetCellValueAsString(this DataTableBase dataTable, int rowIdentifier, int columnIdentifier, Serializable.SerializableTypes columnType = Serializable.SerializableTypes.Invalid) Parameters Type Name Description DataTableBase dataTable The target Data Table to query for the value. System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Serializable.SerializableTypes columnType A hint as to the type of the column. If this is not provided a cost will be paid to get it. Returns Type Description System.String The System.String value of the target row's column. | Improve this Doc View Source SetCellValueFromString(DataTableBase, Int32, Int32, String, Serializable.SerializableTypes) Set the value of a cell in a DataTableBase from a System.String value. Declaration public static void SetCellValueFromString(this DataTableBase dataTable, int rowIdentifier, int columnIdentifier, string newValue, Serializable.SerializableTypes columnType = Serializable.SerializableTypes.Invalid) Parameters Type Name Description DataTableBase dataTable The target Data Table to set a value for. System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.String newValue The value to set. Serializable.SerializableTypes columnType A hint as to the type of the column. If this is not provided a cost will be paid to get it."
  },
  "api/GDX.DataTables.DataTableMetaData.html": {
    "href": "api/GDX.DataTables.DataTableMetaData.html",
    "title": "DataTableMetaData | GDX",
    "keywords": "Class DataTableMetaData A collection of metadata for a DataTableBase . Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject DataTableMetaData Namespace : GDX.DataTables Syntax public class DataTableMetaData : ScriptableObject Remarks These objects are created with the UnityEngine.HideFlags preventing them from entering a build, or being seen/editted directly in the editor. Fields | Improve this Doc View Source BindingDataVersion The data version number used the last time data was pushed to the binding. Declaration public ulong BindingDataVersion Field Value Type Description System.UInt64 | Improve this Doc View Source BindingTimestamp The timestamp last gotten from the binding. Declaration public DateTime BindingTimestamp Field Value Type Description System.DateTime | Improve this Doc View Source BindingUri A source of truth binding for the data found in the DataTableBase . Declaration public string BindingUri Field Value Type Description System.String Remarks On-disk bindings are relative to the asset folder. | Improve this Doc View Source DisplayName The user-friendly name used throughout the author-time experience for the DataTableBase . Declaration public string DisplayName Field Value Type Description System.String | Improve this Doc View Source ReferencesOnlyMode Locks out fields on the DataTableBase which are not reference based. This is useful for when a dataset is being driven by a binding. Declaration public bool ReferencesOnlyMode Field Value Type Description System.Boolean | Improve this Doc View Source SupportsUndo EXPERIMENTAL! Supports undo/redo operations on the DataTableBase . Declaration public bool SupportsUndo Field Value Type Description System.Boolean Extension Methods ObjectExtensions.SafeDestroy(Object, Single)"
  },
  "api/GDX.DataTables.html": {
    "href": "api/GDX.DataTables.html",
    "title": "Namespace GDX.DataTables | GDX",
    "keywords": "Namespace GDX.DataTables Classes DataTableBase The base framework of a UnityEngine.ScriptableObject backed DataTable. DataTableExtensions DataTableBase Based Extension Methods DataTableMetaData A collection of metadata for a DataTableBase . StableDataTable Structs ColumnDescription A description of a column in a DataTableBase . RowDescription A description of a row in a DataTableBase ."
  },
  "api/GDX.DataTables.RowDescription.html": {
    "href": "api/GDX.DataTables.RowDescription.html",
    "title": "RowDescription | GDX",
    "keywords": "Struct RowDescription A description of a row in a DataTableBase . Namespace : GDX.DataTables Syntax public struct RowDescription Fields | Improve this Doc View Source Identifier The unique identifier for the row. Declaration public int Identifier Field Value Type Description System.Int32 | Improve this Doc View Source Name The given name of the row. Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source SortOrder The current sort order. Declaration public int SortOrder Field Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Generates a custom string based on the row. Declaration public override string ToString() Returns Type Description System.String A user-friendly string representation of the RowDescription . Overrides System.ValueType.ToString()"
  },
  "api/GDX.DataTables.StableDataTable.html": {
    "href": "api/GDX.DataTables.StableDataTable.html",
    "title": "StableDataTable | GDX",
    "keywords": "Class StableDataTable Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject DataTableBase StableDataTable Inherited Members DataTableBase.GetMetaData() Namespace : GDX.DataTables Syntax [HelpURL(\"https://gdx-dev.dotbunny.com/manual/features/data-tables.html\")] [CreateAssetMenu(menuName = \"GDX/Stable Data Table\", fileName = \"GDXStableDataTable\")] [Serializable] public class StableDataTable : DataTableBase Methods | Improve this Doc View Source AddColumn(Serializable.SerializableTypes, String, Int32) Add a column. Declaration public override int AddColumn(Serializable.SerializableTypes columnType, string columnName, int insertAtColumnIdentifier = -1) Parameters Type Name Description Serializable.SerializableTypes columnType The type of data being stored in the column. System.String columnName The user-friendly name of the column. System.Int32 insertAtColumnIdentifier The column identifier to insert the column at, otherwise -1 will place the column at the end. Returns Type Description System.Int32 The unique column identifier of the created column. Overrides DataTableBase.AddColumn(Serializable.SerializableTypes, String, Int32) | Improve this Doc View Source AddRow(String, Int32) Add a row Declaration public override int AddRow(string rowName = null, int insertAtRowIdentifier = -1) Parameters Type Name Description System.String rowName The user-friendly name of the column. System.Int32 insertAtRowIdentifier The row identifier to insert the row at, otherwise -1 will place the row at the end. Returns Type Description System.Int32 The unique row identifier of the created row. Overrides DataTableBase.AddRow(String, Int32) | Improve this Doc View Source AddRows(Int32, ref Int32[], String[], Int32) Declaration public void AddRows(int numberOfNewRows, ref int[] rowIDs, string[] rowNames = null, int insertAtRowID = -1) Parameters Type Name Description System.Int32 numberOfNewRows System.Int32 [] rowIDs System.String [] rowNames System.Int32 insertAtRowID | Improve this Doc View Source AddRows(Int32, String[], Int32) Declaration public void AddRows(int numberOfNewRows, string[] rowNames = null, int insertAtRowID = -1) Parameters Type Name Description System.Int32 numberOfNewRows System.String [] rowNames System.Int32 insertAtRowID | Improve this Doc View Source GetAllColumnDescriptions() Get all columns' ColumnDescription ; ordered. Declaration public override ColumnDescription[] GetAllColumnDescriptions() Returns Type Description ColumnDescription [] An array of ColumnDescription s. Overrides DataTableBase.GetAllColumnDescriptions() | Improve this Doc View Source GetAllRowDescriptions() Get all rows' RowDescription ; ordered. Declaration public override RowDescription[] GetAllRowDescriptions() Returns Type Description RowDescription [] An array of RowDescription s. Overrides DataTableBase.GetAllRowDescriptions() | Improve this Doc View Source GetAnimationCurve(Int32, Int32) Get a UnityEngine.AnimationCurve object from the specified cell. Declaration public override AnimationCurve GetAnimationCurve(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.AnimationCurve A UnityEngine.AnimationCurve object. Overrides DataTableBase.GetAnimationCurve(Int32, Int32) | Improve this Doc View Source GetAnimationCurveColumn(Int32) Declaration public AnimationCurve[] GetAnimationCurveColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.AnimationCurve [] | Improve this Doc View Source GetAnimationCurveRef(Int32, Int32) Declaration public ref AnimationCurve GetAnimationCurveRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.AnimationCurve | Improve this Doc View Source GetBool(Int32, Int32) Get a System.Boolean value from the specified cell. Declaration public override bool GetBool(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Boolean A System.Boolean value. Overrides DataTableBase.GetBool(Int32, Int32) | Improve this Doc View Source GetBoolColumn(Int32) Declaration public bool[] GetBoolColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Boolean [] | Improve this Doc View Source GetBoolRef(Int32, Int32) Declaration public ref bool GetBoolRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Boolean | Improve this Doc View Source GetBounds(Int32, Int32) Get a UnityEngine.Bounds struct from the specified cell. Declaration public override Bounds GetBounds(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Bounds A UnityEngine.Bounds struct. Overrides DataTableBase.GetBounds(Int32, Int32) | Improve this Doc View Source GetBoundsColumn(Int32) Declaration public Bounds[] GetBoundsColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Bounds [] | Improve this Doc View Source GetBoundsInt(Int32, Int32) Get a UnityEngine.BoundsInt struct from the specified cell. Declaration public override BoundsInt GetBoundsInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.BoundsInt A UnityEngine.BoundsInt struct. Overrides DataTableBase.GetBoundsInt(Int32, Int32) | Improve this Doc View Source GetBoundsIntColumn(Int32) Declaration public BoundsInt[] GetBoundsIntColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.BoundsInt [] | Improve this Doc View Source GetBoundsIntRef(Int32, Int32) Declaration public ref BoundsInt GetBoundsIntRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.BoundsInt | Improve this Doc View Source GetBoundsRef(Int32, Int32) Declaration public ref Bounds GetBoundsRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Bounds | Improve this Doc View Source GetByte(Int32, Int32) Get a System.Byte value from the specified cell. Declaration public override byte GetByte(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Byte A System.Byte value. Overrides DataTableBase.GetByte(Int32, Int32) | Improve this Doc View Source GetByteColumn(Int32) Declaration public byte[] GetByteColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Byte [] | Improve this Doc View Source GetByteRef(Int32, Int32) Declaration public ref byte GetByteRef(int row, int columnID) Parameters Type Name Description System.Int32 row System.Int32 columnID Returns Type Description System.Byte | Improve this Doc View Source GetChar(Int32, Int32) Get a System.Char value from the specified cell. Declaration public override char GetChar(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Char A System.Char value. Overrides DataTableBase.GetChar(Int32, Int32) | Improve this Doc View Source GetCharColumn(Int32) Declaration public char[] GetCharColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Char [] | Improve this Doc View Source GetCharRef(Int32, Int32) Declaration public ref char GetCharRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Char | Improve this Doc View Source GetColor(Int32, Int32) Get a UnityEngine.Color struct from the specified cell. Declaration public override Color GetColor(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Color A UnityEngine.Color struct. Overrides DataTableBase.GetColor(Int32, Int32) | Improve this Doc View Source GetColorColumn(Int32) Declaration public Color[] GetColorColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Color [] | Improve this Doc View Source GetColorRef(Int32, Int32) Declaration public ref Color GetColorRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Color | Improve this Doc View Source GetColumnCount() Returns the number of columns in the . Declaration public override int GetColumnCount() Returns Type Description System.Int32 A count of columns. Overrides DataTableBase.GetColumnCount() | Improve this Doc View Source GetColumnDescription(Int32) Get a ColumnDescription describing a column in the specified position. Declaration public override ColumnDescription GetColumnDescription(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description ColumnDescription A ColumnDescription for the target column. Overrides DataTableBase.GetColumnDescription(Int32) | Improve this Doc View Source GetColumnDescriptionByOrder(Int32) Get a ColumnDescription describing a column in the specified position. Declaration public override ColumnDescription GetColumnDescriptionByOrder(int order) Parameters Type Name Description System.Int32 order The ordered index/position. Returns Type Description ColumnDescription A ColumnDescription for the target column. Overrides DataTableBase.GetColumnDescriptionByOrder(Int32) | Improve this Doc View Source GetColumnName(Int32) Get the user-friendly name of the identified column. Declaration public override string GetColumnName(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.String A user-friendly name. Overrides DataTableBase.GetColumnName(Int32) | Improve this Doc View Source GetColumnNameRef(Int32) Declaration public ref string GetColumnNameRef(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier Returns Type Description System.String | Improve this Doc View Source GetColumnOrder(Int32) Set the specified column's order. Declaration public override int GetColumnOrder(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int32 The column's order/position. Overrides DataTableBase.GetColumnOrder(Int32) | Improve this Doc View Source GetDataVersion() Get the internally stored data version for the DataTableBase . Declaration public override ulong GetDataVersion() Returns Type Description System.UInt64 Overrides DataTableBase.GetDataVersion() Remarks Every time something changes in the table, be it structural or data, this value is changed. This allows for checks of if cached values need to be re-polled. | Improve this Doc View Source GetDouble(Int32, Int32) Get a System.Double value from the specified cell. Declaration public override double GetDouble(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Double A System.Double value. Overrides DataTableBase.GetDouble(Int32, Int32) | Improve this Doc View Source GetDoubleColumn(Int32) Declaration public double[] GetDoubleColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Double [] | Improve this Doc View Source GetDoubleRef(Int32, Int32) Declaration public ref double GetDoubleRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Double | Improve this Doc View Source GetEnumInt(Int32, Int32) Get am System.Int32 value of an enumeration from the specified cell. Declaration public override int GetEnumInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int32 An integer value for the enumeration Overrides DataTableBase.GetEnumInt(Int32, Int32) | Improve this Doc View Source GetFloat(Int32, Int32) Get a System.Single value from the specified cell. Declaration public override float GetFloat(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Single A System.Single value. Overrides DataTableBase.GetFloat(Int32, Int32) | Improve this Doc View Source GetFloatColumn(Int32) Declaration public float[] GetFloatColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Single [] | Improve this Doc View Source GetFloatRef(Int32, Int32) Declaration public ref float GetFloatRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Single | Improve this Doc View Source GetGradient(Int32, Int32) Get a UnityEngine.Gradient object from the specified cell. Declaration public override Gradient GetGradient(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Gradient A UnityEngine.Gradient object. Overrides DataTableBase.GetGradient(Int32, Int32) | Improve this Doc View Source GetGradientColumn(Int32) Declaration public Gradient[] GetGradientColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Gradient [] | Improve this Doc View Source GetGradientRef(Int32, Int32) Declaration public ref Gradient GetGradientRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Gradient | Improve this Doc View Source GetHash128(Int32, Int32) Get a UnityEngine.Hash128 struct from the specified cell. Declaration public override Hash128 GetHash128(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Hash128 A UnityEngine.Hash128 struct. Overrides DataTableBase.GetHash128(Int32, Int32) | Improve this Doc View Source GetHash128Column(Int32) Declaration public Hash128[] GetHash128Column(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Hash128 [] | Improve this Doc View Source GetHash128Ref(Int32, Int32) Declaration public ref Hash128 GetHash128Ref(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Hash128 | Improve this Doc View Source GetInt(Int32, Int32) Get a System.Int32 value from the specified cell. Declaration public override int GetInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int32 A System.Int32 value. Overrides DataTableBase.GetInt(Int32, Int32) | Improve this Doc View Source GetIntColumn(Int32) Declaration public int[] GetIntColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Int32 [] | Improve this Doc View Source GetIntRef(Int32, Int32) Declaration public ref int GetIntRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Int32 | Improve this Doc View Source GetLayerMask(Int32, Int32) Get a UnityEngine.LayerMask struct from the specified cell. Declaration public override LayerMask GetLayerMask(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.LayerMask A UnityEngine.LayerMask struct. Overrides DataTableBase.GetLayerMask(Int32, Int32) | Improve this Doc View Source GetLayerMaskColumn(Int32) Declaration public LayerMask[] GetLayerMaskColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.LayerMask [] | Improve this Doc View Source GetLayerMaskRef(Int32, Int32) Declaration public ref LayerMask GetLayerMaskRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.LayerMask | Improve this Doc View Source GetLong(Int32, Int32) Get a System.Int64 value from the specified cell. Declaration public override long GetLong(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int64 A System.Int64 value. Overrides DataTableBase.GetLong(Int32, Int32) | Improve this Doc View Source GetLongColumn(Int32) Declaration public long[] GetLongColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Int64 [] | Improve this Doc View Source GetLongRef(Int32, Int32) Declaration public ref long GetLongRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Int64 | Improve this Doc View Source GetObject(Int32, Int32) Get an UnityEngine.Object object from the specified cell. Declaration public override Object GetObject(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Object An UnityEngine.Object . Overrides DataTableBase.GetObject(Int32, Int32) | Improve this Doc View Source GetObjectColumn(Int32) Declaration public Object[] GetObjectColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Object [] | Improve this Doc View Source GetObjectRef(Int32, Int32) Declaration public ref Object GetObjectRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Object | Improve this Doc View Source GetQuaternion(Int32, Int32) Get a UnityEngine.Quaternion struct from the specified cell. Declaration public override Quaternion GetQuaternion(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Quaternion A UnityEngine.Quaternion struct. Overrides DataTableBase.GetQuaternion(Int32, Int32) | Improve this Doc View Source GetQuaternionColumn(Int32) Declaration public Quaternion[] GetQuaternionColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Quaternion [] | Improve this Doc View Source GetQuaternionRef(Int32, Int32) Declaration public ref Quaternion GetQuaternionRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Quaternion | Improve this Doc View Source GetRect(Int32, Int32) Get a UnityEngine.Rect struct from the specified cell. Declaration public override Rect GetRect(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Rect A UnityEngine.Rect struct. Overrides DataTableBase.GetRect(Int32, Int32) | Improve this Doc View Source GetRectColumn(Int32) Declaration public Rect[] GetRectColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Rect [] | Improve this Doc View Source GetRectInt(Int32, Int32) Get a UnityEngine.RectInt struct from the specified cell. Declaration public override RectInt GetRectInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.RectInt A UnityEngine.RectInt struct. Overrides DataTableBase.GetRectInt(Int32, Int32) | Improve this Doc View Source GetRectIntColumn(Int32) Declaration public RectInt[] GetRectIntColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.RectInt [] | Improve this Doc View Source GetRectIntRef(Int32, Int32) Declaration public ref RectInt GetRectIntRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.RectInt | Improve this Doc View Source GetRectRef(Int32, Int32) Declaration public ref Rect GetRectRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Rect | Improve this Doc View Source GetRowCount() Returns the number of rows in the . Declaration public override int GetRowCount() Returns Type Description System.Int32 A count of rows. Overrides DataTableBase.GetRowCount() | Improve this Doc View Source GetRowDescription(Int32) Get a RowDescription describing a row. Declaration public override RowDescription GetRowDescription(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. Returns Type Description RowDescription A RowDescription for the target row. Overrides DataTableBase.GetRowDescription(Int32) | Improve this Doc View Source GetRowDescriptionByOrder(Int32) Get a RowDescription describing a row in the specified position. Declaration public override RowDescription GetRowDescriptionByOrder(int order) Parameters Type Name Description System.Int32 order The ordered index/position. Returns Type Description RowDescription A RowDescription for the target row. Overrides DataTableBase.GetRowDescriptionByOrder(Int32) | Improve this Doc View Source GetRowName(Int32) Get the user-friendly name of the identified row. Declaration public override string GetRowName(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. Returns Type Description System.String A user-friendly name. Overrides DataTableBase.GetRowName(Int32) | Improve this Doc View Source GetRowNameRef(Int32) Declaration public ref string GetRowNameRef(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier Returns Type Description System.String | Improve this Doc View Source GetRowOrder(Int32) Get the specified row's order. Declaration public override int GetRowOrder(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. Returns Type Description System.Int32 The row's order/position. Overrides DataTableBase.GetRowOrder(Int32) | Improve this Doc View Source GetSByte(Int32, Int32) Get a System.SByte value from the specified cell. Declaration public override sbyte GetSByte(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.SByte A System.SByte value. Overrides DataTableBase.GetSByte(Int32, Int32) | Improve this Doc View Source GetSbyteColumn(Int32) Declaration public sbyte[] GetSbyteColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.SByte [] | Improve this Doc View Source GetSbyteRef(Int32, Int32) Declaration public ref sbyte GetSbyteRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.SByte | Improve this Doc View Source GetShort(Int32, Int32) Get a System.Int16 value from the specified cell. Declaration public override short GetShort(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.Int16 A System.Int16 value. Overrides DataTableBase.GetShort(Int32, Int32) | Improve this Doc View Source GetShortColumn(Int32) Declaration public short[] GetShortColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.Int16 [] | Improve this Doc View Source GetShortRef(Int32, Int32) Declaration public ref short GetShortRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Int16 | Improve this Doc View Source GetString(Int32, Int32) Get a System.String value from the specified cell. Declaration public override string GetString(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.String A System.String value. Overrides DataTableBase.GetString(Int32, Int32) | Improve this Doc View Source GetStringColumn(Int32) Declaration public string[] GetStringColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.String [] | Improve this Doc View Source GetStringRef(Int32, Int32) Declaration public ref string GetStringRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.String | Improve this Doc View Source GetStructureCurrentVersion() Get the current structure version for the DataTableBase class itself. Declaration public override int GetStructureCurrentVersion() Returns Type Description System.Int32 The structure version number. Overrides DataTableBase.GetStructureCurrentVersion() | Improve this Doc View Source GetStructureVersion() Get the internally stored structure version for the DataTableBase . Declaration public override int GetStructureVersion() Returns Type Description System.Int32 The structure version number. Overrides DataTableBase.GetStructureVersion() Remarks Think of this as format version, if the internals change and the table needs to be updated this is the indicator for old data. | Improve this Doc View Source GetTypeNameForColumn(Int32) Get the type's assembly qualified name for the specified column. Declaration public override string GetTypeNameForColumn(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.String An assembly qualified name. Overrides DataTableBase.GetTypeNameForColumn(Int32) | Improve this Doc View Source GetUInt(Int32, Int32) Get a System.UInt32 value from the specified cell. Declaration public override uint GetUInt(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.UInt32 A System.UInt32 value. Overrides DataTableBase.GetUInt(Int32, Int32) | Improve this Doc View Source GetUintColumn(Int32) Declaration public uint[] GetUintColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.UInt32 [] | Improve this Doc View Source GetUintRef(Int32, Int32) Declaration public ref uint GetUintRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.UInt32 | Improve this Doc View Source GetULong(Int32, Int32) Get a System.UInt64 value from the specified cell. Declaration public override ulong GetULong(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.UInt64 A System.UInt64 value. Overrides DataTableBase.GetULong(Int32, Int32) | Improve this Doc View Source GetUlongColumn(Int32) Declaration public ulong[] GetUlongColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.UInt64 [] | Improve this Doc View Source GetUlongRef(Int32, Int32) Declaration public ref ulong GetUlongRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.UInt64 | Improve this Doc View Source GetUShort(Int32, Int32) Get a System.UInt16 value from the specified cell. Declaration public override ushort GetUShort(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description System.UInt16 A System.UInt16 value. Overrides DataTableBase.GetUShort(Int32, Int32) | Improve this Doc View Source GetUshortColumn(Int32) Declaration public ushort[] GetUshortColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.UInt16 [] | Improve this Doc View Source GetUshortRef(Int32, Int32) Declaration public ref ushort GetUshortRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.UInt16 | Improve this Doc View Source GetVector2(Int32, Int32) Get a UnityEngine.Vector2 struct from the specified cell. Declaration public override Vector2 GetVector2(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector2 A UnityEngine.Vector2 struct. Overrides DataTableBase.GetVector2(Int32, Int32) | Improve this Doc View Source GetVector2Column(Int32) Declaration public Vector2[] GetVector2Column(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Vector2 [] | Improve this Doc View Source GetVector2Int(Int32, Int32) Get a UnityEngine.Vector2Int struct from the specified cell. Declaration public override Vector2Int GetVector2Int(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector2Int A UnityEngine.Vector2Int struct. Overrides DataTableBase.GetVector2Int(Int32, Int32) | Improve this Doc View Source GetVector2IntColumn(Int32) Declaration public Vector2Int[] GetVector2IntColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Vector2Int [] | Improve this Doc View Source GetVector2IntRef(Int32, Int32) Declaration public ref Vector2Int GetVector2IntRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Vector2Int | Improve this Doc View Source GetVector2Ref(Int32, Int32) Declaration public ref Vector2 GetVector2Ref(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Vector2 | Improve this Doc View Source GetVector3(Int32, Int32) Get a UnityEngine.Vector3 struct from the specified cell. Declaration public override Vector3 GetVector3(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector3 A UnityEngine.Vector3 struct. Overrides DataTableBase.GetVector3(Int32, Int32) | Improve this Doc View Source GetVector3Column(Int32) Declaration public Vector3[] GetVector3Column(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Vector3 [] | Improve this Doc View Source GetVector3Int(Int32, Int32) Get a UnityEngine.Vector3Int struct from the specified cell. Declaration public override Vector3Int GetVector3Int(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector3Int A UnityEngine.Vector3Int struct. Overrides DataTableBase.GetVector3Int(Int32, Int32) | Improve this Doc View Source GetVector3IntColumn(Int32) Declaration public Vector3Int[] GetVector3IntColumn(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Vector3Int [] | Improve this Doc View Source GetVector3IntRef(Int32, Int32) Declaration public ref Vector3Int GetVector3IntRef(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Vector3Int | Improve this Doc View Source GetVector3Ref(Int32, Int32) Declaration public ref Vector3 GetVector3Ref(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Vector3 | Improve this Doc View Source GetVector4(Int32, Int32) Get a UnityEngine.Vector4 struct from the specified cell. Declaration public override Vector4 GetVector4(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. Returns Type Description UnityEngine.Vector4 A UnityEngine.Vector4 struct. Overrides DataTableBase.GetVector4(Int32, Int32) | Improve this Doc View Source GetVector4Column(Int32) Declaration public Vector4[] GetVector4Column(int column) Parameters Type Name Description System.Int32 column Returns Type Description UnityEngine.Vector4 [] | Improve this Doc View Source GetVector4Ref(Int32, Int32) Declaration public ref Vector4 GetVector4Ref(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description UnityEngine.Vector4 | Improve this Doc View Source Migrate(Int32) Declaration public override bool Migrate(int currentVersion) Parameters Type Name Description System.Int32 currentVersion Returns Type Description System.Boolean Overrides DataTableBase.Migrate(Int32) | Improve this Doc View Source RemoveColumn(Serializable.SerializableTypes, Int32) Remove a column. Declaration public override void RemoveColumn(Serializable.SerializableTypes columnType, int columnIdentifier) Parameters Type Name Description Serializable.SerializableTypes columnType The type of data being stored in the column. System.Int32 columnIdentifier The known column's identifier. Overrides DataTableBase.RemoveColumn(Serializable.SerializableTypes, Int32) | Improve this Doc View Source RemoveRow(Int32) Remove a row. Declaration public override void RemoveRow(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The known row's identifier. Overrides DataTableBase.RemoveRow(Int32) | Improve this Doc View Source SetAllColumnOrders(Int32[]) Set the order of columns in the DataTableBase . Declaration public override void SetAllColumnOrders(int[] orderedColumnIdentifiers) Parameters Type Name Description System.Int32 [] orderedColumnIdentifiers An array of column unique identifiers, in the order to be set. Overrides DataTableBase.SetAllColumnOrders(Int32[]) | Improve this Doc View Source SetAllRowOrders(Int32[]) Set the order of rows in the DataTableBase . Declaration public override void SetAllRowOrders(int[] orderedRowIdentifiers) Parameters Type Name Description System.Int32 [] orderedRowIdentifiers An array of row unique identifiers, in the order to be set. Overrides DataTableBase.SetAllRowOrders(Int32[]) | Improve this Doc View Source SetAnimationCurve(Int32, Int32, AnimationCurve) Sets the specified cell's UnityEngine.AnimationCurve object. Declaration public override ulong SetAnimationCurve(int rowIdentifier, int columnIdentifier, AnimationCurve newObject) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.AnimationCurve newObject The updated object. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetAnimationCurve(Int32, Int32, AnimationCurve) | Improve this Doc View Source SetBool(Int32, Int32, Boolean) Sets the specified cell's System.Boolean value. Declaration public override ulong SetBool(int rowIdentifier, int columnIdentifier, bool newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Boolean newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetBool(Int32, Int32, Boolean) | Improve this Doc View Source SetBounds(Int32, Int32, Bounds) Sets the specified cell's UnityEngine.Bounds struct. Declaration public override ulong SetBounds(int rowIdentifier, int columnIdentifier, Bounds newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Bounds newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetBounds(Int32, Int32, Bounds) | Improve this Doc View Source SetBoundsInt(Int32, Int32, BoundsInt) Sets the specified cell's UnityEngine.BoundsInt struct. Declaration public override ulong SetBoundsInt(int rowIdentifier, int columnIdentifier, BoundsInt newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.BoundsInt newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetBoundsInt(Int32, Int32, BoundsInt) | Improve this Doc View Source SetByte(Int32, Int32, Byte) Sets the specified cell's System.Byte value. Declaration public override ulong SetByte(int rowIdentifier, int columnIdentifier, byte newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Byte newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetByte(Int32, Int32, Byte) | Improve this Doc View Source SetChar(Int32, Int32, Char) Sets the specified cell's System.Char value. Declaration public override ulong SetChar(int rowIdentifier, int columnIdentifier, char newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Char newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetChar(Int32, Int32, Char) | Improve this Doc View Source SetColor(Int32, Int32, Color) Sets the specified cell's UnityEngine.Color struct. Declaration public override ulong SetColor(int rowIdentifier, int columnIdentifier, Color newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Color newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetColor(Int32, Int32, Color) | Improve this Doc View Source SetColumnName(Int32, String) Set the user-friendly name of the identified column. Declaration public override void SetColumnName(int columnIdentifier, string columnName) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. System.String columnName The desired user-friendly name for the column. Overrides DataTableBase.SetColumnName(Int32, String) | Improve this Doc View Source SetColumnOrder(Int32, Int32) Set the specified column's order. Declaration public override void SetColumnOrder(int columnIdentifier, int newSortOrder) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. System.Int32 newSortOrder The ordered index/position. Overrides DataTableBase.SetColumnOrder(Int32, Int32) | Improve this Doc View Source SetDouble(Int32, Int32, Double) Sets the specified cell's System.Double value. Declaration public override ulong SetDouble(int rowIdentifier, int columnIdentifier, double newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Double newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetDouble(Int32, Int32, Double) | Improve this Doc View Source SetEnumInt(Int32, Int32, Int32) Sets the specified cell's enumeration value. Declaration public override ulong SetEnumInt(int rowIdentifier, int columnIdentifier, int newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int32 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetEnumInt(Int32, Int32, Int32) | Improve this Doc View Source SetFloat(Int32, Int32, Single) Sets the specified cell's System.Single value. Declaration public override ulong SetFloat(int rowIdentifier, int columnIdentifier, float newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Single newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetFloat(Int32, Int32, Single) | Improve this Doc View Source SetGradient(Int32, Int32, Gradient) Sets the specified cell's UnityEngine.Gradient object. Declaration public override ulong SetGradient(int rowIdentifier, int columnIdentifier, Gradient newObject) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Gradient newObject The updated object. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetGradient(Int32, Int32, Gradient) | Improve this Doc View Source SetHash128(Int32, Int32, Hash128) Sets the specified cell's UnityEngine.Hash128 struct. Declaration public override ulong SetHash128(int rowIdentifier, int columnIdentifier, Hash128 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Hash128 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetHash128(Int32, Int32, Hash128) | Improve this Doc View Source SetInt(Int32, Int32, Int32) Sets the specified cell's System.Int32 value. Declaration public override ulong SetInt(int rowIdentifier, int columnIdentifier, int newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int32 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetInt(Int32, Int32, Int32) | Improve this Doc View Source SetLayerMask(Int32, Int32, LayerMask) Sets the specified cell's UnityEngine.LayerMask struct. Declaration public override ulong SetLayerMask(int rowIdentifier, int columnIdentifier, LayerMask newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.LayerMask newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetLayerMask(Int32, Int32, LayerMask) | Improve this Doc View Source SetLong(Int32, Int32, Int64) Sets the specified cell's System.Int64 value. Declaration public override ulong SetLong(int rowIdentifier, int columnIdentifier, long newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int64 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetLong(Int32, Int32, Int64) | Improve this Doc View Source SetObject(Int32, Int32, Object) Sets the specified cell's UnityEngine.Object object. Declaration public override ulong SetObject(int rowIdentifier, int columnIdentifier, Object newObject) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Object newObject The updated object. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetObject(Int32, Int32, Object) | Improve this Doc View Source SetQuaternion(Int32, Int32, Quaternion) Sets the specified cell's UnityEngine.Quaternion struct. Declaration public override ulong SetQuaternion(int rowIdentifier, int columnIdentifier, Quaternion newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Quaternion newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetQuaternion(Int32, Int32, Quaternion) | Improve this Doc View Source SetRect(Int32, Int32, Rect) Sets the specified cell's UnityEngine.Rect struct. Declaration public override ulong SetRect(int rowIdentifier, int columnIdentifier, Rect newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Rect newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetRect(Int32, Int32, Rect) | Improve this Doc View Source SetRectInt(Int32, Int32, RectInt) Sets the specified cell's UnityEngine.RectInt struct. Declaration public override ulong SetRectInt(int rowIdentifier, int columnIdentifier, RectInt newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.RectInt newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetRectInt(Int32, Int32, RectInt) | Improve this Doc View Source SetRowName(Int32, String) Set the user-friendly name of the identified row. Declaration public override void SetRowName(int rowIdentifier, string rowName) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.String rowName The desired user-friendly name for the row. Overrides DataTableBase.SetRowName(Int32, String) | Improve this Doc View Source SetRowOrder(Int32, Int32) Set the specified row's order. Declaration public override void SetRowOrder(int rowIdentifier, int newSortOrder) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 newSortOrder The ordered index/position. Overrides DataTableBase.SetRowOrder(Int32, Int32) | Improve this Doc View Source SetSByte(Int32, Int32, SByte) Sets the specified cell's System.SByte value. Declaration public override ulong SetSByte(int rowIdentifier, int columnIdentifier, sbyte newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.SByte newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetSByte(Int32, Int32, SByte) | Improve this Doc View Source SetShort(Int32, Int32, Int16) Sets the specified cell's System.Int16 value. Declaration public override ulong SetShort(int rowIdentifier, int columnIdentifier, short newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.Int16 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetShort(Int32, Int32, Int16) | Improve this Doc View Source SetString(Int32, Int32, String) Sets the specified cell's System.String value. Declaration public override ulong SetString(int rowIdentifier, int columnIdentifier, string newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.String newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetString(Int32, Int32, String) | Improve this Doc View Source SetTypeNameForColumn(Int32, String) Set the type's assembly qualified name for the specified column. Declaration public override void SetTypeNameForColumn(int columnIdentifier, string assemblyQualifiedName) Parameters Type Name Description System.Int32 columnIdentifier The unique column identifier. System.String assemblyQualifiedName The assembly qualified name. Overrides DataTableBase.SetTypeNameForColumn(Int32, String) Remarks More info can be found at https://learn.microsoft.com/en-us/dotnet/api/system.type.assemblyqualifiedname?view=net-7.0 . This allows for filtering of the generated fields. | Improve this Doc View Source SetUInt(Int32, Int32, UInt32) Sets the specified cell's System.UInt32 value. Declaration public override ulong SetUInt(int rowIdentifier, int columnIdentifier, uint newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.UInt32 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetUInt(Int32, Int32, UInt32) | Improve this Doc View Source SetULong(Int32, Int32, UInt64) Sets the specified cell's System.UInt64 value. Declaration public override ulong SetULong(int rowIdentifier, int columnIdentifier, ulong newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.UInt64 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetULong(Int32, Int32, UInt64) | Improve this Doc View Source SetUShort(Int32, Int32, UInt16) Sets the specified cell's System.UInt16 value. Declaration public override ulong SetUShort(int rowIdentifier, int columnIdentifier, ushort newValue) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. System.UInt16 newValue The updated value. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetUShort(Int32, Int32, UInt16) | Improve this Doc View Source SetVector2(Int32, Int32, Vector2) Sets the specified cell's UnityEngine.Vector2 struct. Declaration public override ulong SetVector2(int rowIdentifier, int columnIdentifier, Vector2 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector2 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetVector2(Int32, Int32, Vector2) | Improve this Doc View Source SetVector2Int(Int32, Int32, Vector2Int) Sets the specified cell's UnityEngine.Vector2Int struct. Declaration public override ulong SetVector2Int(int rowIdentifier, int columnIdentifier, Vector2Int newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector2Int newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetVector2Int(Int32, Int32, Vector2Int) | Improve this Doc View Source SetVector3(Int32, Int32, Vector3) Sets the specified cell's UnityEngine.Vector3 struct. Declaration public override ulong SetVector3(int rowIdentifier, int columnIdentifier, Vector3 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector3 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetVector3(Int32, Int32, Vector3) | Improve this Doc View Source SetVector3Int(Int32, Int32, Vector3Int) Sets the specified cell's UnityEngine.Vector3Int struct. Declaration public override ulong SetVector3Int(int rowIdentifier, int columnIdentifier, Vector3Int newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector3Int newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetVector3Int(Int32, Int32, Vector3Int) | Improve this Doc View Source SetVector4(Int32, Int32, Vector4) Sets the specified cell's UnityEngine.Vector4 struct. Declaration public override ulong SetVector4(int rowIdentifier, int columnIdentifier, Vector4 newStruct) Parameters Type Name Description System.Int32 rowIdentifier The unique row identifier. System.Int32 columnIdentifier The unique column identifier. UnityEngine.Vector4 newStruct The updated struct. Returns Type Description System.UInt64 The DataTableBase 's updated data version. Overrides DataTableBase.SetVector4(Int32, Int32, Vector4) Extension Methods ObjectExtensions.SafeDestroy(Object, Single) DataTableExtensions.GetCellValueAsString(DataTableBase, Int32, Int32, Serializable.SerializableTypes) DataTableExtensions.SetCellValueFromString(DataTableBase, Int32, Int32, String, Serializable.SerializableTypes)"
  },
  "api/GDX.Developer.CommandLineParser.html": {
    "href": "api/GDX.Developer.CommandLineParser.html",
    "title": "CommandLineParser | GDX",
    "keywords": "Class CommandLineParser A simplified commandline parser that handles arguments which follow the --FLAG or --KEY=VALUE format. Automatically initialized during normal runtime operations, however can be manually triggered for author time use cases as well. Inheritance System.Object CommandLineParser Namespace : GDX.Developer Syntax public static class CommandLineParser Remarks The prefix and divider are configurable via the Config , however the always, the FLAG and KEY will be Uppercase. Fields | Improve this Doc View Source Arguments The processed arguments found after parsing the arguments Declaration public static StringKeyDictionary<string> Arguments Field Value Type Description StringKeyDictionary < System.String > | Improve this Doc View Source Flags The processed flags found in the arguments. Declaration public static readonly List<string> Flags Field Value Type Description System.Collections.Generic.List < System.String > Methods | Improve this Doc View Source ProcessArguments(String[], Boolean) Process an array of arguments into Arguments and Flags . Declaration public static void ProcessArguments(string[] argumentArray, bool shouldClear = true) Parameters Type Name Description System.String [] argumentArray An array of arguments to process. System.Boolean shouldClear Should the storage containers be cleared."
  },
  "api/GDX.Developer.Conditionals.html": {
    "href": "api/GDX.Developer.Conditionals.html",
    "title": "Conditionals | GDX",
    "keywords": "Class Conditionals Constant indicators about conditional supports within the GDX package. Helpful indicators of which features are available through preprocessor gating. Inheritance System.Object Conditionals Namespace : GDX.Developer Syntax public static class Conditionals Fields | Improve this Doc View Source HasAddressablesPackage Is a compatible version of the Addressables package present in the project? Declaration public const bool HasAddressablesPackage = true Field Value Type Description System.Boolean | Improve this Doc View Source HasPlatformsPackage Is a compatible version of the Platforms package present in the project? Declaration public const bool HasPlatformsPackage = true Field Value Type Description System.Boolean | Improve this Doc View Source HasVisualScriptingPackage Is a compatible version of the Visual Scripting package present in the project? Declaration public const bool HasVisualScriptingPackage = true Field Value Type Description System.Boolean"
  },
  "api/GDX.Developer.ConsoleLog.html": {
    "href": "api/GDX.Developer.ConsoleLog.html",
    "title": "ConsoleLog | GDX",
    "keywords": "Class ConsoleLog Inheritance System.Object ConsoleLog Implements System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Namespace : GDX.Developer Syntax public class ConsoleLog : IList, ICollection, IEnumerable Constructors | Improve this Doc View Source ConsoleLog() Declaration public ConsoleLog() Fields | Improve this Doc View Source Version Declaration public uint Version Field Value Type Description System.UInt32 Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public object this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object | Improve this Doc View Source SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source Add(Object) Declaration public int Add(object value) Parameters Type Name Description System.Object value Returns Type Description System.Int32 | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(Object) Declaration public bool Contains(object value) Parameters Type Name Description System.Object value Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(Array, Int32) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description System.Array array System.Int32 index | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source GetEntryAt(Int32) Declaration public ConsoleLogEntry GetEntryAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description ConsoleLogEntry | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description System.Collections.IEnumerator | Improve this Doc View Source GetLastEntry() Declaration public ConsoleLogEntry GetLastEntry() Returns Type Description ConsoleLogEntry | Improve this Doc View Source IndexOf(Object) Declaration public int IndexOf(object value) Parameters Type Name Description System.Object value Returns Type Description System.Int32 | Improve this Doc View Source Insert(Int32, Object) Declaration public void Insert(int index, object value) Parameters Type Name Description System.Int32 index System.Object value | Improve this Doc View Source Remove(Object) Declaration public void Remove(object value) Parameters Type Name Description System.Object value | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index Implements System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/GDX.Developer.ConsoleLogEntry.html": {
    "href": "api/GDX.Developer.ConsoleLogEntry.html",
    "title": "ConsoleLogEntry | GDX",
    "keywords": "Struct ConsoleLogEntry Implements System.IComparable < ConsoleLogEntry > System.Collections.Generic.IComparer < ConsoleLogEntry > Namespace : GDX.Developer Syntax public struct ConsoleLogEntry : IComparable<ConsoleLogEntry>, IComparer<ConsoleLogEntry> Constructors | Improve this Doc View Source ConsoleLogEntry(LogType, String, String) Declaration public ConsoleLogEntry(LogType type, string message, string stackTrace = null) Parameters Type Name Description UnityEngine.LogType type System.String message System.String stackTrace Fields | Improve this Doc View Source Frame Declaration public int Frame Field Value Type Description System.Int32 | Improve this Doc View Source FrameCount Declaration public string FrameCount Field Value Type Description System.String | Improve this Doc View Source Level Declaration public LogType Level Field Value Type Description UnityEngine.LogType | Improve this Doc View Source Message Declaration public string Message Field Value Type Description System.String | Improve this Doc View Source StackTrace Declaration public string StackTrace Field Value Type Description System.String Methods | Improve this Doc View Source Compare(ConsoleLogEntry, ConsoleLogEntry) Declaration public int Compare(ConsoleLogEntry x, ConsoleLogEntry y) Parameters Type Name Description ConsoleLogEntry x ConsoleLogEntry y Returns Type Description System.Int32 | Improve this Doc View Source CompareTo(ConsoleLogEntry) Declaration public int CompareTo(ConsoleLogEntry other) Parameters Type Name Description ConsoleLogEntry other Returns Type Description System.Int32 Implements System.IComparable<T> System.Collections.Generic.IComparer<T>"
  },
  "api/GDX.Developer.html": {
    "href": "api/GDX.Developer.html",
    "title": "Namespace GDX.Developer | GDX",
    "keywords": "Namespace GDX.Developer Classes CommandLineParser A simplified commandline parser that handles arguments which follow the --FLAG or --KEY=VALUE format. Automatically initialized during normal runtime operations, however can be manually triggered for author time use cases as well. Conditionals Constant indicators about conditional supports within the GDX package. Helpful indicators of which features are available through preprocessor gating. ConsoleLog InputProxy A windows-based input simulator. ManagedUpdateSystem Profiling A set of functionality useful for creating profiling data to reason about the performance of an application. TextGenerator A formatted text generator useful for creating text based files with some semblance of organization. TransientReference A comparable weak reference to an object which will not prevent garbage collection. It will positively compare against similar targeted reference trackers as well as the actual target object. Structs ConsoleLogEntry InputProxy.HardwareInput A generic hardware input event. InputProxy.KeyboardInput A keyboard input event. InputProxy.MouseInput A mouse input event. SemanticVersion A Semantic Versioning structure. Interfaces ManagedUpdateSystem.IManagedEarlyUpdate ManagedUpdateSystem.IManagedFixedUpdate ManagedUpdateSystem.IManagedInitialization ManagedUpdateSystem.IManagedPostLateUpdate ManagedUpdateSystem.IManagedPreLateUpdate ManagedUpdateSystem.IManagedPreUpdate ManagedUpdateSystem.IManagedUpdate Enums InputProxy.KeyboardFlag A set of flags to describe various aspects of InputProxy.KeyboardInput , mainly used to define additional information related to Key . InputProxy.KeyCode Virtual key codes. InputProxy.MouseFlag A set of flags to describe various aspects of InputProxy.MouseInput , mainly used to define additional information related to Data . InputProxy.SynthesizeMethod"
  },
  "api/GDX.Developer.InputProxy.HardwareInput.html": {
    "href": "api/GDX.Developer.InputProxy.HardwareInput.html",
    "title": "InputProxy.HardwareInput | GDX",
    "keywords": "Struct InputProxy.HardwareInput A generic hardware input event. Namespace : GDX.Developer Syntax public struct HardwareInput Remarks Order and types matters as it is mapped into native, using 8 bytes. Constructors | Improve this Doc View Source HardwareInput(UInt32, UInt16, UInt16) Declaration public HardwareInput(uint message, ushort paramL, ushort paramH) Parameters Type Name Description System.UInt32 message System.UInt16 paramL System.UInt16 paramH Fields | Improve this Doc View Source Message The message generated by the input hardware. Declaration public uint Message Field Value Type Description System.UInt32 | Improve this Doc View Source ParamH The high-order word of the lParam parameter for uMsg. Declaration public ushort ParamH Field Value Type Description System.UInt16 | Improve this Doc View Source ParamL The low-order word of the lParam parameter for. Declaration public ushort ParamL Field Value Type Description System.UInt16 See Also https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-hardwareinput"
  },
  "api/GDX.Developer.InputProxy.html": {
    "href": "api/GDX.Developer.InputProxy.html",
    "title": "InputProxy | GDX",
    "keywords": "Class InputProxy A windows-based input simulator. Inheritance System.Object InputProxy Namespace : GDX.Developer Syntax public static class InputProxy Remarks This is NOT supported in batch mode operation of the editor. Methods | Improve this Doc View Source GetKeyCode(String) Declaration public static InputProxy.KeyCode GetKeyCode(string keyCode) Parameters Type Name Description System.String keyCode Returns Type Description InputProxy.KeyCode | Improve this Doc View Source IsExtendedKey(InputProxy.KeyCode) Declaration public static bool IsExtendedKey(InputProxy.KeyCode keyCode) Parameters Type Name Description InputProxy.KeyCode keyCode Returns Type Description System.Boolean See Also https://learn.microsoft.com/en-us/windows/win32/inputdev/about-keyboard-input | Improve this Doc View Source KeyPress(InputProxy.KeyCode, InputProxy.SynthesizeMethod) Declaration public static bool KeyPress(InputProxy.KeyCode keyCode, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.KeyCode keyCode InputProxy.SynthesizeMethod method Returns Type Description System.Boolean | Improve this Doc View Source MouseClick(Int32, Int32, Boolean, InputProxy.SynthesizeMethod) Declaration public static bool MouseClick(int x, int y, bool virtualMode = false, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description System.Int32 x System.Int32 y System.Boolean virtualMode InputProxy.SynthesizeMethod method Returns Type Description System.Boolean | Improve this Doc View Source Synthesize(InputProxy.HardwareInput, InputProxy.SynthesizeMethod) Declaration public static bool Synthesize(InputProxy.HardwareInput hardwareInput, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.HardwareInput hardwareInput InputProxy.SynthesizeMethod method Returns Type Description System.Boolean | Improve this Doc View Source Synthesize(InputProxy.HardwareInput[], InputProxy.SynthesizeMethod) Declaration public static uint Synthesize(InputProxy.HardwareInput[] hardwareInputs, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.HardwareInput [] hardwareInputs InputProxy.SynthesizeMethod method Returns Type Description System.UInt32 | Improve this Doc View Source Synthesize(InputProxy.KeyboardInput, InputProxy.SynthesizeMethod) Declaration public static bool Synthesize(InputProxy.KeyboardInput keyboardInput, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.KeyboardInput keyboardInput InputProxy.SynthesizeMethod method Returns Type Description System.Boolean | Improve this Doc View Source Synthesize(InputProxy.KeyboardInput[], InputProxy.SynthesizeMethod) Declaration public static uint Synthesize(InputProxy.KeyboardInput[] keyboardInputs, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.KeyboardInput [] keyboardInputs InputProxy.SynthesizeMethod method Returns Type Description System.UInt32 | Improve this Doc View Source Synthesize(InputProxy.MouseInput, InputProxy.SynthesizeMethod) Declaration public static bool Synthesize(InputProxy.MouseInput mouseInput, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.MouseInput mouseInput InputProxy.SynthesizeMethod method Returns Type Description System.Boolean | Improve this Doc View Source Synthesize(InputProxy.MouseInput[], InputProxy.SynthesizeMethod) Declaration public static uint Synthesize(InputProxy.MouseInput[] mouseInputs, InputProxy.SynthesizeMethod method = InputProxy.SynthesizeMethod.Native) Parameters Type Name Description InputProxy.MouseInput [] mouseInputs InputProxy.SynthesizeMethod method Returns Type Description System.UInt32"
  },
  "api/GDX.Developer.InputProxy.KeyboardFlag.html": {
    "href": "api/GDX.Developer.InputProxy.KeyboardFlag.html",
    "title": "InputProxy.KeyboardFlag | GDX",
    "keywords": "Enum InputProxy.KeyboardFlag A set of flags to describe various aspects of InputProxy.KeyboardInput , mainly used to define additional information related to Key . Namespace : GDX.Developer Syntax [Flags] public enum KeyboardFlag : uint Fields Name Description ExtendedKey Is the key part of the extended set. KeyDown KeyUp A key has been released. ScanCode Unicode Extension Methods EnumExtensions.HasFlags<InputProxy.KeyboardFlag>(InputProxy.KeyboardFlag)"
  },
  "api/GDX.Developer.InputProxy.KeyboardInput.html": {
    "href": "api/GDX.Developer.InputProxy.KeyboardInput.html",
    "title": "InputProxy.KeyboardInput | GDX",
    "keywords": "Struct InputProxy.KeyboardInput A keyboard input event. Namespace : GDX.Developer Syntax public struct KeyboardInput Remarks Order and types matters as it is mapped into native, using 24 bytes. Constructors | Improve this Doc View Source KeyboardInput(InputProxy.KeyCode, InputProxy.KeyboardFlag, UInt32, IntPtr) Declaration public KeyboardInput(InputProxy.KeyCode key, InputProxy.KeyboardFlag flags, uint timestamp, IntPtr extraInfo) Parameters Type Name Description InputProxy.KeyCode key InputProxy.KeyboardFlag flags System.UInt32 timestamp System.IntPtr extraInfo Fields | Improve this Doc View Source ExtraInfo Declaration public IntPtr ExtraInfo Field Value Type Description System.IntPtr | Improve this Doc View Source Flags Declaration public readonly uint Flags Field Value Type Description System.UInt32 | Improve this Doc View Source Key Declaration public readonly ushort Key Field Value Type Description System.UInt16 | Improve this Doc View Source ScanCode Declaration public readonly ushort ScanCode Field Value Type Description System.UInt16 | Improve this Doc View Source Timestamp The timestamp of the event, if 0, OS will just make its own. This is useful if you want to simulate a duration of time between input events. Declaration public uint Timestamp Field Value Type Description System.UInt32 See Also https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-keybdinput"
  },
  "api/GDX.Developer.InputProxy.KeyCode.html": {
    "href": "api/GDX.Developer.InputProxy.KeyCode.html",
    "title": "InputProxy.KeyCode | GDX",
    "keywords": "Enum InputProxy.KeyCode Virtual key codes. Namespace : GDX.Developer Syntax public enum KeyCode : ushort Fields Name Description A Alt Applications B Backspace C CapsLock Clear Control D Delete Down E End Escape F F1 F10 F11 F12 F2 F3 F4 F5 F6 F7 F8 F9 G H Home I Insert Invalid J K L Left LeftControl LeftShift LeftWindows M N Number0 Number1 Number2 Number3 Number4 Number5 Number6 Number7 Number8 Number9 NumLock NumPad0 NumPad1 NumPad2 NumPad3 NumPad4 NumPad5 NumPad6 NumPad7 NumPad8 NumPad9 NumPadAdd NumPadDecimal NumPadDivide NumPadMultiply NumPadSubtract O P PageDown PageUp Pause PrintScreen Q R Return Right RightControl RightShift RightWindows S ScrollLock Shift Sleep Space T Tab U Up V W X Y Z See Also https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes Extension Methods EnumExtensions.HasFlags<InputProxy.KeyCode>(InputProxy.KeyCode)"
  },
  "api/GDX.Developer.InputProxy.MouseFlag.html": {
    "href": "api/GDX.Developer.InputProxy.MouseFlag.html",
    "title": "InputProxy.MouseFlag | GDX",
    "keywords": "Enum InputProxy.MouseFlag A set of flags to describe various aspects of InputProxy.MouseInput , mainly used to define additional information related to Data . Namespace : GDX.Developer Syntax [Flags] public enum MouseFlag : uint Fields Name Description Absolute Indicates provided X/Y are in absolute screenspace instead of deltas of previous position. HorizontalWheel LeftDown LeftUp MiddleDown MiddleUp Move RightDown RightUp VerticalWheel VirtualDesk Used in multi-desktop scenarios where you want to treat X/Y against the combined screen space. You must also use Absolute . Extension Methods EnumExtensions.HasFlags<InputProxy.MouseFlag>(InputProxy.MouseFlag)"
  },
  "api/GDX.Developer.InputProxy.MouseInput.html": {
    "href": "api/GDX.Developer.InputProxy.MouseInput.html",
    "title": "InputProxy.MouseInput | GDX",
    "keywords": "Struct InputProxy.MouseInput A mouse input event. Namespace : GDX.Developer Syntax public struct MouseInput Remarks Order and types matters as it is mapped into native, using 32 bytes. Constructors | Improve this Doc View Source MouseInput(Int32, Int32, UInt32, InputProxy.MouseFlag, UInt32, IntPtr) Declaration public MouseInput(int x, int y, uint data, InputProxy.MouseFlag flags, uint timestamp, IntPtr extraInfo) Parameters Type Name Description System.Int32 x System.Int32 y System.UInt32 data InputProxy.MouseFlag flags System.UInt32 timestamp System.IntPtr extraInfo Fields | Improve this Doc View Source Data Declaration public uint Data Field Value Type Description System.UInt32 | Improve this Doc View Source ExtraInfo Declaration public IntPtr ExtraInfo Field Value Type Description System.IntPtr | Improve this Doc View Source Flags Declaration public readonly uint Flags Field Value Type Description System.UInt32 | Improve this Doc View Source Timestamp The timestamp of the event, if 0, OS will just make its own. This is useful if you want to simulate a duration of time between input events. Declaration public uint Timestamp Field Value Type Description System.UInt32 | Improve this Doc View Source X The absolute X position or delta depending on the InputProxy.MouseFlag used. Declaration public readonly int X Field Value Type Description System.Int32 | Improve this Doc View Source Y The absolute Y position or delta depending on the InputProxy.MouseFlag used. Declaration public readonly int Y Field Value Type Description System.Int32 See Also https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-mouseinput"
  },
  "api/GDX.Developer.InputProxy.SynthesizeMethod.html": {
    "href": "api/GDX.Developer.InputProxy.SynthesizeMethod.html",
    "title": "InputProxy.SynthesizeMethod | GDX",
    "keywords": "Enum InputProxy.SynthesizeMethod Namespace : GDX.Developer Syntax public enum SynthesizeMethod Fields Name Description InputSystem Native Extension Methods EnumExtensions.HasFlags<InputProxy.SynthesizeMethod>(InputProxy.SynthesizeMethod)"
  },
  "api/GDX.Developer.ManagedUpdateSystem.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.html",
    "title": "ManagedUpdateSystem | GDX",
    "keywords": "Class ManagedUpdateSystem Inheritance System.Object ManagedUpdateSystem Namespace : GDX.Developer Syntax public static class ManagedUpdateSystem Methods | Improve this Doc View Source AddToPlayerLoop() Declaration public static void AddToPlayerLoop() | Improve this Doc View Source IsRunning() Declaration public static bool IsRunning() Returns Type Description System.Boolean | Improve this Doc View Source RegisterManagedEarlyUpdate(ManagedUpdateSystem.IManagedEarlyUpdate) Declaration public static void RegisterManagedEarlyUpdate(ManagedUpdateSystem.IManagedEarlyUpdate managedEarlyUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedEarlyUpdate managedEarlyUpdate | Improve this Doc View Source RegisterManagedFixedUpdate(ManagedUpdateSystem.IManagedFixedUpdate) Declaration public static void RegisterManagedFixedUpdate(ManagedUpdateSystem.IManagedFixedUpdate managedFixedUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedFixedUpdate managedFixedUpdate | Improve this Doc View Source RegisterManagedInitialization(ManagedUpdateSystem.IManagedInitialization) Declaration public static void RegisterManagedInitialization(ManagedUpdateSystem.IManagedInitialization managedInitialization) Parameters Type Name Description ManagedUpdateSystem.IManagedInitialization managedInitialization | Improve this Doc View Source RegisterManagedPostLateUpdate(ManagedUpdateSystem.IManagedPostLateUpdate) Declaration public static void RegisterManagedPostLateUpdate(ManagedUpdateSystem.IManagedPostLateUpdate managedPostLateUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedPostLateUpdate managedPostLateUpdate | Improve this Doc View Source RegisterManagedPreLateUpdate(ManagedUpdateSystem.IManagedPreLateUpdate) Declaration public static void RegisterManagedPreLateUpdate(ManagedUpdateSystem.IManagedPreLateUpdate managedPreLateUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedPreLateUpdate managedPreLateUpdate | Improve this Doc View Source RegisterManagedPreUpdate(ManagedUpdateSystem.IManagedPreUpdate) Declaration public static void RegisterManagedPreUpdate(ManagedUpdateSystem.IManagedPreUpdate managedPreUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedPreUpdate managedPreUpdate | Improve this Doc View Source RegisterManagedUpdate(ManagedUpdateSystem.IManagedUpdate) Declaration public static void RegisterManagedUpdate(ManagedUpdateSystem.IManagedUpdate managedUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedUpdate managedUpdate | Improve this Doc View Source RemoveFromPlayerLoop() Declaration public static void RemoveFromPlayerLoop() | Improve this Doc View Source RemoveManagedInitialization(ManagedUpdateSystem.IManagedInitialization) Declaration public static void RemoveManagedInitialization(ManagedUpdateSystem.IManagedInitialization managedInitialization) Parameters Type Name Description ManagedUpdateSystem.IManagedInitialization managedInitialization | Improve this Doc View Source UnregisterManagedEarlyUpdate(ManagedUpdateSystem.IManagedEarlyUpdate) Declaration public static void UnregisterManagedEarlyUpdate(ManagedUpdateSystem.IManagedEarlyUpdate managedEarlyUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedEarlyUpdate managedEarlyUpdate | Improve this Doc View Source UnregisterManagedFixedUpdate(ManagedUpdateSystem.IManagedFixedUpdate) Declaration public static void UnregisterManagedFixedUpdate(ManagedUpdateSystem.IManagedFixedUpdate managedFixedUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedFixedUpdate managedFixedUpdate | Improve this Doc View Source UnregisterManagedPostLateUpdate(ManagedUpdateSystem.IManagedPostLateUpdate) Declaration public static void UnregisterManagedPostLateUpdate(ManagedUpdateSystem.IManagedPostLateUpdate managedPostLateUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedPostLateUpdate managedPostLateUpdate | Improve this Doc View Source UnregisterManagedPreLateUpdate(ManagedUpdateSystem.IManagedPreLateUpdate) Declaration public static void UnregisterManagedPreLateUpdate(ManagedUpdateSystem.IManagedPreLateUpdate managedPreLateUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedPreLateUpdate managedPreLateUpdate | Improve this Doc View Source UnregisterManagedPreUpdate(ManagedUpdateSystem.IManagedPreUpdate) Declaration public static void UnregisterManagedPreUpdate(ManagedUpdateSystem.IManagedPreUpdate managedPreUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedPreUpdate managedPreUpdate | Improve this Doc View Source UnregisterManagedUpdate(ManagedUpdateSystem.IManagedUpdate) Declaration public static void UnregisterManagedUpdate(ManagedUpdateSystem.IManagedUpdate managedUpdate) Parameters Type Name Description ManagedUpdateSystem.IManagedUpdate managedUpdate"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedEarlyUpdate.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedEarlyUpdate.html",
    "title": "ManagedUpdateSystem.IManagedEarlyUpdate | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedEarlyUpdate Namespace : GDX.Developer Syntax public interface IManagedEarlyUpdate Methods | Improve this Doc View Source ManagedEarlyUpdate(Single, Single) Declaration void ManagedEarlyUpdate(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedFixedUpdate.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedFixedUpdate.html",
    "title": "ManagedUpdateSystem.IManagedFixedUpdate | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedFixedUpdate Namespace : GDX.Developer Syntax public interface IManagedFixedUpdate Methods | Improve this Doc View Source ManagedFixedUpdate(Single, Single) Declaration void ManagedFixedUpdate(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedInitialization.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedInitialization.html",
    "title": "ManagedUpdateSystem.IManagedInitialization | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedInitialization Namespace : GDX.Developer Syntax public interface IManagedInitialization Methods | Improve this Doc View Source ManagedInitialization(Single, Single) Declaration void ManagedInitialization(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedPostLateUpdate.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedPostLateUpdate.html",
    "title": "ManagedUpdateSystem.IManagedPostLateUpdate | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedPostLateUpdate Namespace : GDX.Developer Syntax public interface IManagedPostLateUpdate Methods | Improve this Doc View Source ManagedPostLateUpdate(Single, Single) Declaration void ManagedPostLateUpdate(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedPreLateUpdate.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedPreLateUpdate.html",
    "title": "ManagedUpdateSystem.IManagedPreLateUpdate | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedPreLateUpdate Namespace : GDX.Developer Syntax public interface IManagedPreLateUpdate Methods | Improve this Doc View Source ManagedPreLateUpdate(Single, Single) Declaration void ManagedPreLateUpdate(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedPreUpdate.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedPreUpdate.html",
    "title": "ManagedUpdateSystem.IManagedPreUpdate | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedPreUpdate Namespace : GDX.Developer Syntax public interface IManagedPreUpdate Methods | Improve this Doc View Source ManagedPreUpdate(Single, Single) Declaration void ManagedPreUpdate(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.ManagedUpdateSystem.IManagedUpdate.html": {
    "href": "api/GDX.Developer.ManagedUpdateSystem.IManagedUpdate.html",
    "title": "ManagedUpdateSystem.IManagedUpdate | GDX",
    "keywords": "Interface ManagedUpdateSystem.IManagedUpdate Namespace : GDX.Developer Syntax public interface IManagedUpdate Methods | Improve this Doc View Source ManagedUpdate(Single, Single) Declaration void ManagedUpdate(float deltaTime, float unscaledDeltaTime) Parameters Type Name Description System.Single deltaTime System.Single unscaledDeltaTime"
  },
  "api/GDX.Developer.Profiling.html": {
    "href": "api/GDX.Developer.Profiling.html",
    "title": "Profiling | GDX",
    "keywords": "Class Profiling A set of functionality useful for creating profiling data to reason about the performance of an application. Inheritance System.Object Profiling Namespace : GDX.Developer Syntax public class Profiling Methods | Improve this Doc View Source StartProfiling(String, Boolean) Setup a profiling session used during an import. This will create a binary file when finished profiling. Declaration public static void StartProfiling(string prefix = null, bool manageProfiles = true) Parameters Type Name Description System.String prefix Optional descriptor for profile run used in filename. System.Boolean manageProfiles Should the number of profiles be managed. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source StopProfiling() Finalize a profiling session during an import. Declaration public static void StopProfiling() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TakeMemorySnapshot(String, Action<String, Boolean>, CaptureFlags, Boolean) Take a memory snapshot and save it to GetOutputFolder(String) . Declaration public static void TakeMemorySnapshot(string prefix = null, Action<string, bool> finishCallback = null, CaptureFlags captureFlags = CaptureFlags.ManagedObjects | CaptureFlags.NativeObjects | CaptureFlags.NativeAllocations | CaptureFlags.NativeAllocationSites | CaptureFlags.NativeStackTraces, bool manageCaptures = true) Parameters Type Name Description System.String prefix Override the default prefix GDX.Developer.Profiling.k_MemoryCaptureFilePrefix . System.Action < System.String , System.Boolean > finishCallback Optional callback action once the memory capture has been made. UnityEngine.Profiling.Memory.Experimental.CaptureFlags captureFlags Override of the memory capture flags, defaults to GDX.Developer.Profiling.k_AllCaptureFlags . System.Boolean manageCaptures Should the number of captures found in the output folder be managed? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.BuildVerification.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.html",
    "title": "Namespace GDX.Developer.Reports.BuildVerification | GDX",
    "keywords": "Namespace GDX.Developer.Reports.BuildVerification Classes SimpleTestBehaviour TestRunner Structs TestScene Interfaces ITestBehaviour A build verification test behaviour interface."
  },
  "api/GDX.Developer.Reports.BuildVerification.ITestBehaviour.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.ITestBehaviour.html",
    "title": "ITestBehaviour | GDX",
    "keywords": "Interface ITestBehaviour A build verification test behaviour interface. Namespace : GDX.Developer.Reports.BuildVerification Syntax public interface ITestBehaviour Methods | Improve this Doc View Source Check() Declaration TestCase Check() Returns Type Description TestCase | Improve this Doc View Source GetIdentifier() Get some semblance of identifiable information for a test. Declaration string GetIdentifier() Returns Type Description System.String The System.String identifier for the test. | Improve this Doc View Source Setup() Setup for the test. Declaration void Setup() | Improve this Doc View Source TearDown() Tear down after the test. Declaration void TearDown()"
  },
  "api/GDX.Developer.Reports.BuildVerification.SimpleTestBehaviour.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.SimpleTestBehaviour.html",
    "title": "SimpleTestBehaviour | GDX",
    "keywords": "Class SimpleTestBehaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SimpleTestBehaviour Implements ITestBehaviour Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag Namespace : GDX.Developer.Reports.BuildVerification Syntax public abstract class SimpleTestBehaviour : MonoBehaviour, ITestBehaviour Methods | Improve this Doc View Source Check() Declaration public abstract TestCase Check() Returns Type Description TestCase | Improve this Doc View Source GetIdentifier() Declaration public abstract string GetIdentifier() Returns Type Description System.String | Improve this Doc View Source Setup() Setup for the test. Declaration public virtual void Setup() | Improve this Doc View Source TearDown() Tear down after the test. Declaration public virtual void TearDown() Implements ITestBehaviour Extension Methods MonoBehaviourExtensions.GetFirstComponentInChildrenComplex<T>(MonoBehaviour, Boolean, Boolean, Int32) ObjectExtensions.SafeDestroy(Object, Single)"
  },
  "api/GDX.Developer.Reports.BuildVerification.TestRunner.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.TestRunner.html",
    "title": "TestRunner | GDX",
    "keywords": "Class TestRunner Inheritance System.Object TestRunner Namespace : GDX.Developer.Reports.BuildVerification Syntax public static class TestRunner Methods | Improve this Doc View Source AddTest(SimpleTestBehaviour) Declaration public static void AddTest(SimpleTestBehaviour simpleTest) Parameters Type Name Description SimpleTestBehaviour simpleTest | Improve this Doc View Source Execute(TestScene) Declaration public static async Task Execute(TestScene testScene) Parameters Type Name Description TestScene testScene Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Execute(TestScene[]) Declaration public static async Task Execute(TestScene[] scenes) Parameters Type Name Description TestScene [] scenes Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source RemoveTest(SimpleTestBehaviour) Declaration public static void RemoveTest(SimpleTestBehaviour simpleTest) Parameters Type Name Description SimpleTestBehaviour simpleTest"
  },
  "api/GDX.Developer.Reports.BuildVerification.TestScene.html": {
    "href": "api/GDX.Developer.Reports.BuildVerification.TestScene.html",
    "title": "TestScene | GDX",
    "keywords": "Struct TestScene Namespace : GDX.Developer.Reports.BuildVerification Syntax public readonly struct TestScene Constructors | Improve this Doc View Source TestScene(Int32, Int32, Int32, Int32) Declaration public TestScene(int buildIndex, int loadTimeout = 10000, int testTimeout = 30000, int unloadTimeout = 10000) Parameters Type Name Description System.Int32 buildIndex System.Int32 loadTimeout System.Int32 testTimeout System.Int32 unloadTimeout Fields | Improve this Doc View Source BuildIndex Declaration public readonly int BuildIndex Field Value Type Description System.Int32 | Improve this Doc View Source LoadTimeout Declaration public readonly int LoadTimeout Field Value Type Description System.Int32 | Improve this Doc View Source ScenePath Declaration public readonly string ScenePath Field Value Type Description System.String | Improve this Doc View Source TestTimeout Declaration public readonly int TestTimeout Field Value Type Description System.Int32 | Improve this Doc View Source UnloadTimeout Declaration public readonly int UnloadTimeout Field Value Type Description System.Int32 Methods | Improve this Doc View Source IsValid() Declaration public readonly bool IsValid() Returns Type Description System.Boolean"
  },
  "api/GDX.Developer.Reports.BuildVerificationReport.html": {
    "href": "api/GDX.Developer.Reports.BuildVerificationReport.html",
    "title": "BuildVerificationReport | GDX",
    "keywords": "Class BuildVerificationReport Inheritance System.Object BuildVerificationReport Namespace : GDX.Developer.Reports Syntax public static class BuildVerificationReport Methods | Improve this Doc View Source Assert(String, Boolean, String, Int32) Declaration public static TestCase Assert(string identifier, bool condition, string failMessage = null, int duration = 0) Parameters Type Name Description System.String identifier System.Boolean condition System.String failMessage System.Int32 duration Returns Type Description TestCase | Improve this Doc View Source OutputReport(String) Declaration public static string OutputReport(string outputPath) Parameters Type Name Description System.String outputPath Returns Type Description System.String | Improve this Doc View Source Panic(String) Declaration public static void Panic(string panicMessage) Parameters Type Name Description System.String panicMessage | Improve this Doc View Source Reset() Declaration public static void Reset() | Improve this Doc View Source Skip(String, String) Declaration public static TestCase Skip(string identifier, string skipMessage) Parameters Type Name Description System.String identifier System.String skipMessage Returns Type Description TestCase"
  },
  "api/GDX.Developer.Reports.html": {
    "href": "api/GDX.Developer.Reports.html",
    "title": "Namespace GDX.Developer.Reports | GDX",
    "keywords": "Namespace GDX.Developer.Reports Classes BuildVerificationReport NUnitReport ResourcesAuditReport An audit of loaded UnityEngine.Object for queried types. ResourcesDiffReport Structs ResourcesAuditReport.ResourcesQuery A structure that defines the string inputs necessary to query for loaded resources of a specific type."
  },
  "api/GDX.Developer.Reports.NUnit.html": {
    "href": "api/GDX.Developer.Reports.NUnit.html",
    "title": "Namespace GDX.Developer.Reports.NUnit | GDX",
    "keywords": "Namespace GDX.Developer.Reports.NUnit Classes Properties Property TestCase TestRun TestSuite"
  },
  "api/GDX.Developer.Reports.NUnit.Properties.html": {
    "href": "api/GDX.Developer.Reports.NUnit.Properties.html",
    "title": "Properties | GDX",
    "keywords": "Class Properties Inheritance System.Object Properties Namespace : GDX.Developer.Reports.NUnit Syntax public class Properties Properties | Improve this Doc View Source Property Declaration public List<Property> Property { get; set; } Property Value Type Description System.Collections.Generic.List < Property >"
  },
  "api/GDX.Developer.Reports.NUnit.Property.html": {
    "href": "api/GDX.Developer.Reports.NUnit.Property.html",
    "title": "Property | GDX",
    "keywords": "Class Property Inheritance System.Object Property Namespace : GDX.Developer.Reports.NUnit Syntax public class Property Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/GDX.Developer.Reports.NUnit.TestCase.html": {
    "href": "api/GDX.Developer.Reports.NUnit.TestCase.html",
    "title": "TestCase | GDX",
    "keywords": "Class TestCase Inheritance System.Object TestCase Namespace : GDX.Developer.Reports.NUnit Syntax public class TestCase Properties | Improve this Doc View Source Asserts Declaration public int Asserts { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ClassName Declaration public string ClassName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndTime Declaration public string EndTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source FullName Declaration public string FullName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source MethodName Declaration public string MethodName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Output Declaration public string Output { get; set; } Property Value Type Description System.String | Improve this Doc View Source Properties Declaration public Properties Properties { get; set; } Property Value Type Description Properties | Improve this Doc View Source Result Declaration public string Result { get; set; } Property Value Type Description System.String | Improve this Doc View Source RunState Declaration public string RunState { get; set; } Property Value Type Description System.String | Improve this Doc View Source Seed Declaration public string Seed { get; set; } Property Value Type Description System.String | Improve this Doc View Source StackTrace Declaration public string StackTrace { get; set; } Property Value Type Description System.String | Improve this Doc View Source StartTime Declaration public string StartTime { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetCategory() Declaration public string GetCategory() Returns Type Description System.String"
  },
  "api/GDX.Developer.Reports.NUnit.TestRun.html": {
    "href": "api/GDX.Developer.Reports.NUnit.TestRun.html",
    "title": "TestRun | GDX",
    "keywords": "Class TestRun Inheritance System.Object TestRun Namespace : GDX.Developer.Reports.NUnit Syntax public class TestRun Properties | Improve this Doc View Source Asserts Declaration public int Asserts { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CLRVersion Declaration public string CLRVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndTime Declaration public string EndTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source EngineVersion Declaration public string EngineVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source Failed Declaration public int Failed { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Inconclusive Declaration public int Inconclusive { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Passed Declaration public int Passed { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Result Declaration public string Result { get; } Property Value Type Description System.String | Improve this Doc View Source Skipped Declaration public int Skipped { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StartTime Declaration public string StartTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source TestCaseCount Declaration public int TestCaseCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TestSuite Declaration public TestSuite TestSuite { get; } Property Value Type Description TestSuite | Improve this Doc View Source Total Declaration public int Total { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Process(String, String, String, String) Declaration public void Process(string passedResult = \"Passed\", string failedResult = \"Failed\", string inconclusiveResult = \"Inconclusive\", string skippedResult = \"Skipped\") Parameters Type Name Description System.String passedResult System.String failedResult System.String inconclusiveResult System.String skippedResult"
  },
  "api/GDX.Developer.Reports.NUnit.TestSuite.html": {
    "href": "api/GDX.Developer.Reports.NUnit.TestSuite.html",
    "title": "TestSuite | GDX",
    "keywords": "Class TestSuite Inheritance System.Object TestSuite Namespace : GDX.Developer.Reports.NUnit Syntax public class TestSuite Fields | Improve this Doc View Source TestCases Declaration public readonly List<TestCase> TestCases Field Value Type Description System.Collections.Generic.List < TestCase > | Improve this Doc View Source TestSuites Declaration public readonly List<TestSuite> TestSuites Field Value Type Description System.Collections.Generic.List < TestSuite > Properties | Improve this Doc View Source Asserts Declaration public int Asserts { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ClassName Declaration public string ClassName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EndTime Declaration public string EndTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source Failed Declaration public int Failed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source FullName Declaration public string FullName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Inconclusive Declaration public int Inconclusive { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Label Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Passed Declaration public int Passed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Properties Declaration public Properties Properties { get; set; } Property Value Type Description Properties | Improve this Doc View Source Result Declaration public string Result { get; set; } Property Value Type Description System.String | Improve this Doc View Source RunState Declaration public string RunState { get; set; } Property Value Type Description System.String | Improve this Doc View Source Skipped Declaration public int Skipped { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StartTime Declaration public string StartTime { get; set; } Property Value Type Description System.String | Improve this Doc View Source TestCaseCount Declaration public int TestCaseCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total Declaration public int Total { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetFailCount() Declaration public int GetFailCount() Returns Type Description System.Int32 | Improve this Doc View Source GetPassCount() Declaration public int GetPassCount() Returns Type Description System.Int32 | Improve this Doc View Source Process(String, String, String, String) Declaration public void Process(string passedResult, string failedResult, string inconclusiveResult, string skippedResult) Parameters Type Name Description System.String passedResult System.String failedResult System.String inconclusiveResult System.String skippedResult"
  },
  "api/GDX.Developer.Reports.NUnitReport.html": {
    "href": "api/GDX.Developer.Reports.NUnitReport.html",
    "title": "NUnitReport | GDX",
    "keywords": "Class NUnitReport Inheritance System.Object NUnitReport Namespace : GDX.Developer.Reports Syntax public class NUnitReport Constructors | Improve this Doc View Source NUnitReport(String, String, String) Declaration public NUnitReport(string name = null, string fullName = null, string className = null) Parameters Type Name Description System.String name System.String fullName System.String className Fields | Improve this Doc View Source FailedString Declaration public const string FailedString = \"Failed\" Field Value Type Description System.String | Improve this Doc View Source PassedString Declaration public const string PassedString = \"Passed\" Field Value Type Description System.String | Improve this Doc View Source SkippedString Declaration public const string SkippedString = \"Skipped\" Field Value Type Description System.String Methods | Improve this Doc View Source AddDurationResult(String, Single, Boolean, String, TestSuite) Declaration public TestCase AddDurationResult(string name, float seconds, bool passed = true, string failMessage = null, TestSuite testSuite = null) Parameters Type Name Description System.String name System.Single seconds System.Boolean passed System.String failMessage TestSuite testSuite Returns Type Description TestCase | Improve this Doc View Source AddSkippedTest(String, String, TestSuite) Declaration public TestCase AddSkippedTest(string name, string skipMessage = null, TestSuite testSuite = null) Parameters Type Name Description System.String name System.String skipMessage TestSuite testSuite Returns Type Description TestCase | Improve this Doc View Source GetResult() Declaration public string GetResult() Returns Type Description System.String | Improve this Doc View Source GetResultCount() Declaration public int GetResultCount() Returns Type Description System.Int32 | Improve this Doc View Source GetRootSuite() Declaration public TestSuite GetRootSuite() Returns Type Description TestSuite | Improve this Doc View Source Process() Declaration public void Process() | Improve this Doc View Source SetForceFail() Declaration public void SetForceFail() | Improve this Doc View Source ToString() Builds and returns the NUnit formatted report. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Remarks Can result in a UTF-16 based XML document."
  },
  "api/GDX.Developer.Reports.Resource.html": {
    "href": "api/GDX.Developer.Reports.Resource.html",
    "title": "Namespace GDX.Developer.Reports.Resource | GDX",
    "keywords": "Namespace GDX.Developer.Reports.Resource Classes ResourceReport ResourceReportContext Context for generating a ResourceReport based report."
  },
  "api/GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo.html",
    "title": "AssetBundleObjectInfo | GDX",
    "keywords": "Class AssetBundleObjectInfo Inheritance System.Object ObjectInfo AssetBundleObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class AssetBundleObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source AssetCount Declaration public int AssetCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsStreamedSceneAssetBundle Declaration public bool IsStreamedSceneAssetBundle Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.html",
    "title": "Namespace GDX.Developer.Reports.Resource.Objects | GDX",
    "keywords": "Namespace GDX.Developer.Reports.Resource.Objects Classes AssetBundleObjectInfo MeshObjectInfo ObjectInfo An information storage object for a target System.Object . ObjectInfoFactory ShaderObjectInfo TextureObjectInfo"
  },
  "api/GDX.Developer.Reports.Resource.Objects.MeshObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.MeshObjectInfo.html",
    "title": "MeshObjectInfo | GDX",
    "keywords": "Class MeshObjectInfo Inheritance System.Object ObjectInfo MeshObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class MeshObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source IsReadable Declaration public bool IsReadable Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source SubMeshCount Declaration public int SubMeshCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Triangles Declaration public int Triangles Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.MeshObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source VertexCount Declaration public int VertexCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.ObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.ObjectInfo.html",
    "title": "ObjectInfo | GDX",
    "keywords": "Class ObjectInfo An information storage object for a target System.Object . Inheritance System.Object ObjectInfo AssetBundleObjectInfo MeshObjectInfo ShaderObjectInfo TextureObjectInfo Implements System.IComparable Namespace : GDX.Developer.Reports.Resource.Objects Syntax public class ObjectInfo : IComparable Fields | Improve this Doc View Source CopyCount The number of copies of the Reference object known by Unity. Declaration public uint CopyCount Field Value Type Description System.UInt32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MemoryUsage The memory usage of the actual Reference object (in bytes). Declaration public long MemoryUsage Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Name The name of the Reference object. Declaration public string Name Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Reference A TransientReference to the target object. Declaration public TransientReference Reference Field Value Type Description TransientReference Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TotalMemoryUsage The total memory usage of the Reference object (in bytes). Declaration public long TotalMemoryUsage Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Type The cached Type of the Reference object. Declaration public Type Type Field Value Type Description System.Type Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition The fully qualified reflection definition of the ObjectInfo . Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.ObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public virtual ObjectInfo Clone() Returns Type Description ObjectInfo Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CompareTo(Object) Evaluate if the compared ObjectInfo utilizes more memory then this one. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj The ObjectInfo to compare against. Returns Type Description System.Int32 1 if larger, otherwise 0. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Get additional information about the specific Reference . Declaration public virtual string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String A System.String of additional information. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder, Boolean) Declaration public void Output(ResourceReportContext context, StringBuilder builder, bool stripUnicode = true) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder System.Boolean stripUnicode Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Populate an ObjectInfo from the targetObject . Optionally providing an existing reference created prior. Declaration public virtual void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject The System.Object which to cache information about. TransientReference reference An existing TransientReference targeting the targetObject . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.ObjectInfoFactory.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.ObjectInfoFactory.html",
    "title": "ObjectInfoFactory | GDX",
    "keywords": "Class ObjectInfoFactory Inheritance System.Object ObjectInfoFactory Namespace : GDX.Developer.Reports.Resource.Objects Syntax public static class ObjectInfoFactory Methods | Improve this Doc View Source GetObjectInfo(Type) Declaration public static ObjectInfo GetObjectInfo(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description ObjectInfo Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetObjectInfoType(Type) Declaration public static Type GetObjectInfoType(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description System.Type Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo.html",
    "title": "ShaderObjectInfo | GDX",
    "keywords": "Class ShaderObjectInfo Inheritance System.Object ObjectInfo ShaderObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class ShaderObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source IsSupported Declaration public bool IsSupported Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source PassCount Declaration public int PassCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Get additional information about the specific Reference . Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String A System.String of additional information. Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.Objects.TextureObjectInfo.html": {
    "href": "api/GDX.Developer.Reports.Resource.Objects.TextureObjectInfo.html",
    "title": "TextureObjectInfo | GDX",
    "keywords": "Class TextureObjectInfo Inheritance System.Object ObjectInfo TextureObjectInfo Implements System.IComparable Inherited Members ObjectInfo.CopyCount ObjectInfo.MemoryUsage ObjectInfo.Name ObjectInfo.Reference ObjectInfo.TotalMemoryUsage ObjectInfo.Type ObjectInfo.CompareTo(Object) ObjectInfo.Output(ResourceReportContext, StringBuilder, Boolean) Namespace : GDX.Developer.Reports.Resource.Objects Syntax public sealed class TextureObjectInfo : ObjectInfo, IComparable Fields | Improve this Doc View Source Format Declaration public GraphicsFormat Format Field Value Type Description UnityEngine.Experimental.Rendering.GraphicsFormat Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Height Declaration public int Height Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsReadable Declaration public bool IsReadable Field Value Type Description System.Boolean Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TypeDefinition Declaration public const string TypeDefinition = \"GDX.Developer.Reports.Resource.Objects.TextureObjectInfo,GDX\" Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Width Declaration public int Width Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Clone() Create a clone of this object. Declaration public override ObjectInfo Clone() Returns Type Description ObjectInfo Overrides ObjectInfo.Clone() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetDetailedInformation(Int32) Declaration public override string GetDetailedInformation(int maximumWidth) Parameters Type Name Description System.Int32 maximumWidth Returns Type Description System.String Overrides ObjectInfo.GetDetailedInformation(Int32) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Populate(Object, TransientReference) Declaration public override void Populate(Object targetObject, TransientReference reference = null) Parameters Type Name Description UnityEngine.Object targetObject TransientReference reference Overrides ObjectInfo.Populate(Object, TransientReference) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Implements System.IComparable"
  },
  "api/GDX.Developer.Reports.Resource.ResourceReport.html": {
    "href": "api/GDX.Developer.Reports.Resource.ResourceReport.html",
    "title": "ResourceReport | GDX",
    "keywords": "Class ResourceReport Inheritance System.Object ResourceReport ResourcesAuditReport ResourcesDiffReport Namespace : GDX.Developer.Reports.Resource Syntax public abstract class ResourceReport Methods | Improve this Doc View Source CreateDivider(ResourceReportContext, Char) Create a sized divider string for use in generating reports. Declaration public static string CreateDivider(ResourceReportContext context, char divider = '-') Parameters Type Name Description ResourceReportContext context Contextual information regarding the generation of the report. System.Char divider The optional character to use as the divider. Returns Type Description System.String A sized string to be used as a divider. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CreateHeader(ResourceReportContext, String, Char) Create a header with title with repeated decorator s on the sides, filling out to CharacterWidth . Declaration public static string CreateHeader(ResourceReportContext context, string title, char decorator = '=') Parameters Type Name Description ResourceReportContext context Contextual information regarding the generation of the report. System.String title The text to be treated as the title for the header. System.Char decorator The optional character to be used as the decorator. Returns Type Description System.String A sized string to be used as a header. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CreateKeyValuePair(ResourceReportContext, String, String) Declaration public static string CreateKeyValuePair(ResourceReportContext context, string itemKey, string itemValue) Parameters Type Name Description ResourceReportContext context System.String itemKey System.String itemValue Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CreateYesNo(Boolean) Declaration public static string CreateYesNo(bool flag) Parameters Type Name Description System.Boolean flag Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext) Output the report format as an array of System.String . Declaration public string[] Output(ResourceReportContext context = null) Parameters Type Name Description ResourceReportContext context Returns Type Description System.String [] A generated report as an array of System.String . Remarks It is usually best to provide a System.Text.StringBuilder or System.IO.StreamWriter instead. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(StreamWriter, Int32, ResourceReportContext) Output the report format utilizing the provided writer , optionally limiting the write buffers by bufferSize . Declaration public bool Output(StreamWriter writer, int bufferSize = 1024, ResourceReportContext context = null) Parameters Type Name Description System.IO.StreamWriter writer A System.IO.StreamWriter instance to use for output. System.Int32 bufferSize The write buffer size. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if the report was successfully written to the provided writer . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(StringBuilder, ResourceReportContext) Output the report format utilizing the provided builder . Declaration public abstract bool Output(StringBuilder builder, ResourceReportContext context = null) Parameters Type Name Description System.Text.StringBuilder builder A System.Text.StringBuilder to use when generating the report. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if report was added to builder . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source PositiveSign(Int32) Declaration public static string PositiveSign(int targetValue) Parameters Type Name Description System.Int32 targetValue Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source PositiveSign(Int64) Declaration public static string PositiveSign(long targetValue) Parameters Type Name Description System.Int64 targetValue Returns Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.ResourceReportContext.html": {
    "href": "api/GDX.Developer.Reports.Resource.ResourceReportContext.html",
    "title": "ResourceReportContext | GDX",
    "keywords": "Class ResourceReportContext Context for generating a ResourceReport based report. Inheritance System.Object ResourceReportContext Namespace : GDX.Developer.Reports.Resource Syntax public sealed class ResourceReportContext Constructors | Improve this Doc View Source ResourceReportContext(Int32) Declaration public ResourceReportContext(int characterWidth = 120) Parameters Type Name Description System.Int32 characterWidth Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source CharacterWidth Declaration public readonly int CharacterWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KeyValuePairInfoWidth Declaration public readonly int KeyValuePairInfoWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KeyValuePairWidth Declaration public readonly int KeyValuePairWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectInfoWidth Declaration public readonly int ObjectInfoWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectNameWidth Declaration public readonly int ObjectNameWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectSizeWidth Declaration public readonly int ObjectSizeWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectTypeWidth Declaration public readonly int ObjectTypeWidth Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Sections.ApplicationSection.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.ApplicationSection.html",
    "title": "ApplicationSection | GDX",
    "keywords": "Struct ApplicationSection Namespace : GDX.Developer.Reports.Resource.Sections Syntax public readonly struct ApplicationSection Constructors | Improve this Doc View Source ApplicationSection(String, DateTime, RuntimePlatform) Declaration public ApplicationSection(string activeScene, DateTime created, RuntimePlatform platform) Parameters Type Name Description System.String activeScene System.DateTime created UnityEngine.RuntimePlatform platform Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source ActiveScene The name of the scene that was known to the UnityEngine.SceneManagement as being the active scene when this ApplicationSection was created. Declaration public readonly string ActiveScene Field Value Type Description System.String Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Created The time of creation for the ApplicationSection . Declaration public readonly DateTime Created Field Value Type Description System.DateTime Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Platform The platform that the ApplicationSection was created on. Declaration public readonly RuntimePlatform Platform Field Value Type Description UnityEngine.RuntimePlatform Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Get() Declaration public static ApplicationSection Get() Returns Type Description ApplicationSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder) Declaration public readonly void Output(ResourceReportContext context, StringBuilder builder) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Sections.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.html",
    "title": "Namespace GDX.Developer.Reports.Resource.Sections | GDX",
    "keywords": "Namespace GDX.Developer.Reports.Resource.Sections Structs ApplicationSection MemoryDiffSection MemorySection"
  },
  "api/GDX.Developer.Reports.Resource.Sections.MemoryDiffSection.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.MemoryDiffSection.html",
    "title": "MemoryDiffSection | GDX",
    "keywords": "Struct MemoryDiffSection Namespace : GDX.Developer.Reports.Resource.Sections Syntax public readonly struct MemoryDiffSection Constructors | Improve this Doc View Source MemoryDiffSection(MemorySection, MemorySection) Declaration public MemoryDiffSection(MemorySection lhs, MemorySection rhs) Parameters Type Name Description MemorySection lhs MemorySection rhs Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source MonoHeapSize Declaration public readonly LongDiff MonoHeapSize Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MonoUsedSize Declaration public readonly LongDiff MonoUsedSize Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityGraphicsDriverAllocated Declaration public readonly LongDiff UnityGraphicsDriverAllocated Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalAllocatedMemory Declaration public readonly LongDiff UnityTotalAllocatedMemory Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalReservedMemory Declaration public readonly LongDiff UnityTotalReservedMemory Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalUnusedReservedMemory Declaration public readonly LongDiff UnityTotalUnusedReservedMemory Field Value Type Description GDX.Developer.Reports.Resource.LongDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Get(MemorySection, MemorySection) Declaration public static MemoryDiffSection Get(MemorySection lhs, MemorySection rhs) Parameters Type Name Description MemorySection lhs MemorySection rhs Returns Type Description MemoryDiffSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder, Boolean) Declaration public readonly void Output(ResourceReportContext context, StringBuilder builder, bool detailed = true) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder System.Boolean detailed Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.Resource.Sections.MemorySection.html": {
    "href": "api/GDX.Developer.Reports.Resource.Sections.MemorySection.html",
    "title": "MemorySection | GDX",
    "keywords": "Struct MemorySection Namespace : GDX.Developer.Reports.Resource.Sections Syntax public readonly struct MemorySection Constructors | Improve this Doc View Source MemorySection(Int64, Int64, Int64, Int64, Int64, Int64) Declaration public MemorySection(long monoHeapSize, long monoUsedSize, long unityTotalAllocatedMemory, long unityTotalReservedMemory, long unityTotalUnusedReservedMemory, long unityGraphicsDriverAllocatedMemory) Parameters Type Name Description System.Int64 monoHeapSize System.Int64 monoUsedSize System.Int64 unityTotalAllocatedMemory System.Int64 unityTotalReservedMemory System.Int64 unityTotalUnusedReservedMemory System.Int64 unityGraphicsDriverAllocatedMemory Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source MonoHeapSize The size of the Mono heap when the ResourcesAuditReport was created. Declaration public readonly long MonoHeapSize Field Value Type Description System.Int64 Remarks This is cached so that the ResourcesAuditReport does not effect this value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MonoUsedSize The amount of the Mono heap used when the ResourcesAuditReport was created. Declaration public readonly long MonoUsedSize Field Value Type Description System.Int64 Remarks This is cached so that the ResourcesAuditReport does not effect this value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityGraphicsDriverAllocatedMemory Unity's allocated native memory for the graphics driver (in bytes). Declaration public readonly long UnityGraphicsDriverAllocatedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalAllocatedMemory Unity's total allocated memory (in bytes). Declaration public readonly long UnityTotalAllocatedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalReservedMemory Unity's total reserved memory (in bytes). Declaration public readonly long UnityTotalReservedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source UnityTotalUnusedReservedMemory Unity's total unused reserved memory (in bytes). Declaration public readonly long UnityTotalUnusedReservedMemory Field Value Type Description System.Int64 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Get() Declaration public static MemorySection Get() Returns Type Description MemorySection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(ResourceReportContext, StringBuilder, Boolean) Declaration public readonly void Output(ResourceReportContext context, StringBuilder builder, bool detailed = true) Parameters Type Name Description ResourceReportContext context System.Text.StringBuilder builder System.Boolean detailed Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.ResourcesAuditReport.html": {
    "href": "api/GDX.Developer.Reports.ResourcesAuditReport.html",
    "title": "ResourcesAuditReport | GDX",
    "keywords": "Class ResourcesAuditReport An audit of loaded UnityEngine.Object for queried types. Inheritance System.Object ResourceReport ResourcesAuditReport Inherited Members ResourceReport.Output(ResourceReportContext) ResourceReport.Output(StreamWriter, Int32, ResourceReportContext) ResourceReport.CreateDivider(ResourceReportContext, Char) ResourceReport.CreateHeader(ResourceReportContext, String, Char) ResourceReport.CreateKeyValuePair(ResourceReportContext, String, String) ResourceReport.CreateYesNo(Boolean) ResourceReport.PositiveSign(Int64) ResourceReport.PositiveSign(Int32) Namespace : GDX.Developer.Reports Syntax public class ResourcesAuditReport : ResourceReport Remarks Information is referenced to the target objects by a modified weak reference ( TransientReference ), thus this will not prevent garbage collection. Fields | Improve this Doc View Source ApplicationContext Declaration public readonly ApplicationSection ApplicationContext Field Value Type Description ApplicationSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KnownObjects A collection of known (loaded in memory) UnityEngine.Object keyed by type. Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> KnownObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KnownUsage A collection of known UnityEngine.Object types in memory and their total usage. Declaration public readonly Dictionary<Type, long> KnownUsage Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Int64 > Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source LastTouched The last time that the ResourcesAuditReport has had a query of types. Declaration public DateTime LastTouched Field Value Type Description System.DateTime Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MemoryContext Declaration public readonly MemorySection MemoryContext Field Value Type Description MemorySection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectCount The total number of objects which are known to the ResourcesAuditReport . Declaration public int ObjectCount Field Value Type Description System.Int32 Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Finalize() Process to destroy a ResourcesAuditReport . Declaration protected void Finalize() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Get(ResourcesAuditReport.ResourcesQuery[]) Generate a ResourcesAuditReport for the provided ResourcesAuditReport.ResourcesQuery array. Declaration public static ResourcesAuditReport Get(ResourcesAuditReport.ResourcesQuery[] queries) Parameters Type Name Description ResourcesAuditReport.ResourcesQuery [] queries A list of ResourcesAuditReport.ResourcesQuery to generate a report from. Returns Type Description ResourcesAuditReport A ResourcesAuditReport containing the outlined types. Remarks This method uses reflection to generate the necessary typed parameters, its often more efficient to create your own custom reports like in GetCommon() . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetAll() Get a ResourcesAuditReport of all UnityEngine.Object . Declaration public static ResourcesAuditReport GetAll() Returns Type Description ResourcesAuditReport A ResourcesAuditReport of all objects. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetCommon() Get a ResourcesAuditReport of a common subset of data which usually eats a large portion of memory, and often can reveal memory leaks. Declaration public static ResourcesAuditReport GetCommon() Returns Type Description ResourcesAuditReport A ResourcesAuditReport of textures, shaders, materials and animations. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Output(StringBuilder, ResourceReportContext) Output the report format utilizing the provided builder . Declaration public override bool Output(StringBuilder builder, ResourceReportContext context = null) Parameters Type Name Description System.Text.StringBuilder builder A System.Text.StringBuilder to use when generating the report. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if report was added to builder . Overrides ResourceReport.Output(StringBuilder, ResourceReportContext) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Query(ResourcesAuditReport.ResourcesQuery) Identify loaded UnityEngine.Object of the description provided in . Declaration public void Query(ResourcesAuditReport.ResourcesQuery query) Parameters Type Name Description ResourcesAuditReport.ResourcesQuery query Description of UnityEngine.Object type to search for. Remarks This method of querying uses reflection to allow for dynamic developer console calls, QueryForType<TType, TObjectInfo>(String) for a much faster typed operation. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source QueryForType<TType, TObjectInfo>(String) Identify loaded TType , using TObjectInfo for report generation. Declaration public void QueryForType<TType, TObjectInfo>(string nameFilter = null) where TType : Object where TObjectInfo : ObjectInfo, new() Parameters Type Name Description System.String nameFilter Type Parameters Name Description TType The object type to query for. TObjectInfo The ObjectInfo used to generate report entries. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Remove(Type) Remove all information regarding a specific type from the KnownObjects . Declaration public void Remove(Type type) Parameters Type Name Description System.Type type The type to remove from the KnownObjects . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.Reports.ResourcesAuditReport.ResourcesQuery.html": {
    "href": "api/GDX.Developer.Reports.ResourcesAuditReport.ResourcesQuery.html",
    "title": "ResourcesAuditReport.ResourcesQuery | GDX",
    "keywords": "Struct ResourcesAuditReport.ResourcesQuery A structure that defines the string inputs necessary to query for loaded resources of a specific type. Namespace : GDX.Developer.Reports Syntax public readonly struct ResourcesQuery Remarks This forces the path through reflection when querying; there are faster methods available. These queries are built ideally to support dynamic developer console calls. Constructors | Improve this Doc View Source ResourcesQuery(String, String, String) Create a ResourcesAuditReport.ResourcesQuery for the given typeDefinition , while attempting to use the provided objectInfoTypeDefinition for report generation. Declaration public ResourcesQuery(string typeDefinition, string objectInfoTypeDefinition = null, string nameFilter = null) Parameters Type Name Description System.String typeDefinition The fully qualified type that is going to be evaluated. System.String objectInfoTypeDefinition The fully qualified type that is going to be used to generate a report on the type. If left null, system will attempt to find an appropriate info generator. System.String nameFilter A string that must be contained in an objects name for it to be valid in the query. Remarks Uses the default ObjectInfo for report generation if objectInfoTypeDefinition fails to qualify. Examples var queryTexture2D = new ResourcesQuery(\"UnityEngine.Texture2D,UnityEngine\", \"GDX.Developer.Reports.ObjectInfos.TextureObjectInfo,GDX\", \"Armor\"); Fields | Improve this Doc View Source NameFilter A System.String check against a UnityEngine.Object name. Declaration public readonly string NameFilter Field Value Type Description System.String Examples Armor | Improve this Doc View Source ObjectInfoTypeDefinition The fully qualified type that is going to be used to generate a report on the type. Declaration public readonly string ObjectInfoTypeDefinition Field Value Type Description System.String Examples GDX.Developer.Reports.ObjectInfo,GDX | Improve this Doc View Source TypeDefinition The fully qualified type that is going to be evaluated. Declaration public readonly string TypeDefinition Field Value Type Description System.String Examples UnityEngine.Texture2D,UnityEngine"
  },
  "api/GDX.Developer.Reports.ResourcesDiffReport.html": {
    "href": "api/GDX.Developer.Reports.ResourcesDiffReport.html",
    "title": "ResourcesDiffReport | GDX",
    "keywords": "Class ResourcesDiffReport Inheritance System.Object ResourceReport ResourcesDiffReport Inherited Members ResourceReport.Output(ResourceReportContext) ResourceReport.Output(StreamWriter, Int32, ResourceReportContext) ResourceReport.CreateDivider(ResourceReportContext, Char) ResourceReport.CreateHeader(ResourceReportContext, String, Char) ResourceReport.CreateKeyValuePair(ResourceReportContext, String, String) ResourceReport.CreateYesNo(Boolean) ResourceReport.PositiveSign(Int64) ResourceReport.PositiveSign(Int32) Namespace : GDX.Developer.Reports Syntax public class ResourcesDiffReport : ResourceReport Constructors | Improve this Doc View Source ResourcesDiffReport(ResourcesAuditReport, ResourcesAuditReport) Declaration public ResourcesDiffReport(ResourcesAuditReport lhs, ResourcesAuditReport rhs) Parameters Type Name Description ResourcesAuditReport lhs ResourcesAuditReport rhs Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Fields | Improve this Doc View Source AddedObjects Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> AddedObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source CommonObjects Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> CommonObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source KnownUsage Declaration public readonly Dictionary<Type, LongDiff> KnownUsage Field Value Type Description System.Collections.Generic.Dictionary < System.Type , GDX.Developer.Reports.Resource.LongDiff > Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source MemoryContext Declaration public readonly MemoryDiffSection MemoryContext Field Value Type Description MemoryDiffSection Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source ObjectCount Declaration public readonly IntegerDiff ObjectCount Field Value Type Description GDX.Developer.Reports.Resource.IntegerDiff Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source RemovedObjects Declaration public readonly Dictionary<Type, Dictionary<TransientReference, ObjectInfo>> RemovedObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < TransientReference , ObjectInfo >> Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. Methods | Improve this Doc View Source Output(StringBuilder, ResourceReportContext) Output the report format utilizing the provided builder . Declaration public override bool Output(StringBuilder builder, ResourceReportContext context = null) Parameters Type Name Description System.Text.StringBuilder builder A System.Text.StringBuilder to use when generating the report. ResourceReportContext context Contextual information regarding the generation of the report. Returns Type Description System.Boolean true/false if report was added to builder . Overrides ResourceReport.Output(StringBuilder, ResourceReportContext) Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Developer.SemanticVersion.html": {
    "href": "api/GDX.Developer.SemanticVersion.html",
    "title": "SemanticVersion | GDX",
    "keywords": "Struct SemanticVersion A Semantic Versioning structure. Namespace : GDX.Developer Syntax public readonly struct SemanticVersion Remarks https://semver.org/ Constructors | Improve this Doc View Source SemanticVersion(String) Create a SemanticVersion based on a formatted System.String . Declaration public SemanticVersion(string version) Parameters Type Name Description System.String version A formatted version semantic version string (2020.1.0). Fields | Improve this Doc View Source Major Major Version. Declaration public readonly int Major Field Value Type Description System.Int32 Remarks Is incremented when you make incompatible API changes. | Improve this Doc View Source Minor Minor Version. Declaration public readonly int Minor Field Value Type Description System.Int32 Remarks Is incremented when you add functionality in a backwards-compatible manner. | Improve this Doc View Source Patch Patch Version Declaration public readonly int Patch Field Value Type Description System.Int32 Remarks Is incremented when you make backwards-compatible fixes. Methods | Improve this Doc View Source Equals(Object) Does the obj equal this SemanticVersion . Declaration public override readonly bool Equals(object obj) Parameters Type Name Description System.Object obj An System.Object to compare against. Returns Type Description System.Boolean Returns the result of an EQUALITY operation. Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Get the hash code of the SemanticVersion . Declaration public override readonly int GetHashCode() Returns Type Description System.Int32 A System.Int32 value. Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(SemanticVersion, SemanticVersion) Determine if SemanticVersion is equal to another SemanticVersion . Declaration public static bool operator ==(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a EQUALITY operation on two SemanticVersion values. | Improve this Doc View Source GreaterThan(SemanticVersion, SemanticVersion) Determine if SemanticVersion is greater than another SemanticVersion . Declaration public static bool operator>(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a GREATER THAN operation on two SemanticVersion values. | Improve this Doc View Source GreaterThanOrEqual(SemanticVersion, SemanticVersion) Determine if SemanticVersion is greater than or equal to another SemanticVersion . Declaration public static bool operator >=(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a GREATER THAN OR EQUAL operation on two SemanticVersion values. | Improve this Doc View Source Inequality(SemanticVersion, SemanticVersion) Determine if SemanticVersion does not equal than another SemanticVersion . Declaration public static bool operator !=(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a NOT EQUAL operation on two SemanticVersion values. | Improve this Doc View Source LessThan(SemanticVersion, SemanticVersion) Determine if SemanticVersion is less than another SemanticVersion . Declaration public static bool operator <(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a LESS THAN operation on two SemanticVersion values. | Improve this Doc View Source LessThanOrEqual(SemanticVersion, SemanticVersion) Determine if SemanticVersion is less than or equal to another SemanticVersion . Declaration public static bool operator <=(SemanticVersion lhs, SemanticVersion rhs) Parameters Type Name Description SemanticVersion lhs Left-hand side SemanticVersion . SemanticVersion rhs Right-hand side SemanticVersion . Returns Type Description System.Boolean Returns the result of a LESS THAN OR EQUAL operation on two SemanticVersion values."
  },
  "api/GDX.Developer.TextGenerator.html": {
    "href": "api/GDX.Developer.TextGenerator.html",
    "title": "TextGenerator | GDX",
    "keywords": "Class TextGenerator A formatted text generator useful for creating text based files with some semblance of organization. Inheritance System.Object TextGenerator Namespace : GDX.Developer Syntax public class TextGenerator Constructors | Improve this Doc View Source TextGenerator(String, String, String) Create a new TextGenerator with the Declaration public TextGenerator(string indentContent = \"\\t\", string indentOpen = null, string indentClose = null) Parameters Type Name Description System.String indentContent The characters used to indent the content when applicable. By default it will use a tab representation, however for code files you may want to use four spaces. System.String indentOpen System.String indentClose Methods | Improve this Doc View Source Append(String) Append content to the current line being operated on. Declaration public void Append(string content) Parameters Type Name Description System.String content The content to append to the current line. | Improve this Doc View Source AppendLine(String) Apply the appropriate amount of indentation to the current line, appending content afterwards and then advancing to the next line. Declaration public void AppendLine(string content = \"\") Parameters Type Name Description System.String content The content to append to the current line. | Improve this Doc View Source AppendLineRange(IEnumerable) Append an System.Collections.IEnumerable set of content as individual lines with proper indentation. Declaration public void AppendLineRange(IEnumerable content) Parameters Type Name Description System.Collections.IEnumerable content The content to be added. | Improve this Doc View Source ApplyIndent() Apply the current level of indent to the current line being operated on. Declaration public void ApplyIndent() | Improve this Doc View Source GetIndentLevel() Gets the current indent level of the TextGenerator . Declaration public int GetIndentLevel() Returns Type Description System.Int32 The indent level. | Improve this Doc View Source NextLine() Move the builder to the start of the next line. Declaration public void NextLine() | Improve this Doc View Source PopIndent() Remove a level of indentation from the builder. Declaration public void PopIndent() | Improve this Doc View Source PushIndent(Boolean) Add a level of indentation to the builder. Declaration public void PushIndent(bool applyOpener = true) Parameters Type Name Description System.Boolean applyOpener Should the opener be applied? | Improve this Doc View Source ToString() Returns the built string content for the builder. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Remarks Will automatically reduce the indentation level to 0."
  },
  "api/GDX.Developer.TransientReference.html": {
    "href": "api/GDX.Developer.TransientReference.html",
    "title": "TransientReference | GDX",
    "keywords": "Class TransientReference A comparable weak reference to an object which will not prevent garbage collection. It will positively compare against similar targeted reference trackers as well as the actual target object. Inheritance System.Object System.WeakReference TransientReference Implements System.Runtime.Serialization.ISerializable System.IComparable System.IComparable < TransientReference > System.IComparable < System.WeakReference > System.IEquatable < TransientReference > System.IEquatable < System.WeakReference > Inherited Members System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.WeakReference.IsAlive System.WeakReference.Target System.WeakReference.TrackResurrection Namespace : GDX.Developer Syntax public class TransientReference : WeakReference, ISerializable, IComparable, IComparable<TransientReference>, IComparable<WeakReference>, IEquatable<TransientReference>, IEquatable<WeakReference> Remarks There isn't a lot of great use cases for using this sort of thing; System.WeakReference on its own is sufficient in most of the use cases, however this particular arrangement is useful for developer-ish stuff. Constructors | Improve this Doc View Source TransientReference(Object) Create a TransientReference referencing the target . Declaration public TransientReference(object target) Parameters Type Name Description System.Object target The target System.Object to reference. | Improve this Doc View Source TransientReference(Object, Boolean) Create a TransientReference referencing the target . Declaration public TransientReference(object target, bool trackResurrection) Parameters Type Name Description System.Object target The target System.Object to reference. System.Boolean trackResurrection Should the object remain tracked after it has been finalized. | Improve this Doc View Source TransientReference(SerializationInfo, StreamingContext) Create a TransientReference from the info . Declaration protected TransientReference(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info A System.Runtime.Serialization.SerializationInfo representation of a TransientReference . System.Runtime.Serialization.StreamingContext context Describes the source of the System.Runtime.Serialization.SerializationInfo . Methods | Improve this Doc View Source CompareTo(TransientReference) Compare this TransientReference to the target TransientReference . Declaration public int CompareTo(TransientReference obj) Parameters Type Name Description TransientReference obj The target TransientReference to compare against. Returns Type Description System.Int32 1 if the same, 0 otherwise. | Improve this Doc View Source CompareTo(Object) Compare this TransientReference to the target System.Object . Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj The target System.Object to compare against. Returns Type Description System.Int32 1 if the same, 0 otherwise. | Improve this Doc View Source CompareTo(WeakReference) Compare this TransientReference to the target System.WeakReference . Declaration public int CompareTo(WeakReference obj) Parameters Type Name Description System.WeakReference obj The target System.WeakReference to compare against. Returns Type Description System.Int32 1 if the same, 0 otherwise. | Improve this Doc View Source Equals(TransientReference) Does this TransientReference equal the target TransientReference . Declaration public bool Equals(TransientReference other) Parameters Type Name Description TransientReference other The target TransientReference to compare with. Returns Type Description System.Boolean true if it is the same, false otherwise. | Improve this Doc View Source Equals(Object) Does this TransientReference equal the target System.Object . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The target System.Object to compare with. Returns Type Description System.Boolean true if it is the same, false otherwise. Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Equals(WeakReference) Does this TransientReference equal the target System.WeakReference . Declaration public bool Equals(WeakReference other) Parameters Type Name Description System.WeakReference other The target System.WeakReference to compare with. Returns Type Description System.Boolean true if it is the same, false otherwise. | Improve this Doc View Source GetHashCode() Return the hashcode of the System.WeakReference.Target . Declaration public override int GetHashCode() Returns Type Description System.Int32 Returns the System.WeakReference.Target 's hash code, or -1 if null. Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(TransientReference, TransientReference) Compare TransientReference s to see if they are equal. Declaration public static bool operator ==(TransientReference left, TransientReference right) Parameters Type Name Description TransientReference left Left-side TransientReference . TransientReference right Right-side TransientReference . Returns Type Description System.Boolean true/false if they are equal. | Improve this Doc View Source Inequality(TransientReference, TransientReference) Compare TransientReference s to see if they are not equal. Declaration public static bool operator !=(TransientReference left, TransientReference right) Parameters Type Name Description TransientReference left Left-side TransientReference . TransientReference right Right-side TransientReference . Returns Type Description System.Boolean true/false if they are not equal. Implements System.Runtime.Serialization.ISerializable System.IComparable System.IComparable<T> System.IComparable<T> System.IEquatable<T> System.IEquatable<T>"
  },
  "api/GDX.Display.html": {
    "href": "api/GDX.Display.html",
    "title": "Display | GDX",
    "keywords": "Class Display A collection of display related helper utilities. Inheritance System.Object Display Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Display Methods | Improve this Doc View Source GetScreenHeight() Returns the actual screen height being rendered on the current platform. Declaration public static int GetScreenHeight() Returns Type Description System.Int32 The pixel height of the screen resolution. Remarks This resolves issues with scaled rendering. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetScreenWidth() Returns the actual screen width being rendered on the current platform. Declaration public static int GetScreenWidth() Returns Type Description System.Int32 The pixel width of the screen resolution. Remarks This resolves issues with scaled rendering. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsHDREnabled() Is HDR output currently enabled (and actively being used)? Declaration public static bool IsHDREnabled() Returns Type Description System.Boolean true/false Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsHDRSupported() Does the current display device support HDR output? Declaration public static bool IsHDRSupported() Returns Type Description System.Boolean true/false Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Editor.AssetDatabaseReference.html": {
    "href": "api/GDX.Editor.AssetDatabaseReference.html",
    "title": "AssetDatabaseReference | GDX",
    "keywords": "Class AssetDatabaseReference Inheritance System.Object AssetDatabaseReference Namespace : GDX.Editor Syntax public class AssetDatabaseReference Constructors | Improve this Doc View Source AssetDatabaseReference(String, Type) Declaration public AssetDatabaseReference(string guid, Type type = null) Parameters Type Name Description System.String guid System.Type type Fields | Improve this Doc View Source Guid Declaration public readonly string Guid Field Value Type Description System.String | Improve this Doc View Source Type Declaration public readonly Type Type Field Value Type Description System.Type Methods | Improve this Doc View Source GetAssetPath(Boolean) Declaration public string GetAssetPath(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetDiskPath(Boolean) Declaration public string GetDiskPath(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetFileExtension(Boolean) Declaration public string GetFileExtension(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetFileName(Boolean) Declaration public string GetFileName(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetFileNameWithoutExtension(Boolean) Declaration public string GetFileNameWithoutExtension(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetOrLoadAsset() Declaration public Object GetOrLoadAsset() Returns Type Description UnityEngine.Object | Improve this Doc View Source GetPath(Boolean) Declaration public string GetPath(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetPathWithoutExtension(Boolean) Declaration public string GetPathWithoutExtension(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String | Improve this Doc View Source GetTypeString(Boolean) Declaration public string GetTypeString(bool forceUpdate = false) Parameters Type Name Description System.Boolean forceUpdate Returns Type Description System.String"
  },
  "api/GDX.Editor.Automation.html": {
    "href": "api/GDX.Editor.Automation.html",
    "title": "Automation | GDX",
    "keywords": "Class Automation A collection of helper methods used for automation processes. Inheritance System.Object Automation Namespace : GDX.Editor Syntax public static class Automation Methods | Improve this Doc View Source CaptureAllWindows() Capture a UnityEngine.Texture2D of all open UnityEditor.EditorWindow . Declaration public static Texture2D CaptureAllWindows() Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. | Improve this Doc View Source CaptureAllWindowsToPNG(String) Captures a PNG image of all open UnityEditor.EditorWindow . Declaration public static bool CaptureAllWindowsToPNG(string outputPath) Parameters Type Name Description System.String outputPath The absolute path for the image file. Returns Type Description System.Boolean true/false if the capture was successful. | Improve this Doc View Source CaptureEditorWindow(EditorWindow) Capture a UnityEngine.Texture2D of the editor window. Declaration public static Texture2D CaptureEditorWindow(EditorWindow window) Parameters Type Name Description UnityEditor.EditorWindow window Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. | Improve this Doc View Source CaptureEditorWindow<T>(Boolean) Capture a UnityEngine.Texture2D of the designated UnityEditor.EditorWindow . Declaration public static Texture2D CaptureEditorWindow<T>(bool shouldCloseWindow = true) where T : EditorWindow Parameters Type Name Description System.Boolean shouldCloseWindow Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. Type Parameters Name Description T The type of UnityEditor.EditorWindow to be captured. | Improve this Doc View Source CaptureEditorWindowToPNG(EditorWindow, String) Capture a PNG image of the provided window. Declaration public static bool CaptureEditorWindowToPNG(EditorWindow window, string outputPath) Parameters Type Name Description UnityEditor.EditorWindow window The target window. System.String outputPath The absolute path for the image file. Returns Type Description System.Boolean true/false if the capture was successful. | Improve this Doc View Source CaptureEditorWindowToPNG<T>(String, Boolean) Capture a PNG image of the designated UnityEditor.EditorWindow . Declaration public static bool CaptureEditorWindowToPNG<T>(string outputPath, bool shouldCloseWindow = true) where T : EditorWindow Parameters Type Name Description System.String outputPath The absolute path for the image file. System.Boolean shouldCloseWindow Should the gotten window be closed after the capture? Returns Type Description System.Boolean true/false if the capture was successful. Type Parameters Name Description T The type of UnityEditor.EditorWindow to be captured. | Improve this Doc View Source CaptureFocusedEditorWindow() Capture a UnityEngine.Texture2D of the focused editor window. Declaration public static Texture2D CaptureFocusedEditorWindow() Returns Type Description UnityEngine.Texture2D The UnityEngine.Texture2D captured. | Improve this Doc View Source CaptureFocusedEditorWindowToPNG(String) Capture a PNG image of the currently focused window. Declaration public static bool CaptureFocusedEditorWindowToPNG(string outputPath) Parameters Type Name Description System.String outputPath The absolute path for the image file. Returns Type Description System.Boolean true/false if the capture was successful. | Improve this Doc View Source ClearTempFolder(Boolean) Clear the automation temporary folder. Declaration public static void ClearTempFolder(bool deleteFolder = false) Parameters Type Name Description System.Boolean deleteFolder Should the automation folder be deleted? | Improve this Doc View Source FinishProfile() Stop an existing profile, this is most often used to end a command line profile of the Editor startup. Declaration public static void FinishProfile() Remarks The editor needs to be started with profiling arguments; more info can be found on https://docs.unity3d.com/Manual/EditorCommandLineArguments.html. Argument Description -profiler-enable Enable profile at start. -profiler-log-file [path/to/file.raw] The absolute path to where the profiling data should be stored. -profiler-maxusedmemory [bytesize] The maximum amount of memory for the profiler to use. -deepprofiling Should a deep profile be done? -executeMethod GDX.Editor.Automation.FinishProfile Executes this method to stop the profiling. | Improve this Doc View Source GenerateProjectFiles() Generate the project's solution and associated project files. Declaration public static void GenerateProjectFiles() | Improve this Doc View Source GetEditorBounds() Accumulate the screen space bounds of all editor windows. Declaration public static Bounds GetEditorBounds() Returns Type Description UnityEngine.Bounds The accumulated bounds. | Improve this Doc View Source GetGameView() Returns a reference to the first available GameView. Declaration public static EditorWindow GetGameView() Returns Type Description UnityEditor.EditorWindow An reference to an instance of the GameView | Improve this Doc View Source GetWindow<T>(EditorWindowExtensions.EditorWindowSetup) Declaration public static T GetWindow<T>(EditorWindowExtensions.EditorWindowSetup setup) where T : EditorWindow Parameters Type Name Description EditorWindowExtensions.EditorWindowSetup setup Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetWindow<T>(Boolean, Int32, Int32) Get the existing or open a new window with the indicated size / flags. Declaration public static T GetWindow<T>(bool shouldMaximize = false, int width = 800, int height = 600) where T : EditorWindow Parameters Type Name Description System.Boolean shouldMaximize Should the window be maximized? System.Int32 width The desired window pixel width. System.Int32 height The desired window pixel height. Returns Type Description T The instantiated window, or null. Type Parameters Name Description T The type of the window requested. Remarks Maintains old behaviour. | Improve this Doc View Source ResetEditor() Reset the editor to a default state. Declaration public static void ResetEditor() Remarks Using this method inside of a unit test will break the runner/chain. | Improve this Doc View Source RestoreWindowLayout() Declaration public static void RestoreWindowLayout() | Improve this Doc View Source StashWindowLayout() Declaration public static void StashWindowLayout()"
  },
  "api/GDX.Editor.Build.BuildConfiguration.FolderMapping.html": {
    "href": "api/GDX.Editor.Build.BuildConfiguration.FolderMapping.html",
    "title": "BuildConfiguration.FolderMapping | GDX",
    "keywords": "Class BuildConfiguration.FolderMapping Inheritance System.Object BuildConfiguration.FolderMapping Namespace : GDX.Editor.Build Syntax [Serializable] public class FolderMapping Fields | Improve this Doc View Source BuildRelativePath Declaration public string BuildRelativePath Field Value Type Description System.String | Improve this Doc View Source ProjectRelativePath Declaration public string ProjectRelativePath Field Value Type Description System.String"
  },
  "api/GDX.Editor.Build.BuildConfiguration.html": {
    "href": "api/GDX.Editor.Build.BuildConfiguration.html",
    "title": "BuildConfiguration | GDX",
    "keywords": "Class BuildConfiguration Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject BuildConfiguration Namespace : GDX.Editor.Build Syntax [CreateAssetMenu(fileName = \"BC_BuildConfig\", menuName = \"GDX/Build Configuration\")] public class BuildConfiguration : ScriptableObject Fields | Improve this Doc View Source AdditionalDefines Declaration [Header(\"Compilation\")] public string[] AdditionalDefines Field Value Type Description System.String [] | Improve this Doc View Source Dependencies Declaration [Header(\"Based On\")] public BuildConfiguration[] Dependencies Field Value Type Description BuildConfiguration [] | Improve this Doc View Source ExecutableName Declaration public string ExecutableName Field Value Type Description System.String | Improve this Doc View Source IgnoreSubsceneFolders Declaration [Tooltip(\"This will attempt to ignore anything under a folder which matches a previously added Scene.\")] public bool IgnoreSubsceneFolders Field Value Type Description System.Boolean | Improve this Doc View Source OutputFolder Declaration [Header(\"Output\")] public string OutputFolder Field Value Type Description System.String | Improve this Doc View Source OverlayFolders Declaration [Tooltip(\"Overlay content relative to Application.dataPath, on top of the build executable.\")] [Header(\"Extras\")] public BuildConfiguration.FolderMapping[] OverlayFolders Field Value Type Description BuildConfiguration.FolderMapping [] | Improve this Doc View Source SceneFolders Declaration public string[] SceneFolders Field Value Type Description System.String [] | Improve this Doc View Source Scenes Declaration [Header(\"Content\")] public SceneAsset[] Scenes Field Value Type Description UnityEditor.SceneAsset [] Methods | Improve this Doc View Source GetResolvedExecutableName() Declaration public string GetResolvedExecutableName() Returns Type Description System.String | Improve this Doc View Source GetResolvedOutputPath() Declaration public string GetResolvedOutputPath() Returns Type Description System.String | Improve this Doc View Source GetResolvedOverlayFolders() Declaration public BuildConfiguration.FolderMapping[] GetResolvedOverlayFolders() Returns Type Description BuildConfiguration.FolderMapping [] | Improve this Doc View Source GetResolvedScenePaths() Declaration public string[] GetResolvedScenePaths() Returns Type Description System.String [] | Improve this Doc View Source GetResolvedScriptingDefines() Declaration public string[] GetResolvedScriptingDefines() Returns Type Description System.String [] Extension Methods ObjectExtensions.SafeDestroy(Object, Single)"
  },
  "api/GDX.Editor.Build.BuildDefinition.html": {
    "href": "api/GDX.Editor.Build.BuildDefinition.html",
    "title": "BuildDefinition | GDX",
    "keywords": "Class BuildDefinition Inheritance System.Object BuildDefinition Namespace : GDX.Editor.Build Syntax public class BuildDefinition Constructors | Improve this Doc View Source BuildDefinition(BuildConfiguration) Declaration public BuildDefinition(BuildConfiguration buildConfig) Parameters Type Name Description BuildConfiguration buildConfig | Improve this Doc View Source BuildDefinition(String, String) Declaration public BuildDefinition(string folderName, string executableName) Parameters Type Name Description System.String folderName System.String executableName Fields | Improve this Doc View Source Backend Declaration public ScriptingImplementation Backend Field Value Type Description UnityEditor.ScriptingImplementation | Improve this Doc View Source ClearPreviousBuild Declaration public readonly bool ClearPreviousBuild Field Value Type Description System.Boolean | Improve this Doc View Source ExecutableName Declaration public string ExecutableName Field Value Type Description System.String | Improve this Doc View Source Mappings Declaration public BuildConfiguration.FolderMapping[] Mappings Field Value Type Description BuildConfiguration.FolderMapping [] Remarks Only supported in Unity 2021+ | Improve this Doc View Source PlayerOptions Declaration public BuildPlayerOptions PlayerOptions Field Value Type Description UnityEditor.BuildPlayerOptions | Improve this Doc View Source TargetFolder Declaration public readonly string TargetFolder Field Value Type Description System.String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/GDX.Editor.Build.BuildEnvironment.html": {
    "href": "api/GDX.Editor.Build.BuildEnvironment.html",
    "title": "BuildEnvironment | GDX",
    "keywords": "Class BuildEnvironment Inheritance System.Object BuildEnvironment Namespace : GDX.Editor.Build Syntax public static class BuildEnvironment Methods | Improve this Doc View Source GetBuildConfigFolder() Declaration public static string[] GetBuildConfigFolder() Returns Type Description System.String [] | Improve this Doc View Source GetBuildConfiguration(String) Declaration public static BuildConfiguration GetBuildConfiguration(string name) Parameters Type Name Description System.String name Returns Type Description BuildConfiguration | Improve this Doc View Source GetBuildFolder() Declaration public static string GetBuildFolder() Returns Type Description System.String | Improve this Doc View Source GetDefaultBuildsFolder() Declaration public static string GetDefaultBuildsFolder() Returns Type Description System.String | Improve this Doc View Source SetParameter(String, String) Declaration public static void SetParameter(string name, string value) Parameters Type Name Description System.String name System.String value | Improve this Doc View Source ShouldRevertChanges() Declaration public static bool ShouldRevertChanges() Returns Type Description System.Boolean"
  },
  "api/GDX.Editor.Build.BuildInfoBuildProcessor.html": {
    "href": "api/GDX.Editor.Build.BuildInfoBuildProcessor.html",
    "title": "BuildInfoBuildProcessor | GDX",
    "keywords": "Class BuildInfoBuildProcessor A BuildInfo process step for the legacy build pipeline in Unity. During the build process a BuildInfo file will be generated containing information passed in through commandline arguments (parsed by CommandLineParser ). These arguments and their formats are configurable via the Config . Inheritance System.Object BuildInfoBuildProcessor Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IPostprocessBuildWithReport UnityEditor.Build.IOrderedCallback Namespace : GDX.Editor.Build Syntax public class BuildInfoBuildProcessor : IPreprocessBuildWithReport, IPostprocessBuildWithReport, IOrderedCallback Remarks After a build is finished, the BuildInfo will be reset to default values. This is intended to make sure local builds have a specific marker. Argument (Default Value) Description BUILD The build number, accessible through BuildInfo.BuildNumber . BUILD_DESC A short description of the build (example: useful for identifying personal CI builds), accessible through BuildInfo.Description . BUILD_CHANGELIST The changelist which the build was made against, accessible through BuildInfo.Changelist . BUILD_TASK The name of the build script/task which was used to create the build (example: CODE-Main-Build-PS5-Development), accessible through BuildInfo.BuildTask . BUILD_STREAM An indicator of what stream/branch that the build was build against from your chosen version control system, accessible through BuildInfo.Stream . Properties | Improve this Doc View Source callbackOrder The priority for the processor to be executed, before defaults. Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 The numerical value used to sort callbacks, lowest to highest. Methods | Improve this Doc View Source OnPostprocessBuild(BuildReport) Restores the default BuildInfo after a build process finishes. Declaration public void OnPostprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Build process reported information. | Improve this Doc View Source OnPreprocessBuild(BuildReport) Writes out BuildInfo prior to build. Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Build process reported information. Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IPostprocessBuildWithReport UnityEditor.Build.IOrderedCallback"
  },
  "api/GDX.Editor.Build.BuildInfoProvider.html": {
    "href": "api/GDX.Editor.Build.BuildInfoProvider.html",
    "title": "BuildInfoProvider | GDX",
    "keywords": "Class BuildInfoProvider A set of tools to produce the content used for the BuildInfo generated file, as well as the surrounding assembly definition, as well as an ability to reset the file. Inheritance System.Object BuildInfoProvider Namespace : GDX.Editor.Build Syntax public static class BuildInfoProvider Methods | Improve this Doc View Source CheckForAssemblyDefinition() Check if an assembly definition should be placed along side the written BuildInfo and write one. Declaration public static void CheckForAssemblyDefinition() | Improve this Doc View Source GetContent(Boolean, String) Create the content for the BuildInfo file based on provided information. Declaration public static string GetContent(bool forceDefaults = false, string internalDescription = null) Parameters Type Name Description System.Boolean forceDefaults Should all default values be used instead? System.String internalDescription An internally used description. Returns Type Description System.String The files content. | Improve this Doc View Source WriteDefaultFile() Write default content to BuildInfo file. Declaration public static void WriteDefaultFile()"
  },
  "api/GDX.Editor.Build.BuildProvider.html": {
    "href": "api/GDX.Editor.Build.BuildProvider.html",
    "title": "BuildProvider | GDX",
    "keywords": "Class BuildProvider Inheritance System.Object BuildProvider Namespace : GDX.Editor.Build Syntax public static class BuildProvider Fields | Improve this Doc View Source OnException Declaration public static Action<BuildDefinition, Exception> OnException Field Value Type Description System.Action < BuildDefinition , System.Exception > | Improve this Doc View Source OnExecute Fires immediately when the provider has been told to execute a build definition. Declaration public static Action<BuildDefinition> OnExecute Field Value Type Description System.Action < BuildDefinition > | Improve this Doc View Source OnReport Declaration public static Action<BuildDefinition, BuildReport> OnReport Field Value Type Description System.Action < BuildDefinition , UnityEditor.Build.Reporting.BuildReport > Methods | Improve this Doc View Source Execute(BuildDefinition) Declaration public static void Execute(BuildDefinition definition) Parameters Type Name Description BuildDefinition definition"
  },
  "api/GDX.Editor.Build.html": {
    "href": "api/GDX.Editor.Build.html",
    "title": "Namespace GDX.Editor.Build | GDX",
    "keywords": "Namespace GDX.Editor.Build Classes BuildConfiguration BuildConfiguration.FolderMapping BuildDefinition BuildEnvironment BuildInfoBuildProcessor A BuildInfo process step for the legacy build pipeline in Unity. During the build process a BuildInfo file will be generated containing information passed in through commandline arguments (parsed by CommandLineParser ). These arguments and their formats are configurable via the Config . BuildInfoProvider A set of tools to produce the content used for the BuildInfo generated file, as well as the surrounding assembly definition, as well as an ability to reset the file. BuildProvider ScriptingDefinesBuildProcessor A process step for the legacy build pipeline in Unity which ensures, if enabled that the GDX scripting define symbol is present for the target."
  },
  "api/GDX.Editor.Build.ScriptingDefinesBuildProcessor.html": {
    "href": "api/GDX.Editor.Build.ScriptingDefinesBuildProcessor.html",
    "title": "ScriptingDefinesBuildProcessor | GDX",
    "keywords": "Class ScriptingDefinesBuildProcessor A process step for the legacy build pipeline in Unity which ensures, if enabled that the GDX scripting define symbol is present for the target. Inheritance System.Object ScriptingDefinesBuildProcessor Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback Namespace : GDX.Editor.Build Syntax public class ScriptingDefinesBuildProcessor : IPreprocessBuildWithReport, IOrderedCallback Properties | Improve this Doc View Source callbackOrder The priority for the processor to be executed, before defaults. Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 The numerical value used to sort callbacks, lowest to highest. Methods | Improve this Doc View Source OnPreprocessBuild(BuildReport) Ensures the build is made with GDX scripting define Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Build process reported information. Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback"
  },
  "api/GDX.Editor.ConfigGenerator.html": {
    "href": "api/GDX.Editor.ConfigGenerator.html",
    "title": "ConfigGenerator | GDX",
    "keywords": "Class ConfigGenerator Inheritance System.Object ConfigGenerator Namespace : GDX.Editor Syntax public static class ConfigGenerator Methods | Improve this Doc View Source Build(TransientConfig) Declaration public static string Build(TransientConfig rhs) Parameters Type Name Description TransientConfig rhs Returns Type Description System.String"
  },
  "api/GDX.Editor.DataTableTracker.DataTableTrackerStats.html": {
    "href": "api/GDX.Editor.DataTableTracker.DataTableTrackerStats.html",
    "title": "DataTableTracker.DataTableTrackerStats | GDX",
    "keywords": "Struct DataTableTracker.DataTableTrackerStats A DataTableTracker based set of stats. Namespace : GDX.Editor Syntax public struct DataTableTrackerStats Fields | Improve this Doc View Source CellValueChanged Declaration public int CellValueChanged Field Value Type Description System.Int32 | Improve this Doc View Source StructuralChange Declaration public int StructuralChange Field Value Type Description System.Int32 | Improve this Doc View Source Usages Declaration public int Usages Field Value Type Description System.Int32"
  },
  "api/GDX.Editor.DataTableTracker.html": {
    "href": "api/GDX.Editor.DataTableTracker.html",
    "title": "DataTableTracker | GDX",
    "keywords": "Class DataTableTracker A observer-like pattern for DataTableBase usage in the editor. Inheritance System.Object DataTableTracker Namespace : GDX.Editor Syntax public static class DataTableTracker Remarks This is useful for driving updates across multiple windows, inspectors and property drawers. Methods | Improve this Doc View Source AddUsage(Int32) Indicate that a DataTableBase is being used by something. Declaration public static void AddUsage(int tableTicket) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source GetStats(Int32) Get the summary of currently what is being tracked by the DataTableTracker for a DataTableBase . Declaration public static DataTableTracker.DataTableTrackerStats GetStats(int tableTicket) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . Returns Type Description DataTableTracker.DataTableTrackerStats | Improve this Doc View Source GetTable(Int32) Attempt to get the registered DataTableBase by ticket number. Declaration public static DataTableBase GetTable(int tableTicket) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . Returns Type Description DataTableBase A DataTableBase if found, otherwise null. | Improve this Doc View Source GetTicket(DataTableBase) Attempt to get the ticket number of the provided DataTableBase . Declaration public static int GetTicket(DataTableBase dataTable) Parameters Type Name Description DataTableBase dataTable The target DataTableBase . Returns Type Description System.Int32 A ticket number, otherwise -1. | Improve this Doc View Source NotifyOfCellValueChange(Int32, Int32, Int32, DataTableTracker.ICellValueChangedCallbackReceiver) Notify all registered DataTableTracker.ICellValueChangedCallbackReceiver s that a change has occured. Declaration public static void NotifyOfCellValueChange(int tableTicket, int rowIdentifier, int columnIdentifier, DataTableTracker.ICellValueChangedCallbackReceiver ignoreReceiver = null) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . System.Int32 rowIdentifier The affected row's unique identifier. System.Int32 columnIdentifier The affected column's unique identifier. DataTableTracker.ICellValueChangedCallbackReceiver ignoreReceiver A DataTableTracker.ICellValueChangedCallbackReceiver that should be ignored in the notification process. This is used to stop self-notification. Remarks Marks the changed DataTableBase as dirty. | Improve this Doc View Source NotifyOfColumnChange(Int32, Int32, DataTableTracker.IStructuralChangeCallbackReceiver) Notify all registered DataTableTracker.IStructuralChangeCallbackReceiver s that a change has occured. Declaration public static void NotifyOfColumnChange(int tableTicket, int columnIdentifier, DataTableTracker.IStructuralChangeCallbackReceiver ignoreReceiver = null) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . System.Int32 columnIdentifier The affected column's unique identifier. DataTableTracker.IStructuralChangeCallbackReceiver ignoreReceiver A DataTableTracker.IStructuralChangeCallbackReceiver that should be ignored in the notification process. This is used to stop self-notification. Remarks Marks the changed DataTableBase as dirty. | Improve this Doc View Source NotifyOfRowChange(Int32, Int32, DataTableTracker.IStructuralChangeCallbackReceiver) Notify all registered DataTableTracker.IStructuralChangeCallbackReceiver s that a row change has occured. Declaration public static void NotifyOfRowChange(int tableTicket, int rowIdentifier, DataTableTracker.IStructuralChangeCallbackReceiver ignoreReceiver = null) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . System.Int32 rowIdentifier The affected row's unique identifier. DataTableTracker.IStructuralChangeCallbackReceiver ignoreReceiver A DataTableTracker.IStructuralChangeCallbackReceiver that should be ignored in the notification process. This is used to stop self-notification. Remarks Marks the changed DataTableBase as dirty. | Improve this Doc View Source NotifyOfSettingsChange(Int32, DataTableTracker.IStructuralChangeCallbackReceiver) Notify all registered DataTableTracker.IStructuralChangeCallbackReceiver s that a setting change has occured. Declaration public static void NotifyOfSettingsChange(int tableTicket, DataTableTracker.IStructuralChangeCallbackReceiver ignoreReceiver = null) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . DataTableTracker.IStructuralChangeCallbackReceiver ignoreReceiver A DataTableTracker.IStructuralChangeCallbackReceiver that should be ignored in the notification process. This is used to stop self-notification. Remarks Marks the changed DataTableBase as dirty. | Improve this Doc View Source RecordCellValueUndo(Int32, Int32, Int32) Record the state of a DataTableBase for undoing a cell value change. Declaration public static void RecordCellValueUndo(int tableTicket, int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . System.Int32 rowIdentifier The affected row's unique identifier. System.Int32 columnIdentifier The affected column's unique identifier. | Improve this Doc View Source RecordColumnDefinitionUndo(Int32, Int32, String) Record the state of a DataTableBase for undoing a column definition change. Declaration public static void RecordColumnDefinitionUndo(int tableTicket, int columnIdentifier, string actionDescription = null) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . System.Int32 columnIdentifier The affected column's unique identifier. System.String actionDescription A description of the action being done. | Improve this Doc View Source RecordRowDefinitionUndo(Int32, Int32, String) Record the state of a DataTableBase for undoing a row definition change. Declaration public static void RecordRowDefinitionUndo(int tableTicket, int rowIdentifier, string actionDescription = null) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . System.Int32 rowIdentifier The affected row's unique identifier. System.String actionDescription A description of the action being done. | Improve this Doc View Source RecordSettingsUndo(Int32) Record the state of a DataTableBase for undoing a settings change. Declaration public static void RecordSettingsUndo(int tableTicket) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source RegisterCellValueChanged(DataTableTracker.ICellValueChangedCallbackReceiver, Int32) Register an DataTableTracker.ICellValueChangedCallbackReceiver for callbacks based on the provided ticket. Declaration public static void RegisterCellValueChanged(DataTableTracker.ICellValueChangedCallbackReceiver callback, int tableTicket) Parameters Type Name Description DataTableTracker.ICellValueChangedCallbackReceiver callback The target receiver to add to the callback list. System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source RegisterStructuralChanged(DataTableTracker.IStructuralChangeCallbackReceiver, Int32) Register a DataTableTracker.IStructuralChangeCallbackReceiver for callbacks based on the provided ticket. Declaration public static void RegisterStructuralChanged(DataTableTracker.IStructuralChangeCallbackReceiver callback, int tableTicket) Parameters Type Name Description DataTableTracker.IStructuralChangeCallbackReceiver callback The target receiver to add to the callback list. System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source RegisterTable(DataTableBase) Registers a DataTableBase for use by all of the different supporting systems inside of the Unity editor. Declaration public static int RegisterTable(DataTableBase dataTable) Parameters Type Name Description DataTableBase dataTable The DataTableBase to be registered for use. Returns Type Description System.Int32 A domain incremented ticket number. | Improve this Doc View Source RegisterTableAfterReload(DataTableBase, Int32) Registers a DataTableBase for use after a domain reload or undo/redo. Declaration public static int RegisterTableAfterReload(DataTableBase dataTable, int tableTicket) Parameters Type Name Description DataTableBase dataTable The DataTableBase to be registered for use. System.Int32 tableTicket Force a specific ticket to be used for a table. Returns Type Description System.Int32 A domain incremented ticket number. | Improve this Doc View Source RegisterUndoRedoEvent(DataTableTracker.IUndoRedoEventCallbackReceiver, Int32) Register an DataTableTracker.IUndoRedoEventCallbackReceiver for callbacks based on the provided ticket. Declaration public static void RegisterUndoRedoEvent(DataTableTracker.IUndoRedoEventCallbackReceiver callback, int tableTicket) Parameters Type Name Description DataTableTracker.IUndoRedoEventCallbackReceiver callback The target receiver to add to the callback list. System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source RemoveUsage(Int32) Indicate that a DataTableBase is no longer being used by something. Declaration public static void RemoveUsage(int tableTicket) Parameters Type Name Description System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . Remarks When there are no more usages, a cleanup pass is ran to remove other mappings. | Improve this Doc View Source UnregisterCellValueChanged(DataTableTracker.ICellValueChangedCallbackReceiver, Int32) Unregister an DataTableTracker.ICellValueChangedCallbackReceiver from callbacks based on the provided ticket. Declaration public static void UnregisterCellValueChanged(DataTableTracker.ICellValueChangedCallbackReceiver callback, int tableTicket) Parameters Type Name Description DataTableTracker.ICellValueChangedCallbackReceiver callback The target receiver to remove from the callback list. System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source UnregisterStructuralChanged(DataTableTracker.IStructuralChangeCallbackReceiver, Int32) Unregister an DataTableTracker.IStructuralChangeCallbackReceiver from callbacks based on the provided ticket. Declaration public static void UnregisterStructuralChanged(DataTableTracker.IStructuralChangeCallbackReceiver callback, int tableTicket) Parameters Type Name Description DataTableTracker.IStructuralChangeCallbackReceiver callback The target receiver to remove from the callback list. System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) . | Improve this Doc View Source UnregisterUndoRedoEvent(DataTableTracker.IUndoRedoEventCallbackReceiver, Int32) Unregister an DataTableTracker.IUndoRedoEventCallbackReceiver from callbacks based on the provided ticket. Declaration public static void UnregisterUndoRedoEvent(DataTableTracker.IUndoRedoEventCallbackReceiver callback, int tableTicket) Parameters Type Name Description DataTableTracker.IUndoRedoEventCallbackReceiver callback The target receiver to remove from the callback list. System.Int32 tableTicket The unique ticket generated by RegisterTable(DataTableBase) ."
  },
  "api/GDX.Editor.DataTableTracker.ICellValueChangedCallbackReceiver.html": {
    "href": "api/GDX.Editor.DataTableTracker.ICellValueChangedCallbackReceiver.html",
    "title": "DataTableTracker.ICellValueChangedCallbackReceiver | GDX",
    "keywords": "Interface DataTableTracker.ICellValueChangedCallbackReceiver An interface describing the functionality needed for an object to get a callback when a a cell values changes in a DataTableBase . Namespace : GDX.Editor Syntax public interface ICellValueChangedCallbackReceiver Methods | Improve this Doc View Source OnCellValueChanged(Int32, Int32) A cell value change has occured. Declaration void OnCellValueChanged(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The affected row's unique identifier. System.Int32 columnIdentifier The affected column's unique identifier."
  },
  "api/GDX.Editor.DataTableTracker.IStructuralChangeCallbackReceiver.html": {
    "href": "api/GDX.Editor.DataTableTracker.IStructuralChangeCallbackReceiver.html",
    "title": "DataTableTracker.IStructuralChangeCallbackReceiver | GDX",
    "keywords": "Interface DataTableTracker.IStructuralChangeCallbackReceiver An interface describing the functionality needed for an object to get a callback when a structural changes in a DataTableBase . Namespace : GDX.Editor Syntax public interface IStructuralChangeCallbackReceiver Methods | Improve this Doc View Source OnColumnDefinitionChange(Int32) A ColumnDescription change has occured. Declaration void OnColumnDefinitionChange(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The affected column's unique identifier. | Improve this Doc View Source OnRowDefinitionChange(Int32) A RowDescription change has occured. Declaration void OnRowDefinitionChange(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The affected row's unique identifier. | Improve this Doc View Source OnSettingsChange() A DataTableBase setting change has occured. Declaration void OnSettingsChange()"
  },
  "api/GDX.Editor.DataTableTracker.IUndoRedoEventCallbackReceiver.html": {
    "href": "api/GDX.Editor.DataTableTracker.IUndoRedoEventCallbackReceiver.html",
    "title": "DataTableTracker.IUndoRedoEventCallbackReceiver | GDX",
    "keywords": "Interface DataTableTracker.IUndoRedoEventCallbackReceiver An interface describing the functionality needed for an object to get a callback when Unity performs an undo/redo operation on a DataTableBase . Namespace : GDX.Editor Syntax public interface IUndoRedoEventCallbackReceiver Methods | Improve this Doc View Source OnUndoRedoCellValueChanged(Int32, Int32) An undo/redo of a cell value change has occured. Declaration void OnUndoRedoCellValueChanged(int rowIdentifier, int columnIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The affected row's unique identifier. System.Int32 columnIdentifier The affected column's unique identifier. | Improve this Doc View Source OnUndoRedoColumnDefinitionChange(Int32) An undo/redo of a ColumnDescription change has occured. Declaration void OnUndoRedoColumnDefinitionChange(int columnIdentifier) Parameters Type Name Description System.Int32 columnIdentifier The affected column's unique identifier. | Improve this Doc View Source OnUndoRedoRowDefinitionChange(Int32) An undo/redo of a RowDescription change has occured. Declaration void OnUndoRedoRowDefinitionChange(int rowIdentifier) Parameters Type Name Description System.Int32 rowIdentifier The affected row's unique identifier. | Improve this Doc View Source OnUndoRedoSettingsChanged() An undo/redo of a settings change has occured. Declaration void OnUndoRedoSettingsChanged()"
  },
  "api/GDX.Editor.EditorPrefsCache.html": {
    "href": "api/GDX.Editor.EditorPrefsCache.html",
    "title": "EditorPrefsCache | GDX",
    "keywords": "Class EditorPrefsCache A cached version of UnityEditor.EditorPrefs , allowing for faster access. Inheritance System.Object EditorPrefsCache Namespace : GDX.Editor Syntax public static class EditorPrefsCache Remarks It is important to use the equivalent set methods to update the cache. Methods | Improve this Doc View Source GetBoolean(String, Boolean) Get a cached value or fill it from UnityEditor.EditorPrefs . Declaration public static bool GetBoolean(string id, bool defaultValue = true) Parameters Type Name Description System.String id Identifier for the System.Boolean value. System.Boolean defaultValue If no value is found, what should be used. Returns Type Description System.Boolean A boolean value. | Improve this Doc View Source GetColor(String, Color) Get a cached value or fill it from UnityEditor.EditorPrefs . Declaration public static Color GetColor(string id, Color defaultValue) Parameters Type Name Description System.String id Identifier for the UnityEngine.Color value. UnityEngine.Color defaultValue If no value is found, what should be used. Returns Type Description UnityEngine.Color A color value. | Improve this Doc View Source GetFloat(String, Single) Get a cached value or fill it from UnityEditor.EditorPrefs . Declaration public static float GetFloat(string id, float defaultValue = 0F) Parameters Type Name Description System.String id Identifier for the System.Single value. System.Single defaultValue If no value is found, what should be used. Returns Type Description System.Single A float value. | Improve this Doc View Source GetInteger(String, Int32) Get a cached value or fill it from UnityEditor.EditorPrefs . Declaration public static float GetInteger(string id, int defaultValue = -1) Parameters Type Name Description System.String id Identifier for the System.Int32 value. System.Int32 defaultValue If no value is found, what should be used. Returns Type Description System.Single An integer value. | Improve this Doc View Source GetString(String, String) Get a cached value or fill it from UnityEditor.EditorPrefs . Declaration public static string GetString(string id, string defaultValue = null) Parameters Type Name Description System.String id Identifier for the System.String value. System.String defaultValue If no value is found, what should be used. Returns Type Description System.String A string, or null. | Improve this Doc View Source SetBoolean(String, Boolean) Sets the cached value (and UnityEditor.EditorPrefs ) for the id . Declaration public static void SetBoolean(string id, bool setValue) Parameters Type Name Description System.String id Identifier for the System.Boolean value. System.Boolean setValue The desired value to set. | Improve this Doc View Source SetColor(String, Color) Sets the cached value (and UnityEditor.EditorPrefs ) for the id . Declaration public static void SetColor(string id, Color setValue) Parameters Type Name Description System.String id Identifier for the UnityEngine.Color value. UnityEngine.Color setValue The desired value to set. | Improve this Doc View Source SetFloat(String, Single) Sets the cached value (and UnityEditor.EditorPrefs ) for the id . Declaration public static void SetFloat(string id, float setValue) Parameters Type Name Description System.String id Identifier for the System.Single value. System.Single setValue The desired value to set. | Improve this Doc View Source SetInteger(String, Int32) Sets the cached value (and UnityEditor.EditorPrefs ) for the id . Declaration public static void SetInteger(string id, int setValue) Parameters Type Name Description System.String id Identifier for the System.Int32 value. System.Int32 setValue The desired value to set. | Improve this Doc View Source SetString(String, String) Sets the cached value (and UnityEditor.EditorPrefs ) for the id . Declaration public static void SetString(string id, string setValue) Parameters Type Name Description System.String id Identifier for the System.String value. System.String setValue The desired value to set."
  },
  "api/GDX.Editor.EditorTaskDirectorSystem.html": {
    "href": "api/GDX.Editor.EditorTaskDirectorSystem.html",
    "title": "EditorTaskDirectorSystem | GDX",
    "keywords": "Class EditorTaskDirectorSystem An editor-only method of ticking TaskDirector . Inheritance System.Object EditorTaskDirectorSystem Namespace : GDX.Editor Syntax public static class EditorTaskDirectorSystem Fields | Improve this Doc View Source ticked Triggered after the EditorTaskDirectorSystem has ticked. Declaration public static Action ticked Field Value Type Description System.Action Methods | Improve this Doc View Source GetTickRate() Get the current tick rate used by the EditorTaskDirectorSystem . Declaration public static double GetTickRate() Returns Type Description System.Double A double value representing the elapsed time necessary to trigger an update to the TaskDirector . | Improve this Doc View Source SetTickRate(Double) Update the rate at which the EditorTaskDirectorSystem updates the TaskDirector . Declaration public static void SetTickRate(double tickRate) Parameters Type Name Description System.Double tickRate The new tick rate. Remarks This will not survive domain reload, please see EditorTaskDirectorSystemTickRate ."
  },
  "api/GDX.Editor.EditorWindowExtensions.EditorWindowSetup.html": {
    "href": "api/GDX.Editor.EditorWindowExtensions.EditorWindowSetup.html",
    "title": "EditorWindowExtensions.EditorWindowSetup | GDX",
    "keywords": "Struct EditorWindowExtensions.EditorWindowSetup Namespace : GDX.Editor Syntax public struct EditorWindowSetup Constructors | Improve this Doc View Source EditorWindowSetup(Boolean, Boolean, Boolean, Boolean, Int32, Int32, Boolean, Int32, Int32) Declaration public EditorWindowSetup(bool useExisting = false, bool setFocus = true, bool maximized = false, bool setFixedSize = false, int width = 800, int height = 600, bool setPosition = false, int x = 0, int y = 0) Parameters Type Name Description System.Boolean useExisting System.Boolean setFocus System.Boolean maximized System.Boolean setFixedSize System.Int32 width System.Int32 height System.Boolean setPosition System.Int32 x System.Int32 y Fields | Improve this Doc View Source Focus Should we apply focus to the window? Declaration public bool Focus Field Value Type Description System.Boolean Remarks Newly created windows automatically get focus. | Improve this Doc View Source HasFixedSize The size of the window in pixels, this will automatically adjust for OS level scaling Declaration public bool HasFixedSize Field Value Type Description System.Boolean | Improve this Doc View Source HasPosition Declaration public bool HasPosition Field Value Type Description System.Boolean | Improve this Doc View Source Height The desired height of the window in pixels. Declaration public int Height Field Value Type Description System.Int32 Remarks This value will automatically be scaled based on display scaling. | Improve this Doc View Source Maximized Should we attempt to maximize the window? Declaration public bool Maximized Field Value Type Description System.Boolean | Improve this Doc View Source UseExisting Should an existing version of the window be used instead of creating a new instance? Declaration public bool UseExisting Field Value Type Description System.Boolean | Improve this Doc View Source Width The desired width of the window in pixels. Declaration public int Width Field Value Type Description System.Int32 Remarks This value will automatically be scaled based on display scaling. | Improve this Doc View Source X Declaration public int X Field Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y Field Value Type Description System.Int32"
  },
  "api/GDX.Editor.EditorWindowExtensions.html": {
    "href": "api/GDX.Editor.EditorWindowExtensions.html",
    "title": "EditorWindowExtensions | GDX",
    "keywords": "Class EditorWindowExtensions UnityEditor.EditorWindow Based Extension Methods Inheritance System.Object EditorWindowExtensions Namespace : GDX.Editor Syntax public static class EditorWindowExtensions Methods | Improve this Doc View Source ApplySetup(EditorWindow, EditorWindowExtensions.EditorWindowSetup) Apply the settings found in a EditorWindowExtensions.EditorWindowSetup to a given UnityEditor.EditorWindow . Declaration public static void ApplySetup(this EditorWindow window, EditorWindowExtensions.EditorWindowSetup setup) Parameters Type Name Description UnityEditor.EditorWindow window The target UnityEditor.EditorWindow . EditorWindowExtensions.EditorWindowSetup setup The settings data to be used. | Improve this Doc View Source ForceRepaint(EditorWindow) Force a window to repaint immediately. Declaration public static void ForceRepaint(this EditorWindow window) Parameters Type Name Description UnityEditor.EditorWindow window The UnityEditor.EditorWindow to target."
  },
  "api/GDX.Editor.GDXShortcutAttribute.html": {
    "href": "api/GDX.Editor.GDXShortcutAttribute.html",
    "title": "GDXShortcutAttribute | GDX",
    "keywords": "Class GDXShortcutAttribute Inheritance System.Object System.Attribute UnityEditor.ShortcutManagement.ShortcutBaseAttribute UnityEditor.ShortcutManagement.ShortcutAttribute GDXShortcutAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members UnityEditor.ShortcutManagement.ShortcutAttribute.displayName Namespace : GDX.Editor Syntax public class GDXShortcutAttribute : ShortcutAttribute, _Attribute Constructors | Improve this Doc View Source GDXShortcutAttribute(String, KeyCode, ShortcutModifiers, Type) GDXShortcutAttribute Constructor Declaration public GDXShortcutAttribute(string id, KeyCode defaultKeyCode, ShortcutModifiers defaultShortcutModifiers = ShortcutModifiers.None, Type context = null) Parameters Type Name Description System.String id Id to register the shortcut. It will automatically be prefix by 'GDX/' in order to be in the 'GDX' section of the shortcut manager. UnityEngine.KeyCode defaultKeyCode Optional key code for default binding. UnityEditor.ShortcutManagement.ShortcutModifiers defaultShortcutModifiers Optional shortcut modifiers for default binding. System.Type context Any context which limits the use of the shortcut. Implements System.Runtime.InteropServices._Attribute"
  },
  "api/GDX.Editor.html": {
    "href": "api/GDX.Editor.html",
    "title": "Namespace GDX.Editor | GDX",
    "keywords": "Namespace GDX.Editor Classes AssetDatabaseReference Automation A collection of helper methods used for automation processes. ConfigGenerator DataTableTracker A observer-like pattern for DataTableBase usage in the editor. EditorPrefsCache A cached version of UnityEditor.EditorPrefs , allowing for faster access. EditorTaskDirectorSystem An editor-only method of ticking TaskDirector . EditorWindowExtensions UnityEditor.EditorWindow Based Extension Methods GDXShortcutAttribute ManifestEntry An object representative of the GDX entry in a manifest lockfile. MenuItems ResourcesProvider SerializedProperties SerializedStopwatch An obscure usage stopwatch meant to track times across domain-reload and serialization. TestFramework TransientConfig A configuration that is operated on when in Project Settings. VersionControl A collection of version control related helper utilities. VisualElementsProvider Structs DataTableTracker.DataTableTrackerStats A DataTableTracker based set of stats. EditorWindowExtensions.EditorWindowSetup Interfaces DataTableTracker.ICellValueChangedCallbackReceiver An interface describing the functionality needed for an object to get a callback when a a cell values changes in a DataTableBase . DataTableTracker.IStructuralChangeCallbackReceiver An interface describing the functionality needed for an object to get a callback when a structural changes in a DataTableBase . DataTableTracker.IUndoRedoEventCallbackReceiver An interface describing the functionality needed for an object to get a callback when Unity performs an undo/redo operation on a DataTableBase ."
  },
  "api/GDX.Editor.Inspectors.DataTableInspectorBase.html": {
    "href": "api/GDX.Editor.Inspectors.DataTableInspectorBase.html",
    "title": "DataTableInspectorBase | GDX",
    "keywords": "Class DataTableInspectorBase A custom inspector for DataTableBase inheritors. Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor DataTableInspectorBase StableDataTableInspector Namespace : GDX.Editor.Inspectors Syntax public class DataTableInspectorBase : Editor Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI() Extension Methods ObjectExtensions.SafeDestroy(Object, Single)"
  },
  "api/GDX.Editor.Inspectors.html": {
    "href": "api/GDX.Editor.Inspectors.html",
    "title": "Namespace GDX.Editor.Inspectors | GDX",
    "keywords": "Namespace GDX.Editor.Inspectors Classes DataTableInspectorBase A custom inspector for DataTableBase inheritors. StableDataTableInspector Custom inspector for StableDataTable based on DataTableInspectorBase ."
  },
  "api/GDX.Editor.Inspectors.StableDataTableInspector.html": {
    "href": "api/GDX.Editor.Inspectors.StableDataTableInspector.html",
    "title": "StableDataTableInspector | GDX",
    "keywords": "Class StableDataTableInspector Custom inspector for StableDataTable based on DataTableInspectorBase . Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor DataTableInspectorBase StableDataTableInspector Inherited Members DataTableInspectorBase.OnInspectorGUI() Namespace : GDX.Editor.Inspectors Syntax [CustomEditor(typeof(StableDataTable))] public class StableDataTableInspector : DataTableInspectorBase Extension Methods ObjectExtensions.SafeDestroy(Object, Single)"
  },
  "api/GDX.Editor.ManifestEntry.html": {
    "href": "api/GDX.Editor.ManifestEntry.html",
    "title": "ManifestEntry | GDX",
    "keywords": "Class ManifestEntry An object representative of the GDX entry in a manifest lockfile. Inheritance System.Object ManifestEntry Namespace : GDX.Editor Syntax [Serializable] public class ManifestEntry Fields | Improve this Doc View Source dependencies Declaration public string[] dependencies Field Value Type Description System.String [] | Improve this Doc View Source depth Declaration public int depth Field Value Type Description System.Int32 | Improve this Doc View Source hash Declaration public string hash Field Value Type Description System.String | Improve this Doc View Source InstallationType Declaration [NonSerialized] public PackageProvider.InstallationType InstallationType Field Value Type Description GDX.Editor.PackageProvider.InstallationType | Improve this Doc View Source source Declaration public string source Field Value Type Description System.String | Improve this Doc View Source Tag Declaration [NonSerialized] public string Tag Field Value Type Description System.String | Improve this Doc View Source version Declaration public string version Field Value Type Description System.String Methods | Improve this Doc View Source Get(String) Declaration public static ManifestEntry Get(string json) Parameters Type Name Description System.String json Returns Type Description ManifestEntry"
  },
  "api/GDX.Editor.MenuItems.html": {
    "href": "api/GDX.Editor.MenuItems.html",
    "title": "MenuItems | GDX",
    "keywords": "Class MenuItems Inheritance System.Object MenuItems Namespace : GDX.Editor Syntax public static class MenuItems"
  },
  "api/GDX.Editor.PropertyDrawers.DisableInInspectorAttributePropertyDrawer.html": {
    "href": "api/GDX.Editor.PropertyDrawers.DisableInInspectorAttributePropertyDrawer.html",
    "title": "DisableInInspectorAttributePropertyDrawer | GDX",
    "keywords": "Class DisableInInspectorAttributePropertyDrawer The drawing component of the GDX.DisableInInspectorAttribute . Inheritance System.Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer DisableInInspectorAttributePropertyDrawer Namespace : GDX.Editor.PropertyDrawers Syntax [CustomPropertyDrawer(typeof(DisableInInspectorAttribute))] public class DisableInInspectorAttributePropertyDrawer : PropertyDrawer Methods | Improve this Doc View Source OnGUI(Rect, SerializedProperty, GUIContent) Unity IMGUI Draw Event Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position Rectangle on the screen to use for the property GUI. UnityEditor.SerializedProperty property The SerializedProperty to make the custom GUI for. UnityEngine.GUIContent label The label of this property. Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/GDX.Editor.PropertyDrawers.html": {
    "href": "api/GDX.Editor.PropertyDrawers.html",
    "title": "Namespace GDX.Editor.PropertyDrawers | GDX",
    "keywords": "Namespace GDX.Editor.PropertyDrawers Classes DisableInInspectorAttributePropertyDrawer The drawing component of the GDX.DisableInInspectorAttribute ."
  },
  "api/GDX.Editor.ResourcesProvider.html": {
    "href": "api/GDX.Editor.ResourcesProvider.html",
    "title": "ResourcesProvider | GDX",
    "keywords": "Class ResourcesProvider Inheritance System.Object ResourcesProvider Namespace : GDX.Editor Syntax public static class ResourcesProvider Fields | Improve this Doc View Source ChangedClass Declaration public const string ChangedClass = \"changed\" Field Value Type Description System.String | Improve this Doc View Source DisabledClass Declaration public const string DisabledClass = \"disabled\" Field Value Type Description System.String | Improve this Doc View Source EnabledClass Declaration public const string EnabledClass = \"enabled\" Field Value Type Description System.String | Improve this Doc View Source ExpandedClass Declaration public const string ExpandedClass = \"expanded\" Field Value Type Description System.String | Improve this Doc View Source HiddenClass Declaration public const string HiddenClass = \"hidden\" Field Value Type Description System.String | Improve this Doc View Source SearchClass Declaration public const string SearchClass = \"search\" Field Value Type Description System.String | Improve this Doc View Source SearchHighlightClass Declaration public const string SearchHighlightClass = \"search-item\" Field Value Type Description System.String Methods | Improve this Doc View Source CheckTheme(VisualElement) Apply light/dark mode classes. Declaration public static void CheckTheme(VisualElement element) Parameters Type Name Description UnityEngine.UIElements.VisualElement element The target element to have classes applied to. | Improve this Doc View Source GetBanner() Returns an instance of the GDX logo banner image. Declaration public static Texture2D GetBanner() Returns Type Description UnityEngine.Texture2D An image loaded from disk, if not cached. | Improve this Doc View Source GetDataTableIcon() Returns an instance of the DataTable icon. Declaration public static Texture2D GetDataTableIcon() Returns Type Description UnityEngine.Texture2D An image loaded from disk, if not cached. | Improve this Doc View Source GetLogo() Returns an instance of the dotBunny logo image. Declaration public static Texture2D GetLogo() Returns Type Description UnityEngine.Texture2D An image loaded from disk, if not cached. | Improve this Doc View Source GetSharedStylesheet() Return the global stylesheet. Declaration public static StyleSheet GetSharedStylesheet() Returns Type Description UnityEngine.UIElements.StyleSheet The stylesheet if found, or null. Remarks This will find and cache the stylesheet reference for future use, using the first asset to match the query. | Improve this Doc View Source GetStylesheet(String) Declaration public static StyleSheet GetStylesheet(string targetName) Parameters Type Name Description System.String targetName Returns Type Description UnityEngine.UIElements.StyleSheet | Improve this Doc View Source GetStyleSheetOverride() Return the override stylesheet. Declaration public static StyleSheet GetStyleSheetOverride() Returns Type Description UnityEngine.UIElements.StyleSheet The stylesheet if found, or null. Remarks This will find and cache the stylesheet reference for future use, using the first asset to match the query. | Improve this Doc View Source SetupSharedStylesheets(VisualElement) Sets up the initial stylesheets for a UnityEngine.UIElements.VisualElement . Declaration public static void SetupSharedStylesheets(VisualElement rootElement) Parameters Type Name Description UnityEngine.UIElements.VisualElement rootElement The target UnityEngine.UIElements.VisualElement to have the stylesheets applied to. | Improve this Doc View Source SetupStylesheet(String, VisualElement) Add the target stylesheet to the provided rootElement . Declaration public static void SetupStylesheet(string targetName, VisualElement rootElement) Parameters Type Name Description System.String targetName The name of the stylesheet found in the package. UnityEngine.UIElements.VisualElement rootElement The element to apply the stylesheet to."
  },
  "api/GDX.Editor.SerializedProperties.html": {
    "href": "api/GDX.Editor.SerializedProperties.html",
    "title": "SerializedProperties | GDX",
    "keywords": "Class SerializedProperties Inheritance System.Object SerializedProperties Namespace : GDX.Editor Syntax public static class SerializedProperties Fields | Improve this Doc View Source SerializationFieldFlags Declaration public const BindingFlags SerializationFieldFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source SerializationPropertyFlags Declaration public const BindingFlags SerializationPropertyFlags = BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags Methods | Improve this Doc View Source GetValue(SerializedProperty) Declaration public static object GetValue(this SerializedProperty property) Parameters Type Name Description UnityEditor.SerializedProperty property Returns Type Description System.Object | Improve this Doc View Source SetValue(SerializedProperty, Object) Declaration public static void SetValue(this SerializedProperty property, object value) Parameters Type Name Description UnityEditor.SerializedProperty property System.Object value"
  },
  "api/GDX.Editor.SerializedStopwatch.html": {
    "href": "api/GDX.Editor.SerializedStopwatch.html",
    "title": "SerializedStopwatch | GDX",
    "keywords": "Class SerializedStopwatch An obscure usage stopwatch meant to track times across domain-reload and serialization. Inheritance System.Object SerializedStopwatch Implements UnityEngine.ISerializationCallbackReceiver Namespace : GDX.Editor Syntax [Serializable] public class SerializedStopwatch : ISerializationCallbackReceiver Properties | Improve this Doc View Source ElapsedTicks Returns the total number of ticks elapsed since GetStartTick() was called. Declaration public double ElapsedTicks { get; } Property Value Type Description System.Double | Improve this Doc View Source SerializationSpan Declaration public double SerializationSpan { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source GetStartTick() Get the starting point for the stopwatch. Declaration public double GetStartTick() Returns Type Description System.Double The System.DateTime.Now set by SetStartTick() . | Improve this Doc View Source OnAfterDeserialize() Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnBeforeSerialize() Declaration public void OnBeforeSerialize() | Improve this Doc View Source SetStartTick() Declaration public void SetStartTick() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GDX.Editor.TestFramework.html": {
    "href": "api/GDX.Editor.TestFramework.html",
    "title": "TestFramework | GDX",
    "keywords": "Class TestFramework Inheritance System.Object TestFramework Namespace : GDX.Editor Syntax public static class TestFramework Methods | Improve this Doc View Source ForceEmptyScene() Declaration public static Scene ForceEmptyScene() Returns Type Description UnityEngine.SceneManagement.Scene | Improve this Doc View Source Initialize() Declaration [InitializeOnLoadMethod] public static void Initialize()"
  },
  "api/GDX.Editor.TransientConfig.html": {
    "href": "api/GDX.Editor.TransientConfig.html",
    "title": "TransientConfig | GDX",
    "keywords": "Class TransientConfig A configuration that is operated on when in Project Settings. Inheritance System.Object TransientConfig Namespace : GDX.Editor Syntax public class TransientConfig Remarks A non-static copy of Config . Constructors | Improve this Doc View Source TransientConfig() Declaration public TransientConfig() Fields | Improve this Doc View Source BuildInfo Should the BuildInfo file be written during builds? Declaration public bool BuildInfo Field Value Type Description System.Boolean | Improve this Doc View Source BuildInfoAssemblyDefinition Ensure that there is an assembly definition wrapping the generated content. Declaration public bool BuildInfoAssemblyDefinition Field Value Type Description System.Boolean | Improve this Doc View Source BuildInfoBuildChangelistArgument The argument key for the build's changelist to be passed to the BuildInfoGenerator. Declaration public string BuildInfoBuildChangelistArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildDescriptionArgument The argument key for the build description to be passed to the BuildInfoGenerator. Declaration public string BuildInfoBuildDescriptionArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildNumberArgument The argument key for the build number to be passed to the BuildInfoGenerator. Declaration public string BuildInfoBuildNumberArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildStreamArgument The argument key for the build's stream to be passed to the BuildInfoGenerator. Declaration public string BuildInfoBuildStreamArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoBuildTaskArgument The argument key for the build's task to be passed to the BuildInfoGenerator. Declaration public string BuildInfoBuildTaskArgument Field Value Type Description System.String | Improve this Doc View Source BuildInfoNamespace The namespace where the BuildInfo should be placed. Declaration public string BuildInfoNamespace Field Value Type Description System.String | Improve this Doc View Source BuildInfoOutputPath The path to output the BuildInfo file. Declaration public string BuildInfoOutputPath Field Value Type Description System.String | Improve this Doc View Source CommandLineParserArgumentPrefix What should be used to denote arguments in the command line? Declaration public string CommandLineParserArgumentPrefix Field Value Type Description System.String | Improve this Doc View Source CommandLineParserArgumentSplit What should be used to split arguments from their values in the command line? Declaration public string CommandLineParserArgumentSplit Field Value Type Description System.String | Improve this Doc View Source ConfigOutputPath The asset database relative path of the GDX config override file. Declaration public string ConfigOutputPath Field Value Type Description System.String | Improve this Doc View Source EditorTaskDirectorSystem Should the Editor Task Director tick the Task Director. Declaration public bool EditorTaskDirectorSystem Field Value Type Description System.Boolean | Improve this Doc View Source EditorTaskDirectorSystemTickRate How often should the editor task director tick trigger the task director to tick? Declaration public double EditorTaskDirectorSystemTickRate Field Value Type Description System.Double | Improve this Doc View Source EnvironmentDeveloperConsole Should the GDX developer console be used. Declaration public bool EnvironmentDeveloperConsole Field Value Type Description System.Boolean | Improve this Doc View Source EnvironmentScriptingDefineSymbol Should a GDX scripting define symbol be added to all target build groups. Declaration public bool EnvironmentScriptingDefineSymbol Field Value Type Description System.Boolean | Improve this Doc View Source EnvironmentToolsMenu Should the GDX tools menu be added in the editor? Declaration public bool EnvironmentToolsMenu Field Value Type Description System.Boolean | Improve this Doc View Source LocalizationDefaultCulture The language to set the default thread culture too. Declaration public Localization.Language LocalizationDefaultCulture Field Value Type Description Localization.Language | Improve this Doc View Source LocalizationSetDefaultCulture Should the default thread culture be set? Declaration public bool LocalizationSetDefaultCulture Field Value Type Description System.Boolean | Improve this Doc View Source PlatformAutomationFolder The project relative path where automation should store its artifacts. Declaration public string PlatformAutomationFolder Field Value Type Description System.String | Improve this Doc View Source PlatformCacheFolder The project relative path to use as a cache. Declaration public string PlatformCacheFolder Field Value Type Description System.String | Improve this Doc View Source TaskDirectorSystem Should the Task Director System be added to the player loop during playmode. Declaration public bool TaskDirectorSystem Field Value Type Description System.Boolean | Improve this Doc View Source TaskDirectorSystemTickRate How often should the task director tick in playmode? Declaration public float TaskDirectorSystemTickRate Field Value Type Description System.Single | Improve this Doc View Source UpdateProviderCheckForUpdates Should GDX check for updates at editor time? Declaration public bool UpdateProviderCheckForUpdates Field Value Type Description System.Boolean Methods | Improve this Doc View Source HasChanges() Declaration public bool HasChanges() Returns Type Description System.Boolean"
  },
  "api/GDX.Editor.VersionControl.html": {
    "href": "api/GDX.Editor.VersionControl.html",
    "title": "VersionControl | GDX",
    "keywords": "Class VersionControl A collection of version control related helper utilities. Inheritance System.Object VersionControl Namespace : GDX.Editor Syntax public static class VersionControl Methods | Improve this Doc View Source CheckoutFolder(String) Synchronously checkout the contents of a folder if under source control known to Unity, and with it enabled. Declaration public static void CheckoutFolder(string folderPath) Parameters Type Name Description System.String folderPath The absolute path to the target folder. | Improve this Doc View Source GetAssetListFromFolder(String, String, SearchOption) Get an UnityEditor.VersionControl.AssetList from an absoluteDirectoryPath . Declaration public static AssetList GetAssetListFromFolder(string absoluteDirectoryPath, string searchPattern = \"*.*\", SearchOption searchOption = SearchOption.AllDirectories) Parameters Type Name Description System.String absoluteDirectoryPath A fully qualified path on disk to query. System.String searchPattern The search pattern to look for files with. System.IO.SearchOption searchOption What level of searching should be done. Returns Type Description UnityEditor.VersionControl.AssetList An UnityEditor.VersionControl.AssetList containing any valid assets under version control."
  },
  "api/GDX.Editor.VisualElementsProvider.html": {
    "href": "api/GDX.Editor.VisualElementsProvider.html",
    "title": "VisualElementsProvider | GDX",
    "keywords": "Class VisualElementsProvider Inheritance System.Object VisualElementsProvider Namespace : GDX.Editor Syntax public static class VisualElementsProvider Methods | Improve this Doc View Source ActionableHelpBox(String, HelpBoxMessageType, String, Action) Declaration public static VisualElement ActionableHelpBox(string message, HelpBoxMessageType type, string action, Action onAction) Parameters Type Name Description System.String message UnityEngine.UIElements.HelpBoxMessageType type System.String action System.Action onAction Returns Type Description UnityEngine.UIElements.VisualElement"
  },
  "api/GDX.Editor.Windows.ProjectSettings.ChangelogProvider.html": {
    "href": "api/GDX.Editor.Windows.ProjectSettings.ChangelogProvider.html",
    "title": "ChangelogProvider | GDX",
    "keywords": "Class ChangelogProvider Inheritance System.Object ChangelogProvider Namespace : GDX.Editor.Windows.ProjectSettings Syntax public static class ChangelogProvider Methods | Improve this Doc View Source StartTask(VisualElement) Declaration public static void StartTask(VisualElement container) Parameters Type Name Description UnityEngine.UIElements.VisualElement container"
  },
  "api/GDX.Editor.Windows.ProjectSettings.html": {
    "href": "api/GDX.Editor.Windows.ProjectSettings.html",
    "title": "Namespace GDX.Editor.Windows.ProjectSettings | GDX",
    "keywords": "Namespace GDX.Editor.Windows.ProjectSettings Classes ChangelogProvider Interfaces IConfigSection"
  },
  "api/GDX.Editor.Windows.ProjectSettings.IConfigSection.html": {
    "href": "api/GDX.Editor.Windows.ProjectSettings.IConfigSection.html",
    "title": "IConfigSection | GDX",
    "keywords": "Interface IConfigSection Namespace : GDX.Editor.Windows.ProjectSettings Syntax public interface IConfigSection Methods | Improve this Doc View Source BindSectionContent(VisualElement) Declaration void BindSectionContent(VisualElement rootElement) Parameters Type Name Description UnityEngine.UIElements.VisualElement rootElement | Improve this Doc View Source GetDefaultVisibility() Declaration bool GetDefaultVisibility() Returns Type Description System.Boolean | Improve this Doc View Source GetSearchKeywords() Declaration string[] GetSearchKeywords() Returns Type Description System.String [] | Improve this Doc View Source GetSectionHeaderLabel() Declaration string GetSectionHeaderLabel() Returns Type Description System.String | Improve this Doc View Source GetSectionHelpLink() Declaration string GetSectionHelpLink() Returns Type Description System.String | Improve this Doc View Source GetSectionIndex() Declaration int GetSectionIndex() Returns Type Description System.Int32 | Improve this Doc View Source GetSectionKey() Declaration string GetSectionKey() Returns Type Description System.String | Improve this Doc View Source GetTemplateName() Declaration string GetTemplateName() Returns Type Description System.String | Improve this Doc View Source GetToggleState() Declaration bool GetToggleState() Returns Type Description System.Boolean | Improve this Doc View Source GetToggleSupport() Declaration bool GetToggleSupport() Returns Type Description System.Boolean | Improve this Doc View Source GetToggleTooltip() Declaration string GetToggleTooltip() Returns Type Description System.String | Improve this Doc View Source SetToggleState(VisualElement, Boolean) Declaration void SetToggleState(VisualElement toggleElement, bool newState) Parameters Type Name Description UnityEngine.UIElements.VisualElement toggleElement System.Boolean newState | Improve this Doc View Source UpdateSectionContent() Declaration void UpdateSectionContent()"
  },
  "api/GDX.EnumExtensions.html": {
    "href": "api/GDX.EnumExtensions.html",
    "title": "EnumExtensions | GDX",
    "keywords": "Class EnumExtensions Enumeration Based Extension Methods Inheritance System.Object EnumExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class EnumExtensions Methods | Improve this Doc View Source HasFlags<T>(T, T) Determine if the provide flags ( needles ) are found in the haystack . Declaration public static bool HasFlags<T>(this T haystack, T needles) where T : struct, Enum Parameters Type Name Description T haystack A predefined flag based enumeration. T needles A set of flags to search for in the predefined enumeration. Returns Type Description System.Boolean true if the needles are found in the haystack, otherwise false. Type Parameters Name Description T The enumeration's type. Remarks Faster then System.Enum.HasFlag(System.Enum) ."
  },
  "api/GDX.Experimental.DebugDraw.html": {
    "href": "api/GDX.Experimental.DebugDraw.html",
    "title": "DebugDraw | GDX",
    "keywords": "Class DebugDraw A debug draw system useful in both the editor and at runtime. Inheritance System.Object DebugDraw Namespace : GDX.Experimental Syntax public static class DebugDraw Methods | Improve this Doc View Source GetUnmanagedBuffer(Int32, Int32, Int32) Get an instance of DebugDrawBuffer based on the provided key that is not managed. Declaration public static DebugDrawBuffer GetUnmanagedBuffer(int key, int initialColorCount = 5, int verticesPerMesh = 512) Parameters Type Name Description System.Int32 key A value based key used to reference a DebugDrawBuffer in a IntKeyDictionary<TValue> . System.Int32 initialColorCount Initial number of internal materials to allocate (x2). System.Int32 verticesPerMesh The number of vertices to split batched meshes on. Returns Type Description DebugDrawBuffer A newly created DebugDrawBuffer if the provided key is not found, or the previously created DebugDrawBuffer identified by the key . Examples By checking the Finalized property we can skip over the expensive building step. DebugDrawBuffer buffer = DebugDraw.GetUnmanagedBuffer(gameObjet.GetInstanceID()); if (!buffer.Finalized) { /// Draw lots of stuff ... buffer.DrawWireCube(Color.white, worldPosition, size); } buffer.Execute(); | Improve this Doc View Source HasUnmanagedBuffer(Int32) Returns if the provided key has an unmanaged DebugDrawBuffer referenced. Declaration public static bool HasUnmanagedBuffer(int key) Parameters Type Name Description System.Int32 key The key used to reference the DebugDrawBuffer . Returns Type Description System.Boolean true/false if the key has a DebugDrawBuffer associated with it. | Improve this Doc View Source RemoveUnmanagedBuffer(Int32) Dereference the indicated unmanaged DebugDrawBuffer from the provider. Declaration public static void RemoveUnmanagedBuffer(int key) Parameters Type Name Description System.Int32 key The key used to reference the DebugDrawBuffer ."
  },
  "api/GDX.Experimental.DebugDrawBuffer.html": {
    "href": "api/GDX.Experimental.DebugDrawBuffer.html",
    "title": "DebugDrawBuffer | GDX",
    "keywords": "Class DebugDrawBuffer An optimized method for drawing static procedural content. Inheritance System.Object DebugDrawBuffer Namespace : GDX.Experimental Syntax public class DebugDrawBuffer Remarks This still suffers from multiple SetPass calls associated with the UnityEngine.Rendering.CommandBuffer . It should be possible in the future to using GraphicsBuffers/BatchRenderGroup once that API stabilizes. Constructors | Improve this Doc View Source DebugDrawBuffer(Int32, Int32, Int32) Create a DebugDrawBuffer . Declaration public DebugDrawBuffer(int key, int initialMaterialCount = 5, int verticesPerMesh = 512) Parameters Type Name Description System.Int32 key The internally cached key associated with this buffer. System.Int32 initialMaterialCount An initial allocation of the expected number of materials that will be used. System.Int32 verticesPerMesh The number of vertices to ingest before a meshReference is split. Fields | Improve this Doc View Source DefaultMaximumVerticesPerMesh The default maximum number of vertices per meshReference when dynamically creating meshes. Declaration public const int DefaultMaximumVerticesPerMesh = 512 Field Value Type Description System.Int32 | Improve this Doc View Source Key The associated System.Int32 key with the DebugDrawBuffer . Declaration public readonly int Key Field Value Type Description System.Int32 Remarks This is useful for identifying the DebugDrawBuffer in different contexts; its specific use is meant for being able to recall a DebugDrawBuffer from the DebugDraw . A common pattern is to use the the UnityEngine.GameObject 's InstanceID or an Entity Number to create a unique indexer. Collisions can occur if you are not careful about how you index your DebugDrawBuffer . Properties | Improve this Doc View Source Finalized Has the DebugDrawBuffer been converged? Declaration public bool Finalized { get; } Property Value Type Description System.Boolean Remarks A finalized DebugDrawBuffer has had its command buffer filled with the fixed draw calls based on the meshes/materials outlined. If a meshReference is invalidated by Invalidate(Int32) , the DebugDrawBuffer will become not finalized and will re-converge itself next Execute() . Methods | Improve this Doc View Source Converge() Converges all working vertices/material additions into finalized meshReference forms and fills the command buffer with the appropriate data. Declaration public void Converge() | Improve this Doc View Source DrawDottedLine(Color, Vector3, Vector3) Draw a dotted line of a specific color as defined to the buffer. Declaration public int DrawDottedLine(Color color, Vector3 startPoint, Vector3 endPoint) Parameters Type Name Description UnityEngine.Color color The color which to draw the dotted line with. UnityEngine.Vector3 startPoint The start of the line in world space. UnityEngine.Vector3 endPoint The end of the line in world space. Returns Type Description System.Int32 The dotted line's invalidation token. Remarks If multiple lines are being drawn it is much more performant to use DrawDottedLines(Color, ref Vector3[], ref Int32[]) . | Improve this Doc View Source DrawDottedLines(Color, ref Vector3[], Int32, Int32, ref Int32[], Int32, Int32) Draw dotted lines of a specific color as defined to the buffer. Declaration public int DrawDottedLines(Color color, ref Vector3[] vertices, int verticesStartIndex, int verticesLength, ref int[] segments, int segmentsStartIndex, int segmentsLength) Parameters Type Name Description UnityEngine.Color color The color which to draw the dotted lines with. UnityEngine.Vector3 [] vertices The vertices of the dotted lines. System.Int32 verticesStartIndex The index to start at in the vertices array. System.Int32 verticesLength The number of elements in the vertices array to use. System.Int32 [] segments The segment pairs based on vertices . System.Int32 segmentsStartIndex The index to start at in the segments array. System.Int32 segmentsLength The number of elements in the segments array to use. Returns Type Description System.Int32 The dotted lines' invalidation token. | Improve this Doc View Source DrawDottedLines(Color, ref Vector3[], ref Int32[]) Draw dotted lines of a specific color as defined to the buffer. Declaration public int DrawDottedLines(Color color, ref Vector3[] vertices, ref int[] segments) Parameters Type Name Description UnityEngine.Color color The color which to draw the dotted lines with. UnityEngine.Vector3 [] vertices The vertices of the dotted lines. System.Int32 [] segments The segment pairs based on vertices . Returns Type Description System.Int32 The dotted lines' invalidation token. | Improve this Doc View Source DrawLine(Color, Vector3, Vector3) Draw a line of a specific color as defined to the buffer. Declaration public int DrawLine(Color color, Vector3 startPoint, Vector3 endPoint) Parameters Type Name Description UnityEngine.Color color The color which to draw the line with. UnityEngine.Vector3 startPoint The start of the line in world space. UnityEngine.Vector3 endPoint The end of the line in world space. Returns Type Description System.Int32 The line's invalidation token. Remarks If multiple lines are being drawn it is much more performant to use DrawLines(Color, ref Vector3[], ref Int32[]) . | Improve this Doc View Source DrawLines(Color, ref Vector3[], Int32, Int32, ref Int32[], Int32, Int32) Draw lines of a specific color as defined to the buffer. Declaration public int DrawLines(Color color, ref Vector3[] vertices, int verticesStartIndex, int verticesLength, ref int[] segments, int segmentsStartIndex, int segmentsLength) Parameters Type Name Description UnityEngine.Color color The color which to draw the lines with. UnityEngine.Vector3 [] vertices The vertices of the lines. System.Int32 verticesStartIndex The index to start at in the vertices array. System.Int32 verticesLength The number of elements in the vertices array to use. System.Int32 [] segments The segment pairs based on vertices . System.Int32 segmentsStartIndex The index to start at in the segments array. System.Int32 segmentsLength The number of elements in the segments array to use. Returns Type Description System.Int32 The lines' invalidation token. | Improve this Doc View Source DrawLines(Color, ref Vector3[], ref Int32[]) Draw lines of a specific color as defined to the buffer. Declaration public int DrawLines(Color color, ref Vector3[] vertices, ref int[] segments) Parameters Type Name Description UnityEngine.Color color The color which to draw the lines with. UnityEngine.Vector3 [] vertices The vertices of the lines. System.Int32 [] segments The segment pairs based on vertices . Returns Type Description System.Int32 The lines' invalidation token. | Improve this Doc View Source DrawLines(Material, ref Vector3[], Int32, Int32, ref Int32[], Int32, Int32) Draw lines with a specific material to the buffer. Declaration public int DrawLines(Material material, ref Vector3[] vertices, int verticesStartIndex, int verticesLength, ref int[] segments, int segmentsStartIndex, int segmentsLength) Parameters Type Name Description UnityEngine.Material material A potentially unlit material to draw the lines with. UnityEngine.Vector3 [] vertices The vertices of the lines. System.Int32 verticesStartIndex The index to start at in the vertices array. System.Int32 verticesLength The number of elements in the vertices array to use. System.Int32 [] segments The segment pairs based on vertices . System.Int32 segmentsStartIndex The index to start at in the segments array. System.Int32 segmentsLength The number of elements in the segments array to use. Returns Type Description System.Int32 The lines' invalidation token. | Improve this Doc View Source DrawMesh(Material, Mesh, ref Matrix4x4) Declaration public int DrawMesh(Material material, Mesh mesh, ref Matrix4x4 matrix) Parameters Type Name Description UnityEngine.Material material UnityEngine.Mesh mesh UnityEngine.Matrix4x4 matrix Returns Type Description System.Int32 | Improve this Doc View Source DrawRenderer(MeshRenderer, MeshFilter) Declaration public int DrawRenderer(MeshRenderer renderer, MeshFilter filter) Parameters Type Name Description UnityEngine.MeshRenderer renderer UnityEngine.MeshFilter filter Returns Type Description System.Int32 | Improve this Doc View Source Execute() Execute the DebugDrawBuffer , rendering its outputs to the screen. Declaration public void Execute() Remarks This will finalize the command buffer, converging all data into meshes, etc. In order to change the buffer, you will need to | Improve this Doc View Source GetBuffer() Get the internal command buffer being used by this DebugDrawBuffer . Declaration public CommandBuffer GetBuffer() Returns Type Description UnityEngine.Rendering.CommandBuffer A UnityEngine.Rendering.CommandBuffer . | Improve this Doc View Source HasToken(Int32) Is the given token present in the draw commands buffer. Declaration public bool HasToken(int token) Parameters Type Name Description System.Int32 token The token of the draw commands to check for. Returns Type Description System.Boolean Returns true if the token is found in the existing draw commands. | Improve this Doc View Source Invalidate(Int32) Invalidates a GDX.Experimental.DebugDrawBuffer.DrawCommand based on the provided token, forcing the buffer to be refilled. Declaration public void Invalidate(int token) Parameters Type Name Description System.Int32 token The token of the draw commands to invalidate. | Improve this Doc View Source InvalidateAll() Invalidates the entire DebugDrawBuffer . Declaration public void InvalidateAll() | Improve this Doc View Source NextDottedLineBatch(Color) Move to the next batch for a given dotted line color. Declaration public void NextDottedLineBatch(Color color) Parameters Type Name Description UnityEngine.Color color The color which the dotted line is drawn as. | Improve this Doc View Source NextLineBatch(Color) Move to the next batch for a given line color. Declaration public void NextLineBatch(Color color) Parameters Type Name Description UnityEngine.Color color The color which the line is drawn as. | Improve this Doc View Source NextLineBatch(Material) Move to the next batch for a given material. Declaration public void NextLineBatch(Material material) Parameters Type Name Description UnityEngine.Material material The material used by a batch. | Improve this Doc View Source Reset() Resets the DebugDrawBuffer , as if it were newly created. However all fields are already allocating their previous sizes. Declaration public void Reset() | Improve this Doc View Source Unlock() Declaration public void Unlock() Extension Methods DebugDrawShapes.DrawDottedCube(DebugDrawBuffer, Color, Vector3, Quaternion, Vector3) DebugDrawShapes.DrawWireCapsule(DebugDrawBuffer, Color, Vector3, Vector3, Quaternion, Single, Int32) DebugDrawShapes.DrawWireArc(DebugDrawBuffer, Color, Vector3, Quaternion, Single, Single, Single, Int32) DebugDrawShapes.DrawWireCircle(DebugDrawBuffer, Color, Vector3, Quaternion, Single, Int32) DebugDrawShapes.DrawWireCube(DebugDrawBuffer, Color, Vector3, Quaternion, Vector3) DebugDrawShapes.DrawWireSphere(DebugDrawBuffer, Color, Vector3, Quaternion, Single, Int32)"
  },
  "api/GDX.Experimental.DebugDrawShapes.html": {
    "href": "api/GDX.Experimental.DebugDrawShapes.html",
    "title": "DebugDrawShapes | GDX",
    "keywords": "Class DebugDrawShapes Inheritance System.Object DebugDrawShapes Namespace : GDX.Experimental Syntax public static class DebugDrawShapes Fields | Improve this Doc View Source CubeSegmentIndices The ordered segment index pairs used to describe a cube. Declaration public static int[] CubeSegmentIndices Field Value Type Description System.Int32 [] Remarks This effectively wraps the left side, then the right, then connects the two sides. Methods | Improve this Doc View Source DrawDottedCube(DebugDrawBuffer, Color, Vector3, Quaternion, Vector3) Draw a dotted line cube of a specific color to the buffer. Declaration public static int DrawDottedCube(this DebugDrawBuffer buffer, Color color, Vector3 center, Quaternion rotation, Vector3 size) Parameters Type Name Description DebugDrawBuffer buffer UnityEngine.Color color The color which to draw the dotted line cube with. UnityEngine.Vector3 center The center world position of the cube. UnityEngine.Quaternion rotation UnityEngine.Vector3 size The unit size of the cube Returns Type Description System.Int32 The created cube's invalidation token. | Improve this Doc View Source DrawWireArc(DebugDrawBuffer, Color, Vector3, Quaternion, Single, Single, Single, Int32) Declaration public static int DrawWireArc(this DebugDrawBuffer buffer, Color color, Vector3 center, Quaternion rotation, float radius, float startAngle = 0F, float endAngle = 180F, int arcVertexCount = 16) Parameters Type Name Description DebugDrawBuffer buffer UnityEngine.Color color UnityEngine.Vector3 center UnityEngine.Quaternion rotation System.Single radius System.Single startAngle System.Single endAngle System.Int32 arcVertexCount Returns Type Description System.Int32 | Improve this Doc View Source DrawWireCapsule(DebugDrawBuffer, Color, Vector3, Vector3, Quaternion, Single, Int32) Declaration public static int DrawWireCapsule(this DebugDrawBuffer buffer, Color color, Vector3 bottomSpherePosition, Vector3 topSpherePosition, Quaternion rotation, float radius, int arcVertexCount = 16) Parameters Type Name Description DebugDrawBuffer buffer UnityEngine.Color color UnityEngine.Vector3 bottomSpherePosition UnityEngine.Vector3 topSpherePosition UnityEngine.Quaternion rotation System.Single radius System.Int32 arcVertexCount Returns Type Description System.Int32 | Improve this Doc View Source DrawWireCircle(DebugDrawBuffer, Color, Vector3, Quaternion, Single, Int32) Declaration public static int DrawWireCircle(this DebugDrawBuffer buffer, Color color, Vector3 center, Quaternion rotation, float radius, int circleVertexCount = 32) Parameters Type Name Description DebugDrawBuffer buffer UnityEngine.Color color UnityEngine.Vector3 center UnityEngine.Quaternion rotation System.Single radius System.Int32 circleVertexCount Returns Type Description System.Int32 | Improve this Doc View Source DrawWireCube(DebugDrawBuffer, Color, Vector3, Quaternion, Vector3) Draw a wireframe cube of a specific color to the buffer. Declaration public static int DrawWireCube(this DebugDrawBuffer buffer, Color color, Vector3 center, Quaternion rotation, Vector3 size) Parameters Type Name Description DebugDrawBuffer buffer UnityEngine.Color color The color which to draw the wire cube with. UnityEngine.Vector3 center The center world position of the cube. UnityEngine.Quaternion rotation UnityEngine.Vector3 size The unit size of the cube Returns Type Description System.Int32 The created cube's invalidation token. | Improve this Doc View Source DrawWireSphere(DebugDrawBuffer, Color, Vector3, Quaternion, Single, Int32) Declaration public static int DrawWireSphere(this DebugDrawBuffer buffer, Color color, Vector3 center, Quaternion rotation, float radius, int circleVertexCount = 32) Parameters Type Name Description DebugDrawBuffer buffer UnityEngine.Color color UnityEngine.Vector3 center UnityEngine.Quaternion rotation System.Single radius System.Int32 circleVertexCount Returns Type Description System.Int32"
  },
  "api/GDX.Experimental.html": {
    "href": "api/GDX.Experimental.html",
    "title": "Namespace GDX.Experimental | GDX",
    "keywords": "Namespace GDX.Experimental Classes DebugDraw A debug draw system useful in both the editor and at runtime. DebugDrawBuffer An optimized method for drawing static procedural content. DebugDrawShapes"
  },
  "api/GDX.GameObjectExtensions.html": {
    "href": "api/GDX.GameObjectExtensions.html",
    "title": "GameObjectExtensions | GDX",
    "keywords": "Class GameObjectExtensions UnityEngine.GameObject Based Extension Methods Inheritance System.Object GameObjectExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class GameObjectExtensions Methods | Improve this Doc View Source DestroyChildren(GameObject, Boolean, Boolean) Destroy child UnityEngine.GameObject . Declaration public static void DestroyChildren(this GameObject targetGameObject, bool deactivateBeforeDestroy = true, bool destroyInactive = true) Parameters Type Name Description UnityEngine.GameObject targetGameObject The parent UnityEngine.GameObject to look at. System.Boolean deactivateBeforeDestroy Should the targetGameObject 's children be deactivated before destroying? This can be used to immediately hide an object, that will be destroyed at the end of the frame. System.Boolean destroyInactive Should inactive UnityEngine.GameObject be destroyed as well? Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetFirstComponentInChildrenComplex<T>(GameObject, Boolean, Boolean, Int32) A slightly more complex version of UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) which allows for different hinted search options. Declaration public static T GetFirstComponentInChildrenComplex<T>(this GameObject targetGameObject, bool includeInactive = false, bool lookInChildrenFirst = false, int maxLevelsOfRecursion = -1) where T : Component Parameters Type Name Description UnityEngine.GameObject targetGameObject The target UnityEngine.GameObject to use as the base for the search. System.Boolean includeInactive Include inactive child UnityEngine.GameObject s when looking for the UnityEngine.Component . System.Boolean lookInChildrenFirst Should children UnityEngine.GameObject be searched before the targetGameObject 's UnityEngine.GameObject . System.Int32 maxLevelsOfRecursion The maximum levels of recursion when looking for a UnityEngine.Component , -1 for infinite recursion. Returns Type Description T The first found UnityEngine.Component . Type Parameters Name Description T The target UnityEngine.Component type that is being looked for. Remarks If the maxLevelsOfRecursion is set to 1; this will search the targetGameObject and its immediate children only. The internal UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) has optimizations internally in engine code which make it faster in different scenarios. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetOrAddComponent<T>(GameObject) Get a component by type from a targetGameObject , if it is not found add and return it. Declaration public static T GetOrAddComponent<T>(this GameObject targetGameObject) where T : Component Parameters Type Name Description UnityEngine.GameObject targetGameObject The UnityEngine.GameObject that we should query for the component. Returns Type Description T The component on the targetGameObject . Type Parameters Name Description T The type of component. Remarks Adding a component at runtime is a performance nightmare. Use with caution! Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetScenePath(GameObject) Get an in scene path to the targetGameObject . Declaration public static string GetScenePath(this GameObject targetGameObject) Parameters Type Name Description UnityEngine.GameObject targetGameObject The UnityEngine.GameObject which to derive a path from. Returns Type Description System.String A created path System.String . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.html": {
    "href": "api/GDX.html",
    "title": "Namespace GDX | GDX",
    "keywords": "Namespace GDX Classes AddressablesExtensions Addressables Based Extension Methods ArrayExtensions Array Based Extension Methods BoxColliderExtensions UnityEngine.BoxCollider Based Extension Methods ByteExtensions System.Byte Based Extension Methods CameraExtensions UnityEngine.Camera Based Extension Methods CapsuleColliderExtensions UnityEngine.CapsuleCollider Based Extension Methods Config Project-wide configuration configurable for runtime override. Core Display A collection of display related helper utilities. EnumExtensions Enumeration Based Extension Methods GameObjectExtensions UnityEngine.GameObject Based Extension Methods Localization A collection of localization related helper utilities. Memory A collection of memory related helper utilities. MeshExtensions UnityEngine.Mesh Based Extension Methods MonoBehaviourExtensions UnityEngine.MonoBehaviour Based Extension Methods NavMeshPathExtensions UnityEngine.AI.NavMeshPath Based Extension Methods ObjectExtensions UnityEngine.Object Based Extension Methods Platform A collection of platform related helper utilities. PlayerLoopSystemExtensions UnityEngine.LowLevel.PlayerLoopSystem Based Extension Methods RectExtensions Reflection A collection of reflection related helper utilities. RigidbodyExtensions UnityEngine.Rigidbody Based Extension Methods SceneExtensions Serializable Space StringExtensions System.String Based Extension Methods TransformExtensions UnityEngine.Transform Based Extension Methods UnsupportedRuntimeException An exception used to indicate when a method is unavailable on a specific runtime. Vector2Extensions UnityEngine.Vector2 Based Extension Methods Vector3Extensions UnityEngine.Vector3 Based Extension Methods VisualElementStyles Structs SegmentedString A segmented collection of System.Char . Enums Localization.Language A list of supported languages. Serializable.SerializableTypes Space.Axis Space.Direction VisualElementStyles.Alignment"
  },
  "api/GDX.IO.CoalesceStream.html": {
    "href": "api/GDX.IO.CoalesceStream.html",
    "title": "CoalesceStream | GDX",
    "keywords": "Class CoalesceStream A byte backed stream which combines multiple arrays acting as one uniform stream. Inheritance System.Object System.MarshalByRefObject System.IO.Stream CoalesceStream Implements System.IAsyncDisposable System.IDisposable Inherited Members System.IO.Stream.Null System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.Close() System.IO.Stream.CopyTo(System.IO.Stream) System.IO.Stream.CopyTo(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Threading.CancellationToken) System.IO.Stream.CreateWaitHandle() System.IO.Stream.Dispose() System.IO.Stream.Dispose(System.Boolean) System.IO.Stream.DisposeAsync() System.IO.Stream.EndRead(System.IAsyncResult) System.IO.Stream.EndWrite(System.IAsyncResult) System.IO.Stream.FlushAsync() System.IO.Stream.FlushAsync(System.Threading.CancellationToken) System.IO.Stream.ObjectInvariant() System.IO.Stream.Read(System.Span<System.Byte>) System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.ReadAsync(System.Memory<System.Byte>, System.Threading.CancellationToken) System.IO.Stream.Synchronized(System.IO.Stream) System.IO.Stream.Write(System.ReadOnlySpan<System.Byte>) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.WriteAsync(System.ReadOnlyMemory<System.Byte>, System.Threading.CancellationToken) System.IO.Stream.CanTimeout System.IO.Stream.ReadTimeout System.IO.Stream.WriteTimeout System.MarshalByRefObject.GetLifetimeService() System.MarshalByRefObject.InitializeLifetimeService() System.MarshalByRefObject.MemberwiseClone(System.Boolean) Namespace : GDX.IO Syntax public class CoalesceStream : Stream, IAsyncDisposable, IDisposable Remarks Max size being limited to GDX.IO.CoalesceStream.m_Length type limitations. Constructors | Improve this Doc View Source CoalesceStream(Byte[], Int32) Create a CoalesceStream and fill it with the data found in source . Declaration public CoalesceStream(byte[] source, int bucketSize = 65536) Parameters Type Name Description System.Byte [] source An array used to prefill the CoalesceStream with. System.Int32 bucketSize The bucket allocation size. | Improve this Doc View Source CoalesceStream(Int32) Create a CoalesceStream . Declaration public CoalesceStream(int bucketSize = 65536) Parameters Type Name Description System.Int32 bucketSize The bucket allocation size. | Improve this Doc View Source CoalesceStream(Int32, Int32) Preallocate a CoalesceStream at the desired length . Declaration public CoalesceStream(int length, int bucketSize = 65536) Parameters Type Name Description System.Int32 length The desired pre-allocated size. System.Int32 bucketSize The bucket allocation size. | Improve this Doc View Source CoalesceStream(Int64, Int32) Preallocate a CoalesceStream at the desired length . Declaration public CoalesceStream(long length, int bucketSize = 65536) Parameters Type Name Description System.Int64 length The desired pre-allocated size. System.Int32 bucketSize The bucket allocation size. Properties | Improve this Doc View Source CanRead Is this System.IO.Stream capable of reading? Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean Overrides System.IO.Stream.CanRead | Improve this Doc View Source CanSeek Is this System.IO.Stream capable of seeking? Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean Overrides System.IO.Stream.CanSeek | Improve this Doc View Source CanWrite Is this System.IO.Stream capable of writing? Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Overrides System.IO.Stream.CanWrite | Improve this Doc View Source Length Get the combined length of the internal arrays. Declaration public override long Length { get; } Property Value Type Description System.Int64 Overrides System.IO.Stream.Length | Improve this Doc View Source Position Get the current position in the System.IO.Stream . Declaration public sealed override long Position { get; set; } Property Value Type Description System.Int64 Overrides System.IO.Stream.Position Methods | Improve this Doc View Source Flush() Flush reading and writing buffers. Declaration public override void Flush() Overrides System.IO.Stream.Flush() Remarks Does nothing for the CoalesceStream . | Improve this Doc View Source Read(Byte[], Int32, Int32) Read from the CoalesceStream into a buffer. Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer The target buffer to write the read data into. System.Int32 offset The offset position to start writing into the buffer . System.Int32 count The number of System.Byte s to read. Returns Type Description System.Int32 The number of bytes read. Overrides System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32) Exceptions Type Condition System.ArgumentOutOfRangeException Thrown when a negative amounts of bytes are requested, or a negative offset is provided. System.ArgumentNullException Thrown when the provided buffer is null. | Improve this Doc View Source ReadByte() Read a singular System.Byte from the current position, incrementing the position. Declaration public override int ReadByte() Returns Type Description System.Int32 A valid byte as an int, or -1. Overrides System.IO.Stream.ReadByte() | Improve this Doc View Source Seek(Int64, SeekOrigin) Seek the internal position to a new location. Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description System.Int64 offset The value to offset the internal position by. System.IO.SeekOrigin origin The origin of the offset. Returns Type Description System.Int64 Overrides System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin) | Improve this Doc View Source SetLength(Int64) Arbitrarily set the internal length of the CoalesceStream Declaration public sealed override void SetLength(long value) Parameters Type Name Description System.Int64 value The new length value. Overrides System.IO.Stream.SetLength(System.Int64) | Improve this Doc View Source Write(Byte[], Int32, Int32) Write into the CoalesceStream at the current position. Declaration public sealed override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer The source array to read data from System.Int32 offset An offset of where to start in the buffer . System.Int32 count The number of bytes to read from the buffer . Overrides System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32) | Improve this Doc View Source WriteByte(Byte) Write a singular System.Byte to the CoalesceStream , incrementing the position. Declaration public override void WriteByte(byte value) Parameters Type Name Description System.Byte value The System.Byte to write to the CoalesceStream . Overrides System.IO.Stream.WriteByte(System.Byte) Implements System.IAsyncDisposable System.IDisposable"
  },
  "api/GDX.IO.Compression.html": {
    "href": "api/GDX.IO.Compression.html",
    "title": "Namespace GDX.IO.Compression | GDX",
    "keywords": "Namespace GDX.IO.Compression Classes TarFile Provides static methods for extracting tar files and tarballs."
  },
  "api/GDX.IO.Compression.TarFile.html": {
    "href": "api/GDX.IO.Compression.TarFile.html",
    "title": "TarFile | GDX",
    "keywords": "Class TarFile Provides static methods for extracting tar files and tarballs. Inheritance System.Object TarFile Namespace : GDX.IO.Compression Syntax public static class TarFile Methods | Improve this Doc View Source ExtractStream(Stream, String) Extract a tar formatted System.IO.Stream to the destinationDirectoryName . Declaration public static void ExtractStream(Stream sourceStream, string destinationDirectoryName) Parameters Type Name Description System.IO.Stream sourceStream The System.IO.Stream which to extract from. System.String destinationDirectoryName Output directory to write the files. | Improve this Doc View Source ExtractToDirectory(String, String, Boolean) Extracts all the files in the specified tar/tarball to a directory on the file system. Declaration public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool forceGZipDataFormat = false) Parameters Type Name Description System.String sourceArchiveFileName The path to the archive that is to be extracted. System.String destinationDirectoryName The path to the directory in which to place the extracted files, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory. System.Boolean forceGZipDataFormat Enforce inflating the file via a System.IO.Compression.GZipStream . Examples A synchronous approach to extracting the contents of a file, to a folder: TarFile.ExtractToDirectory(\"C:\\Temp\\DownloadCache.tar.gz\", \"C:\\Saved\");"
  },
  "api/GDX.IO.html": {
    "href": "api/GDX.IO.html",
    "title": "Namespace GDX.IO | GDX",
    "keywords": "Namespace GDX.IO Classes CoalesceStream A byte backed stream which combines multiple arrays acting as one uniform stream."
  },
  "api/GDX.Jobs.ParallelFor.Color32CompareJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.Color32CompareJob.html",
    "title": "Color32CompareJob | GDX",
    "keywords": "Struct Color32CompareJob Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct Color32CompareJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source Percentage The percent difference between the two values. Declaration [WriteOnly] public NativeArray<float> Percentage Field Value Type Description Unity.Collections.NativeArray < System.Single > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.Color32MatchJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.Color32MatchJob.html",
    "title": "Color32MatchJob | GDX",
    "keywords": "Struct Color32MatchJob Determines if the UnityEngine.Color32 s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct Color32MatchJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color32> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color32 > | Improve this Doc View Source Match Does the color match? Declaration [WriteOnly] public NativeArray<bool> Match Field Value Type Description Unity.Collections.NativeArray < System.Boolean > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.ColorCompareJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.ColorCompareJob.html",
    "title": "ColorCompareJob | GDX",
    "keywords": "Struct ColorCompareJob Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct ColorCompareJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source Percentage The percent difference between the two values. Declaration [WriteOnly] public NativeArray<float> Percentage Field Value Type Description Unity.Collections.NativeArray < System.Single > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.ColorMatchJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.ColorMatchJob.html",
    "title": "ColorMatchJob | GDX",
    "keywords": "Struct ColorMatchJob Determines if the UnityEngine.Color s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct ColorMatchJob : IJobParallelFor Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> A Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Byte . Declaration [ReadOnly] public NativeArray<Color> B Field Value Type Description Unity.Collections.NativeArray < UnityEngine.Color > | Improve this Doc View Source Match Does the color match? Declaration [WriteOnly] public NativeArray<bool> Match Field Value Type Description Unity.Collections.NativeArray < System.Boolean > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.html": {
    "href": "api/GDX.Jobs.ParallelFor.html",
    "title": "Namespace GDX.Jobs.ParallelFor | GDX",
    "keywords": "Namespace GDX.Jobs.ParallelFor Structs Color32CompareJob Color32MatchJob Determines if the UnityEngine.Color32 s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. ColorCompareJob ColorMatchJob Determines if the UnityEngine.Color s in the provided Unity.Collections.NativeArray<T> s match each other in parallel. IntegerBufferCopyJob Copy one Unity.Collections.NativeArray<T> typed as System.Int32 to another in parallel. IntegerBufferFillJob Fills a Unity.Collections.NativeArray<T> typed as System.Int32 with a value in parallel. IntegerBufferSwapJob Swaps a Unity.Collections.NativeArray<T> typed as System.Int32 with a another in parallel."
  },
  "api/GDX.Jobs.ParallelFor.IntegerBufferCopyJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.IntegerBufferCopyJob.html",
    "title": "IntegerBufferCopyJob | GDX",
    "keywords": "Struct IntegerBufferCopyJob Copy one Unity.Collections.NativeArray<T> typed as System.Int32 to another in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct IntegerBufferCopyJob : IJobParallelFor Fields | Improve this Doc View Source Destination The destination Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration [WriteOnly] public NativeArray<int> Destination Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Write-only. | Improve this Doc View Source Source The source Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration [ReadOnly] public NativeArray<int> Source Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Read-only. Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.IntegerBufferFillJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.IntegerBufferFillJob.html",
    "title": "IntegerBufferFillJob | GDX",
    "keywords": "Struct IntegerBufferFillJob Fills a Unity.Collections.NativeArray<T> typed as System.Int32 with a value in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct IntegerBufferFillJob : IJobParallelFor Fields | Improve this Doc View Source Buffer The Unity.Collections.NativeArray<T> which is going to be filled. Declaration [WriteOnly] public NativeArray<int> Buffer Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Remarks Write-only. | Improve this Doc View Source FillValue The System.Int32 value to fill the native array with. Declaration [ReadOnly] public int FillValue Field Value Type Description System.Int32 Remarks Read-only. Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Jobs.ParallelFor.IntegerBufferSwapJob.html": {
    "href": "api/GDX.Jobs.ParallelFor.IntegerBufferSwapJob.html",
    "title": "IntegerBufferSwapJob | GDX",
    "keywords": "Struct IntegerBufferSwapJob Swaps a Unity.Collections.NativeArray<T> typed as System.Int32 with a another in parallel. Implements Unity.Jobs.IJobParallelFor Namespace : GDX.Jobs.ParallelFor Syntax [BurstCompile] public struct IntegerBufferSwapJob : IJobParallelFor Remarks The IntegerBufferSwapJob relies on the Unity.Jobs.IJobParallelFor which requires UnityEngine.CoreModule.dll. Fields | Improve this Doc View Source A The left-hand side Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration public NativeArray<int> A Field Value Type Description Unity.Collections.NativeArray < System.Int32 > | Improve this Doc View Source B The right-hand side Unity.Collections.NativeArray<T> typed as System.Int32 . Declaration public NativeArray<int> B Field Value Type Description Unity.Collections.NativeArray < System.Int32 > Methods | Improve this Doc View Source Execute(Int32) Executable work for the provided index. Declaration public void Execute(int index) Parameters Type Name Description System.Int32 index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor"
  },
  "api/GDX.Localization.html": {
    "href": "api/GDX.Localization.html",
    "title": "Localization | GDX",
    "keywords": "Class Localization A collection of localization related helper utilities. Inheritance System.Object Localization Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Localization Fields | Improve this Doc View Source ByteSizes An array of strings representative for file size formats. Declaration public static readonly string[] ByteSizes Field Value Type Description System.String [] | Improve this Doc View Source FilenameTimestampFormat A filename safe System.DateTime.ToString(System.String) . Declaration public const string FilenameTimestampFormat = \"yyyyMMdd_HHmmss\" Field Value Type Description System.String | Improve this Doc View Source LocalTimestampFormat The local ISO 8601 compliant System.DateTime.ToString(System.String) . Declaration public const string LocalTimestampFormat = \"yyyy-MM-dd HH\\\\:mm\\\\:ss\" Field Value Type Description System.String | Improve this Doc View Source UtcTimestampFormat The UTC ISO 8601 compliant System.DateTime.ToString(System.String) . Declaration public const string UtcTimestampFormat = \"yyyy-MM-ddTHH\\\\:mm\\\\:ss.fffffffzzz\" Field Value Type Description System.String Methods | Improve this Doc View Source GetHumanReadableFileSize(Int64) Creates a more human readable System.String of a byte size. Declaration public static string GetHumanReadableFileSize(long base2Size) Parameters Type Name Description System.Int64 base2Size The number of bytes (binary) to measure. Returns Type Description System.String A human readable version of the provided base2Size . Examples A byte size of 1024, will return a string of 1 KB. | Improve this Doc View Source GetIETF_BCP47(Localization.Language) Get the IETF BCP 47 language code for targetLanguage . Declaration public static string GetIETF_BCP47(this Localization.Language targetLanguage) Parameters Type Name Description Localization.Language targetLanguage The target Localization.Language . Returns Type Description System.String The language code. Remarks Two additional non-compliant values may be returned DEV or DEFAULT. | Improve this Doc View Source GetISO639_1(Localization.Language) Get the ISO 639-1 language code for targetLanguage . Declaration public static string GetISO639_1(this Localization.Language targetLanguage) Parameters Type Name Description Localization.Language targetLanguage The target Localization.Language . Returns Type Description System.String The language code. Remarks Two additional non-compliant values may be returned DEV or DEFAULT. | Improve this Doc View Source GetSystemLanguage() Get the Localization.Language equivalent of the UnityEngine.SystemLanguage . Declaration public static Localization.Language GetSystemLanguage() Returns Type Description Localization.Language The appropriate Localization.Language , or default. | Improve this Doc View Source GetTimestampFormat(Localization.Language) Get the localized System.DateTime . System.DateTime.ToString(System.String) for targetLanguage . Declaration public static string GetTimestampFormat(this Localization.Language targetLanguage) Parameters Type Name Description Localization.Language targetLanguage The target Localization.Language . Returns Type Description System.String The format System.String . | Improve this Doc View Source SetDefaultCulture() Sets the current threads culture to a defined setting in Config . Declaration public static void SetDefaultCulture() Remarks Can be used to avoid issues with culture settings without a Gregorian Calendar. Configurable to automatically execute after assemblies are loaded."
  },
  "api/GDX.Localization.Language.html": {
    "href": "api/GDX.Localization.Language.html",
    "title": "Localization.Language | GDX",
    "keywords": "Enum Localization.Language A list of supported languages. Namespace : GDX Syntax public enum Language : ushort Remarks This does not differentiate between things like French Canadian and French. Fields Name Description Default Development English French German Polish Russian Spanish Extension Methods EnumExtensions.HasFlags<Localization.Language>(Localization.Language) Localization.GetISO639_1() Localization.GetIETF_BCP47() Localization.GetTimestampFormat()"
  },
  "api/GDX.Mathematics.Byte2.html": {
    "href": "api/GDX.Mathematics.Byte2.html",
    "title": "Byte2 | GDX",
    "keywords": "Struct Byte2 A System.Byte vector. Implements System.IEquatable < Byte2 > System.IFormattable Namespace : GDX.Mathematics Syntax [Serializable] public struct Byte2 : IEquatable<Byte2>, IFormattable Constructors | Improve this Doc View Source Byte2(Byte2) Constructs a Byte2 from a Byte2 value. Declaration public Byte2(Byte2 xy) Parameters Type Name Description Byte2 xy The value to copy. | Improve this Doc View Source Byte2(Boolean) Constructs a Byte2 from a single System.Boolean value by converting it to System.Byte and assigning it to every component. Declaration public Byte2(bool v) Parameters Type Name Description System.Boolean v The System.Boolean value to transcribe. | Improve this Doc View Source Byte2(Byte) Constructs a Byte2 from a single System.Byte value by assigning it to every component. Declaration public Byte2(byte v) Parameters Type Name Description System.Byte v The value to copy to X and Y . | Improve this Doc View Source Byte2(Byte, Byte) Constructs a Byte2 from two System.Byte values. Declaration public Byte2(byte x, byte y) Parameters Type Name Description System.Byte x X value. System.Byte y Y value. | Improve this Doc View Source Byte2(Double) Constructs a Byte2 from a single System.Double value by converting it to System.Byte and assigning it to every component. Declaration public Byte2(double v) Parameters Type Name Description System.Double v The System.Double value to transcribe. | Improve this Doc View Source Byte2(Int32, Int32) Create a Byte2 from two System.Int32 values. Declaration public Byte2(int x, int y) Parameters Type Name Description System.Int32 x X value. System.Int32 y Y value. | Improve this Doc View Source Byte2(Single) Constructs a Byte2 from a single System.Single value by converting it to System.Byte and assigning it to every component. Declaration public Byte2(float v) Parameters Type Name Description System.Single v The System.Single value to transcribe. | Improve this Doc View Source Byte2(bool2) Constructs a Byte2 from a Unity.Mathematics.bool2 by conversion. Declaration public Byte2(bool2 v) Parameters Type Name Description Unity.Mathematics.bool2 v The value to transcribe. | Improve this Doc View Source Byte2(double2) Constructs a Byte2 from a Unity.Mathematics.double2 by conversion. Declaration public Byte2(double2 v) Parameters Type Name Description Unity.Mathematics.double2 v The value to transcribe. | Improve this Doc View Source Byte2(float2) Constructs a Byte2 from a Unity.Mathematics.float2 by conversion. Declaration public Byte2(float2 v) Parameters Type Name Description Unity.Mathematics.float2 v The value to transcribe. Fields | Improve this Doc View Source X X System.Byte . Declaration public byte X Field Value Type Description System.Byte | Improve this Doc View Source Y Y System.Byte . Declaration public byte Y Field Value Type Description System.Byte Properties | Improve this Doc View Source Item[Int32] Get the System.Byte at the provided index . Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Returns the byte element at a specified index. Property Value Type Description System.Byte Exceptions Type Condition System.IndexOutOfRangeException Out of range check. Methods | Improve this Doc View Source Equals(Byte2) Does the Byte2 equal another Byte2 . Declaration public bool Equals(Byte2 rhs) Parameters Type Name Description Byte2 rhs Target Byte2 to compare with. Returns Type Description System.Boolean Returns true if the Byte2 is equal to a given Byte2 , false otherwise. | Improve this Doc View Source Equals(Object) Does the Byte2 equal another System.Object (casted). Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Target System.Object to compare with. Returns Type Description System.Boolean Returns true if the Byte2 is equal to a given Byte2 , false otherwise. Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Get a hash code from the Byte2 . Declaration public override int GetHashCode() Returns Type Description System.Int32 A System.Int32 value. Overrides System.ValueType.GetHashCode() Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. | Improve this Doc View Source ToString() Returns a System.String representation of the Byte2 . Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() | Improve this Doc View Source ToString(String, IFormatProvider) Convert the Byte2 to a System.String using the provided format . Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format Specified format System.String . System.IFormatProvider formatProvider Culture-specific format information. Returns Type Description System.String Returns a string representation of the Byte2 using a specified format and culture-specific format information. Operators | Improve this Doc View Source Addition(Byte2, Byte2) Add two Byte2 . Declaration public static Byte2 operator +(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of an addition operation on two Byte2 . | Improve this Doc View Source Addition(Byte2, Byte) Add a System.Byte to both components of a Byte2 . Declaration public static Byte2 operator +(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of an addition operation on an Byte2 and an System.Byte value. | Improve this Doc View Source Addition(Byte, Byte2) Add a Byte2 to a System.Byte . Declaration public static Byte2 operator +(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of an addition operation on an System.Byte value and an Byte2 . | Improve this Doc View Source BitwiseAnd(Byte2, Byte2) Bitwise AND two Byte2 values. Declaration public static Byte2 operator &(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise AND operation on two Byte2 . | Improve this Doc View Source BitwiseAnd(Byte2, Byte) Bitwise AND a Byte2 and a System.Byte . Declaration public static Byte2 operator &(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a bitwise AND operation on a Byte2 and a System.Byte value. | Improve this Doc View Source BitwiseAnd(Byte, Byte2) Bitwise AND a System.Byte and a Byte2 . Declaration public static Byte2 operator &(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise AND operation on a System.Byte and a Byte2 value. | Improve this Doc View Source BitwiseOr(Byte2, Byte2) Bitwise OR two Byte2 values. Declaration public static Byte2 operator |(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise OR operation on two Byte2 . | Improve this Doc View Source BitwiseOr(Byte2, Byte) Bitwise OR a Byte2 and a System.Byte . Declaration public static Byte2 operator |(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a bitwise OR operation on a Byte2 and a System.Byte value. | Improve this Doc View Source BitwiseOr(Byte, Byte2) Bitwise OR a System.Byte and a Byte2 . Declaration public static Byte2 operator |(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise OR operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Decrement(Byte2) Decrement Byte2 values. Declaration public static Byte2 operator --(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of a decrement operation on a Byte2 . | Improve this Doc View Source Division(Byte2, Byte2) Divide a Byte2 by another Byte2 . Declaration public static Byte2 operator /(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a division operation on two Byte2 . | Improve this Doc View Source Division(Byte2, Byte) Divide a Byte2 by a System.Byte . Declaration public static Byte2 operator /(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a division operation on a Byte2 and System.Byte value. | Improve this Doc View Source Division(Byte, Byte2) Divide a System.Byte by a Byte2 . Declaration public static Byte2 operator /(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a division operation on a System.Byte value and Byte2 . | Improve this Doc View Source Equality(Byte2, Byte2) Determine if one Byte2 is equal to another Byte2 . Declaration public static bool2 operator ==(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of an EQUALITY operation on two Byte2 . | Improve this Doc View Source Equality(Byte2, Byte) Determine if both components of a Byte2 are equal to a System.Byte . Declaration public static bool2 operator ==(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of an EQUALITY operation on a Byte2 and a System.Byte . | Improve this Doc View Source Equality(Byte, Byte2) Determine if both components of a Byte2 are equal to a System.Byte . Declaration public static bool2 operator ==(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of an EQUALITY operation on a System.Byte and a Byte2 . | Improve this Doc View Source ExclusiveOr(Byte2, Byte2) Bitwise XOR two Byte2 values. Declaration public static Byte2 operator ^(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise EXCLUSIVE OR operation on two Byte2 . | Improve this Doc View Source ExclusiveOr(Byte2, Byte) Bitwise XOR a Byte2 and a System.Byte . Declaration public static Byte2 operator ^(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a bitwise XOR operation on a Byte2 and a System.Byte value. | Improve this Doc View Source ExclusiveOr(Byte, Byte2) Bitwise XOR a System.Byte and a Byte2 . Declaration public static Byte2 operator ^(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a bitwise XOR operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Explicit(Boolean to Byte2) Explicitly converts a single System.Boolean value to a Byte2 by converting it to System.Byte and assigning it to every component. Declaration public static explicit operator Byte2(bool v) Parameters Type Name Description System.Boolean v The System.Boolean value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Explicit(Double to Byte2) Explicitly converts a single System.Double value to a Byte2 by converting it to System.Byte and assigning it to every component. Declaration public static explicit operator Byte2(double v) Parameters Type Name Description System.Double v The System.Double value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Explicit(Single to Byte2) Explicitly converts a single System.Single value to a Byte2 by converting it to System.Byte and assigning it to every component. Declaration public static explicit operator Byte2(float v) Parameters Type Name Description System.Single v The System.Single value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Explicit(bool2 to Byte2) Explicitly converts a Unity.Mathematics.bool2 to a Byte2 by conversion. Declaration public static explicit operator Byte2(bool2 v) Parameters Type Name Description Unity.Mathematics.bool2 v The value to transcribe. Returns Type Description Byte2 A new Byte2 created from v . | Improve this Doc View Source Explicit(double2 to Byte2) Explicitly converts a Unity.Mathematics.double2 to a Byte2 by conversion. Declaration public static explicit operator Byte2(double2 v) Parameters Type Name Description Unity.Mathematics.double2 v The value to transcribe. Returns Type Description Byte2 A new Byte2 created from v . | Improve this Doc View Source Explicit(float2 to Byte2) Explicitly converts a Unity.Mathematics.bool2 to a Byte2 by conversion. Declaration public static explicit operator Byte2(float2 v) Parameters Type Name Description Unity.Mathematics.float2 v The value to transcribe. Returns Type Description Byte2 A new Byte2 created from v . | Improve this Doc View Source GreaterThan(Byte2, Byte2) Determine if one Byte2 is less than another Byte2 . Declaration public static bool2 operator>(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on two Byte2 . | Improve this Doc View Source GreaterThan(Byte2, Byte) Determine if Byte2 is greater than a System.Byte . Declaration public static bool2 operator>(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN operation on a Byte2 and a System.Byte value. | Improve this Doc View Source GreaterThan(Byte, Byte2) Determine if System.Byte is greater than a Byte2 . Declaration public static bool2 operator>(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN operation on a System.Byte and a Byte2 value. | Improve this Doc View Source GreaterThanOrEqual(Byte2, Byte2) Determine if Byte2 is greater than or equal a Byte2 . Declaration public static bool2 operator >=(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN OR EQUAL operation on a Byte2 and a Byte2 value. | Improve this Doc View Source GreaterThanOrEqual(Byte2, Byte) Determine if Byte2 is greater than or equal a System.Byte . Declaration public static bool2 operator >=(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN OR EQUAL operation on a Byte2 and a System.Byte value. | Improve this Doc View Source GreaterThanOrEqual(Byte, Byte2) Determine if System.Byte is greater than or equal a Byte2 . Declaration public static bool2 operator >=(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a GREATER THAN OR EQUAL operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Implicit(Byte to Byte2) Implicitly converts a single System.Byte value to a Byte2 by assigning it to every component. Declaration public static implicit operator Byte2(byte v) Parameters Type Name Description System.Byte v The System.Byte value to transcribe. Returns Type Description Byte2 A new Byte2 . | Improve this Doc View Source Increment(Byte2) Increment Byte2 values. Declaration public static Byte2 operator ++(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of an increment operation on a Byte2 . | Improve this Doc View Source Inequality(Byte2, Byte2) Determine if one Byte2 is not equal to another Byte2 . Declaration public static bool2 operator !=(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a NOT EQUAL operation on two Byte2 . | Improve this Doc View Source Inequality(Byte2, Byte) Determine if both components of a Byte2 are not equal to a System.Byte . Declaration public static bool2 operator !=(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a NOT EQUAL operation on a Byte2 and a System.Byte . | Improve this Doc View Source Inequality(Byte, Byte2) Determine if both components of a Byte2 are not equal to a System.Byte . Declaration public static bool2 operator !=(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a NOT EQUAL operation on a System.Byte and a Byte2 . | Improve this Doc View Source LessThan(Byte2, Byte2) Determine if one Byte2 is less than another Byte2 . Declaration public static bool2 operator <(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on two Byte2 . | Improve this Doc View Source LessThan(Byte2, Byte) Determine if Byte2 is less than a System.Byte . Declaration public static bool2 operator <(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on a Byte2 and a System.Byte value. | Improve this Doc View Source LessThan(Byte, Byte2) Determine if System.Byte is less than a Byte2 . Declaration public static bool2 operator <(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN operation on a System.Byte and a Byte2 value. | Improve this Doc View Source LessThanOrEqual(Byte2, Byte2) Determine if one Byte2 is less than or equal to another Byte2 . Declaration public static bool2 operator <=(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN OR EQUAL operation on two Byte2 . | Improve this Doc View Source LessThanOrEqual(Byte2, Byte) Determine if Byte2 is less than or equal a System.Byte . Declaration public static bool2 operator <=(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN OR EQUAL operation on a Byte2 and a System.Byte value. | Improve this Doc View Source LessThanOrEqual(Byte, Byte2) Determine if System.Byte is less than or equal a Byte2 . Declaration public static bool2 operator <=(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Unity.Mathematics.bool2 Returns the result of a LESS THAN OR EQUAL operation on a System.Byte and a Byte2 value. | Improve this Doc View Source Modulus(Byte2, Byte2) Modulus a Byte2 by another Byte2 . Declaration public static Byte2 operator %(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a modulus operation on two Byte2 . | Improve this Doc View Source Modulus(Byte2, Byte) Modulus a Byte2 by a System.Byte . Declaration public static Byte2 operator %(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a modulus operation on a Byte2 and System.Byte value. | Improve this Doc View Source Modulus(Byte, Byte2) Modulus a System.Byte by a Byte2 . Declaration public static Byte2 operator %(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a modulus operation on a System.Byte value and Byte2 . | Improve this Doc View Source Multiply(Byte2, Byte2) Multiply two Byte2 . Declaration public static Byte2 operator *(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a multiplication operation on two Byte2 . | Improve this Doc View Source Multiply(Byte2, Byte) Multiply a Byte2 by a System.Byte . Declaration public static Byte2 operator *(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a multiplication operation on a Byte2 and a System.Byte value. | Improve this Doc View Source Multiply(Byte, Byte2) Multiply a System.Byte by a Byte2 . Declaration public static Byte2 operator *(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a multiplication operation on a System.Byte and a Byte2 value. | Improve this Doc View Source OnesComplement(Byte2) Bitwise NOT Byte2 values. Declaration public static Byte2 operator ~(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of a bitwise NOT operation on a Byte2 . | Improve this Doc View Source Subtraction(Byte2, Byte2) Subtract a Byte2 from another Byte2 . Declaration public static Byte2 operator -(Byte2 lhs, Byte2 rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a subtraction operation on two Byte2 . | Improve this Doc View Source Subtraction(Byte2, Byte) Subtract a System.Byte from both components of a Byte2 . Declaration public static Byte2 operator -(Byte2 lhs, byte rhs) Parameters Type Name Description Byte2 lhs Left-hand side Byte2 . System.Byte rhs Right-hand side System.Byte . Returns Type Description Byte2 Returns the result of a subtraction operation on a Byte2 and a System.Byte value. | Improve this Doc View Source Subtraction(Byte, Byte2) Subtract both components of a Byte2 from a System.Byte . Declaration public static Byte2 operator -(byte lhs, Byte2 rhs) Parameters Type Name Description System.Byte lhs Left-hand side System.Byte . Byte2 rhs Right-hand side Byte2 . Returns Type Description Byte2 Returns the result of a subtraction operation on an System.Byte value and an Byte2 . | Improve this Doc View Source UnaryNegation(Byte2) Unary minus Byte2 values. Declaration public static Byte2 operator -(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of an unary minus operation on a Byte2 . | Improve this Doc View Source UnaryPlus(Byte2) Unary plus Byte2 values. Declaration public static Byte2 operator +(Byte2 val) Parameters Type Name Description Byte2 val Target Byte2 . Returns Type Description Byte2 Returns the result of an unary plus operation on a Byte2 . Implements System.IEquatable<T> System.IFormattable"
  },
  "api/GDX.Mathematics.FibonacciHash.html": {
    "href": "api/GDX.Mathematics.FibonacciHash.html",
    "title": "FibonacciHash | GDX",
    "keywords": "Class FibonacciHash Inheritance System.Object FibonacciHash Namespace : GDX.Mathematics Syntax public static class FibonacciHash Methods | Improve this Doc View Source GetIndexFromHash(Int32, Byte) Takes the hash and multiplies it by 2^32 divided by the golden ratio, then right shifts it by shift to fit within a given power-of-two size. Declaration public static int GetIndexFromHash(int hash, byte shift) Parameters Type Name Description System.Int32 hash The key to find an index for. System.Byte shift How far to right shift in order to fit within a given power-of-two size. Returns Type Description System.Int32 The index to store the hash . | Improve this Doc View Source GetIndexFromHash(Int32, Int32) Takes the hash and finds an index within the provided pow2Length range with Fibonacci hashing. Declaration public static int GetIndexFromHash(int hash, int pow2Length) Parameters Type Name Description System.Int32 hash The hash to find an index for. System.Int32 pow2Length The power-of-two array length to find an index within. Returns Type Description System.Int32 | Improve this Doc View Source GetRightShiftFromPow2Length(Int32) Takes a 32-bit length equal to a power of two, and returns how many spaces another 32-bit int would need to shift in order to be a valid index within an array of that length. Declaration public static byte GetRightShiftFromPow2Length(int pow2Length) Parameters Type Name Description System.Int32 pow2Length A 32-bit int equal to a power of two. Returns Type Description System.Byte How many spaces a 32-bit int would need to shift in order to be a valid index within pow2Length ."
  },
  "api/GDX.Mathematics.html": {
    "href": "api/GDX.Mathematics.html",
    "title": "Namespace GDX.Mathematics | GDX",
    "keywords": "Namespace GDX.Mathematics Classes FibonacciHash Range Some simple logic to pick a value from a range. Rotate A set of functionality to extend on Unity's rotation based methods. Smooth Some helpful interpolation functionality. Structs Byte2 A System.Byte vector. LongDoubleConversionUnion"
  },
  "api/GDX.Mathematics.LongDoubleConversionUnion.html": {
    "href": "api/GDX.Mathematics.LongDoubleConversionUnion.html",
    "title": "LongDoubleConversionUnion | GDX",
    "keywords": "Struct LongDoubleConversionUnion Namespace : GDX.Mathematics Syntax public struct LongDoubleConversionUnion Fields | Improve this Doc View Source DoubleValue Declaration public double DoubleValue Field Value Type Description System.Double | Improve this Doc View Source LongValue Declaration public long LongValue Field Value Type Description System.Int64"
  },
  "api/GDX.Mathematics.Random.html": {
    "href": "api/GDX.Mathematics.Random.html",
    "title": "Namespace GDX.Mathematics.Random | GDX",
    "keywords": "Namespace GDX.Mathematics.Random Classes RandomAdaptor Adapter to utilize a IRandomProvider with System.Random based systems, wrapping the provider in a class object with expected overrides. RandomWrapper Structs WELL1024a Generates pseudorandom values based on the WELL1024a algorithm. You must Dispose() manually. WELL1024a.WellState A complete state of WELL1024a . Interfaces IRandomProvider"
  },
  "api/GDX.Mathematics.Random.IRandomProvider.html": {
    "href": "api/GDX.Mathematics.Random.IRandomProvider.html",
    "title": "IRandomProvider | GDX",
    "keywords": "Interface IRandomProvider Namespace : GDX.Mathematics.Random Syntax [VisualScriptingCompatible((short)4)] public interface IRandomProvider Methods | Improve this Doc View Source NextBoolean(Single) Returns a pseudorandom System.Boolean value based on chance, favoring false, with a default 50% chance . Declaration bool NextBoolean(float chance = 0.5F) Parameters Type Name Description System.Single chance The 0-1 System.Single percent chance of success. Returns Type Description System.Boolean A pseudorandom System.Boolean . | Improve this Doc View Source NextBytes(Byte[]) Fills a buffer with pseudorandom System.Byte . Declaration void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer to fill. Remarks The buffer shouldn't be null . | Improve this Doc View Source NextDouble(Double, Double) Returns the next pseudorandom System.Double between minValue and less then maxValue . Declaration double NextDouble(double minValue = 0, double maxValue = 1) Parameters Type Name Description System.Double minValue The lowest possible value (inclusive). System.Double maxValue The highest possible value (exclusive). Returns Type Description System.Double A pseudorandom System.Double . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextInteger(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue . Declaration int NextInteger(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, including itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.Int32.MaxValue to maxValue . | Improve this Doc View Source NextIntegerExclusive(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue , excluding maxValue itself. Declaration int NextIntegerExclusive(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, excluding itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextSingle(Single, Single) Returns the next pseudorandom System.Single between minValue and less then maxValue . Declaration float NextSingle(float minValue = 0F, float maxValue = 1F) Parameters Type Name Description System.Single minValue The lowest possible value (inclusive). System.Single maxValue The highest possible value (exclusive). Returns Type Description System.Single A pseudorandom System.Single . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextUnsignedInteger(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue . Declaration uint NextUnsignedInteger(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, including itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.UInt32.MaxValue to maxValue . | Improve this Doc View Source NextUnsignedIntegerExclusive(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue , excluding maxValue itself. Declaration uint NextUnsignedIntegerExclusive(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, excluding itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source Sample() Returns the next pseudorandom System.Double value, between 0.0 and 1.0. Declaration double Sample() Returns Type Description System.Double A pseudorandom System.Double floating point value."
  },
  "api/GDX.Mathematics.Random.RandomAdaptor.html": {
    "href": "api/GDX.Mathematics.Random.RandomAdaptor.html",
    "title": "RandomAdaptor | GDX",
    "keywords": "Class RandomAdaptor Adapter to utilize a IRandomProvider with System.Random based systems, wrapping the provider in a class object with expected overrides. Inheritance System.Object System.Random RandomAdaptor Inherited Members System.Random.NextBytes(System.Span<System.Byte>) Namespace : GDX.Mathematics.Random Syntax [VisualScriptingCompatible((short)4)] public class RandomAdaptor : Random Remarks This will create IL callvert operation codes! Try not to use this. Constructors | Improve this Doc View Source RandomAdaptor(IRandomProvider) Create an adaptor object which behaves like System.Random . Declaration public RandomAdaptor(IRandomProvider provider) Parameters Type Name Description IRandomProvider provider A qualified IRandomProvider . Remarks Will cause boxing of langword_csharp_struct based types like WELL1024a . This adaptor really should only be used where a method is expecting a System.Random . Methods | Improve this Doc View Source HasProvider() Is the provider present, and not null? Declaration public bool HasProvider() Returns Type Description System.Boolean true/false a provider is not null. | Improve this Doc View Source Next() Declaration public override int Next() Returns Type Description System.Int32 Overrides System.Random.Next() | Improve this Doc View Source Next(Int32) Declaration public override int Next(int maxValue) Parameters Type Name Description System.Int32 maxValue Returns Type Description System.Int32 Overrides System.Random.Next(System.Int32) | Improve this Doc View Source Next(Int32, Int32) Declaration public override int Next(int minValue, int maxValue) Parameters Type Name Description System.Int32 minValue System.Int32 maxValue Returns Type Description System.Int32 Overrides System.Random.Next(System.Int32, System.Int32) | Improve this Doc View Source NextBytes(Byte[]) Declaration public override void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer Overrides System.Random.NextBytes(System.Byte[]) | Improve this Doc View Source NextDouble() Declaration public override double NextDouble() Returns Type Description System.Double Overrides System.Random.NextDouble() | Improve this Doc View Source Sample() Declaration protected override double Sample() Returns Type Description System.Double Overrides System.Random.Sample()"
  },
  "api/GDX.Mathematics.Random.RandomWrapper.html": {
    "href": "api/GDX.Mathematics.Random.RandomWrapper.html",
    "title": "RandomWrapper | GDX",
    "keywords": "Class RandomWrapper Inheritance System.Object RandomWrapper Implements IRandomProvider Namespace : GDX.Mathematics.Random Syntax public class RandomWrapper : IRandomProvider Constructors | Improve this Doc View Source RandomWrapper() Declaration public RandomWrapper() | Improve this Doc View Source RandomWrapper(Int32) Declaration public RandomWrapper(int seed) Parameters Type Name Description System.Int32 seed Methods | Improve this Doc View Source NextBoolean(Single) Returns a pseudorandom System.Boolean value based on chance, favoring false, with a default 50% chance . Declaration public bool NextBoolean(float chance = 0.5F) Parameters Type Name Description System.Single chance The 0-1 System.Single percent chance of success. Returns Type Description System.Boolean A pseudorandom System.Boolean . | Improve this Doc View Source NextBytes(Byte[]) Fills a buffer with pseudorandom System.Byte . Declaration public void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer to fill. Remarks The buffer shouldn't be null . | Improve this Doc View Source NextDouble(Double, Double) Returns the next pseudorandom System.Double between minValue and less then maxValue . Declaration public double NextDouble(double minValue = 0, double maxValue = 1) Parameters Type Name Description System.Double minValue The lowest possible value (inclusive). System.Double maxValue The highest possible value (exclusive). Returns Type Description System.Double A pseudorandom System.Double . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextInteger(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue . Declaration public int NextInteger(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, including itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.Int32.MaxValue to maxValue . | Improve this Doc View Source NextIntegerExclusive(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue , excluding maxValue itself. Declaration public int NextIntegerExclusive(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, excluding itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextSingle(Single, Single) Returns the next pseudorandom System.Single between minValue and less then maxValue . Declaration public float NextSingle(float minValue = 0F, float maxValue = 1F) Parameters Type Name Description System.Single minValue The lowest possible value (inclusive). System.Single maxValue The highest possible value (exclusive). Returns Type Description System.Single A pseudorandom System.Single . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextUnsignedInteger(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue . Declaration public uint NextUnsignedInteger(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, including itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.UInt32.MaxValue to maxValue . | Improve this Doc View Source NextUnsignedIntegerExclusive(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue , excluding maxValue itself. Declaration public uint NextUnsignedIntegerExclusive(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, excluding itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source Sample() Returns the next pseudorandom System.Double value, between 0.0 and 1.0. Declaration public double Sample() Returns Type Description System.Double A pseudorandom System.Double floating point value. Implements IRandomProvider"
  },
  "api/GDX.Mathematics.Random.WELL1024a.html": {
    "href": "api/GDX.Mathematics.Random.WELL1024a.html",
    "title": "WELL1024a | GDX",
    "keywords": "Struct WELL1024a Generates pseudorandom values based on the WELL1024a algorithm. You must Dispose() manually. Implements IRandomProvider System.IEquatable < WELL1024a > System.IDisposable Namespace : GDX.Mathematics.Random Syntax [VisualScriptingCompatible((short)4)] public struct WELL1024a : IRandomProvider, IEquatable<WELL1024a>, IDisposable Remarks Primarily based on the work of Chris Lomont , accessed on 2021-04-23. Additional understanding from Francois Panneton and Pierre L`Ecuyer , accessed on 2021-04-23. Constructors | Improve this Doc View Source WELL1024a(WELL1024a.WellState) Create a pseudorandom number generator from a restoreState . Declaration public WELL1024a(WELL1024a.WellState restoreState) Parameters Type Name Description WELL1024a.WellState restoreState A saved WELL1024a state. | Improve this Doc View Source WELL1024a(Int32) Creates a new pseudorandom number generator with the given seed . Declaration public WELL1024a(int seed) Parameters Type Name Description System.Int32 seed A System.Int32 value to use as a seed. Remarks The seed will have its sign stripped and stored as such in OriginalSeed . | Improve this Doc View Source WELL1024a(String, Boolean) Creates a new pseudorandom number generator with the given seed . Declaration public WELL1024a(string seed, bool forceUpperCase = true) Parameters Type Name Description System.String seed A System.String to create a System.UInt32 seed from. System.Boolean forceUpperCase Should the generated hashcode used as the seed be generated from an uppercase version of the seed . Remarks The created hashcode will have its sign stripped and stored as such in OriginalSeed . | Improve this Doc View Source WELL1024a(UInt32) Creates a new pseudorandom number generator with the given seed . Declaration public WELL1024a(uint seed) Parameters Type Name Description System.UInt32 seed A System.UInt32 value to use as a seed. Fields | Improve this Doc View Source Index The current index of use for the well array. Declaration public byte Index Field Value Type Description System.Byte Remarks CAUTION! Changing this will alter the understanding of the data. | Improve this Doc View Source OriginalSeed A copy of the original seed used to initialize the WELL1024a . Declaration public readonly uint OriginalSeed Field Value Type Description System.UInt32 | Improve this Doc View Source SampleCount The number of times that this well has been sampled. Declaration public uint SampleCount Field Value Type Description System.UInt32 | Improve this Doc View Source State The state array of the well. Declaration public NativeArray<uint> State Field Value Type Description Unity.Collections.NativeArray < System.UInt32 > Methods | Improve this Doc View Source Dispose() Disposes of the native allocations. Declaration public void Dispose() | Improve this Doc View Source Equals(WELL1024a) Is one WELL1024a the same as the other . Declaration public bool Equals(WELL1024a other) Parameters Type Name Description WELL1024a other The WELL1024a to compare with. Returns Type Description System.Boolean true/false if they are fundamentally the same. Remarks Avoid using this format for comparison as it copies the data, where as Equals(ref WELL1024a) does not. | Improve this Doc View Source Equals(ref WELL1024a) Is one WELL1024a the same as the other . Declaration public bool Equals(ref WELL1024a other) Parameters Type Name Description WELL1024a other The WELL1024a to compare with. Returns Type Description System.Boolean true/false if they are fundamentally the same. | Improve this Doc View Source Equals(Object) Determines if the provided obj 's hash code is equal to this WELL1024a 's GetHashCode() . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare hash codes with. Returns Type Description System.Boolean true/false if the hash codes match. Overrides System.ValueType.Equals(System.Object) Remarks This doesnt preclude other objects of different types from having the same hashcode. | Improve this Doc View Source GetHashCode() Generate a hash code value for the given WELL1024a at its current state. Declaration public override int GetHashCode() Returns Type Description System.Int32 The hash code value. Overrides System.ValueType.GetHashCode() | Improve this Doc View Source GetState() Get a WELL1024a.WellState for the WELL1024a . Declaration public WELL1024a.WellState GetState() Returns Type Description WELL1024a.WellState Remarks Useful to save and restore the state of the WELL1024a . | Improve this Doc View Source NextBoolean(Single) Returns a pseudorandom System.Boolean value based on chance, favoring false, with a default 50% chance . Declaration public bool NextBoolean(float chance = 0.5F) Parameters Type Name Description System.Single chance The 0-1 System.Single percent chance of success. Returns Type Description System.Boolean A pseudorandom System.Boolean . | Improve this Doc View Source NextBytes(Byte[]) Fills a buffer with pseudorandom System.Byte . Declaration public void NextBytes(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer to fill. Remarks The buffer shouldn't be null . | Improve this Doc View Source NextDouble(Double, Double) Returns the next pseudorandom System.Double between minValue and less then maxValue . Declaration public double NextDouble(double minValue = 0, double maxValue = 1) Parameters Type Name Description System.Double minValue The lowest possible value (inclusive). System.Double maxValue The highest possible value (exclusive). Returns Type Description System.Double A pseudorandom System.Double . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextInteger(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue . Declaration public int NextInteger(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, including itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.Int32.MaxValue to maxValue . | Improve this Doc View Source NextIntegerExclusive(Int32, Int32) Returns the next pseudorandom System.Int32 between minValue and maxValue , excluding maxValue itself. Declaration public int NextIntegerExclusive(int minValue = 0, int maxValue = 2147483647) Parameters Type Name Description System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value, excluding itself. Returns Type Description System.Int32 A pseudorandom System.Int32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextSingle(Single, Single) Returns the next pseudorandom System.Single between minValue and less then maxValue . Declaration public float NextSingle(float minValue = 0F, float maxValue = 1F) Parameters Type Name Description System.Single minValue The lowest possible value (inclusive). System.Single maxValue The highest possible value (exclusive). Returns Type Description System.Single A pseudorandom System.Single . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source NextUnsignedInteger(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue . Declaration public uint NextUnsignedInteger(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, including itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . Never pass System.UInt32.MaxValue to maxValue . | Improve this Doc View Source NextUnsignedIntegerExclusive(UInt32, UInt32) Returns the next pseudorandom System.UInt32 between minValue and maxValue , excluding maxValue itself. Declaration public uint NextUnsignedIntegerExclusive(uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value, excluding itself. Returns Type Description System.UInt32 A pseudorandom System.UInt32 . Remarks Distribution of values falls within a linear scale. minValue should not be greater then maxValue . | Improve this Doc View Source Sample() Returns the next pseudorandom System.Double value, between 0.0 and 1.0. Declaration public double Sample() Returns Type Description System.Double A pseudorandom System.Double floating point value. Implements IRandomProvider System.IEquatable<T> System.IDisposable"
  },
  "api/GDX.Mathematics.Random.WELL1024a.WellState.html": {
    "href": "api/GDX.Mathematics.Random.WELL1024a.WellState.html",
    "title": "WELL1024a.WellState | GDX",
    "keywords": "Struct WELL1024a.WellState A complete state of WELL1024a . Namespace : GDX.Mathematics.Random Syntax [Serializable] public struct WellState Fields | Improve this Doc View Source Count The internal sample count. Declaration public uint Count Field Value Type Description System.UInt32 | Improve this Doc View Source Index The internal state index. Declaration public byte Index Field Value Type Description System.Byte | Improve this Doc View Source Seed The seed used to originally create the WELL1024a . Declaration public uint Seed Field Value Type Description System.UInt32 | Improve this Doc View Source State The internal state array. Declaration public NativeArray<uint> State Field Value Type Description Unity.Collections.NativeArray < System.UInt32 >"
  },
  "api/GDX.Mathematics.Range.html": {
    "href": "api/GDX.Mathematics.Range.html",
    "title": "Range | GDX",
    "keywords": "Class Range Some simple logic to pick a value from a range. Inheritance System.Object Range Namespace : GDX.Mathematics Syntax public static class Range Methods | Improve this Doc View Source GetDouble(Double, Double, Double) Returns the System.Double between minValue and maxValue range at percent . Declaration public static double GetDouble(double percent, double minValue = -1.7976931348623157E+308, double maxValue = 1.7976931348623157E+308) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.Double minValue The lowest possible value. System.Double maxValue The highest possible value. Returns Type Description System.Double A System.Double value. | Improve this Doc View Source GetInteger(Double, Int32, Int32) Returns the System.Int32 between minValue and maxValue range at percent . Declaration public static int GetInteger(double percent, int minValue = -2147483648, int maxValue = 2147483647) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.Int32 minValue The lowest possible value. System.Int32 maxValue The highest possible value. Returns Type Description System.Int32 The System.Int32 value. | Improve this Doc View Source GetSingle(Double, Single, Single) Returns the System.Single between minValue and maxValue range at percent . Declaration public static float GetSingle(double percent, float minValue = -3.40282347E+38F, float maxValue = 3.40282347E+38F) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.Single minValue The lowest possible value. System.Single maxValue The highest possible value. Returns Type Description System.Single A System.Single value. | Improve this Doc View Source GetUnsignedInteger(Double, UInt32, UInt32) Returns the System.UInt32 between minValue and maxValue range at percent . Declaration public static uint GetUnsignedInteger(double percent, uint minValue = 0U, uint maxValue = 4294967295U) Parameters Type Name Description System.Double percent The percentage (0-1) used to find a value in the range provided. System.UInt32 minValue The lowest possible value. System.UInt32 maxValue The highest possible value. Returns Type Description System.UInt32 A System.UInt32 value."
  },
  "api/GDX.Mathematics.Rotate.html": {
    "href": "api/GDX.Mathematics.Rotate.html",
    "title": "Rotate | GDX",
    "keywords": "Class Rotate A set of functionality to extend on Unity's rotation based methods. Inheritance System.Object Rotate Namespace : GDX.Mathematics Syntax [VisualScriptingCompatible((short)8)] public static class Rotate Methods | Improve this Doc View Source Towards(Quaternion, Quaternion, Single, Single) Create a quaternion based on a rotation from targetQuaternion to otherQuaternion . Declaration public static Quaternion Towards(Quaternion targetQuaternion, Quaternion otherQuaternion, float rotationRate, float elapsedTime) Parameters Type Name Description UnityEngine.Quaternion targetQuaternion The source UnityEngine.Quaternion . UnityEngine.Quaternion otherQuaternion The destination UnityEngine.Quaternion . System.Single rotationRate How fast should the rotation occur. System.Single elapsedTime How long has elapsed since the rotation started. Returns Type Description UnityEngine.Quaternion A rotational value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Mathematics.Smooth.html": {
    "href": "api/GDX.Mathematics.Smooth.html",
    "title": "Smooth | GDX",
    "keywords": "Class Smooth Some helpful interpolation functionality. Inheritance System.Object Smooth Namespace : GDX.Mathematics Syntax [VisualScriptingCompatible((short)8)] public static class Smooth Methods | Improve this Doc View Source Exponential(Single, Single, Single, Single) Smooths between previousValue and targetValue based on time since the last sample and a given half-life. Declaration public static float Exponential(float previousValue, float targetValue, float halfLife, float elapsedTime = NaNF) Parameters Type Name Description System.Single previousValue Ideally, the previous output value. System.Single targetValue The target value. System.Single halfLife Half of the time it would take to go from previousValue to targetValue if time were constant. System.Single elapsedTime The amount of time that has transpired since the previousValue was generated. Returns Type Description System.Single A smoothed value. Remarks Assumes wibbly wobbly, timey wimey. | Improve this Doc View Source HalfLifeToSmoothingFactor(Single, Single) Takes a halfLife value, and outputs a factor based on elapsedTime . Declaration public static float HalfLifeToSmoothingFactor(float halfLife, float elapsedTime) Parameters Type Name Description System.Single halfLife The desired half-life. System.Single elapsedTime The time since the last sample. Returns Type Description System.Single The coefficient value applied to the weight(t) of a lerp. Remarks Not providing a value for elapsedTime will result in using Time.deltaTime ."
  },
  "api/GDX.Memory.html": {
    "href": "api/GDX.Memory.html",
    "title": "Memory | GDX",
    "keywords": "Class Memory A collection of memory related helper utilities. Inheritance System.Object Memory Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Memory Methods | Improve this Doc View Source CleanUp() Cleanup Memory Mono Heap (Garbage Collection) Unity Resources (when not deployed on DOTS Runtime. Declaration public static void CleanUp() | Improve this Doc View Source CleanUpAsync() Cleanup Memory Mono Heap (Garbage Collection) Unity Resources (when not deployed on DOTS Runtime. Declaration public static async void CleanUpAsync() Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.MeshExtensions.html": {
    "href": "api/GDX.MeshExtensions.html",
    "title": "MeshExtensions | GDX",
    "keywords": "Class MeshExtensions UnityEngine.Mesh Based Extension Methods Inheritance System.Object MeshExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class MeshExtensions Methods | Improve this Doc View Source CalculateVolume(Mesh) Determine the volume of a given mesh. Declaration public static float CalculateVolume(this Mesh targetMesh) Parameters Type Name Description UnityEngine.Mesh targetMesh The mesh to evaluate for its volume. Returns Type Description System.Single The meshes volume. Remarks Based off of https://n-e-r-v-o-u-s.com/blog/?p=4415 . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.MonoBehaviourExtensions.html": {
    "href": "api/GDX.MonoBehaviourExtensions.html",
    "title": "MonoBehaviourExtensions | GDX",
    "keywords": "Class MonoBehaviourExtensions UnityEngine.MonoBehaviour Based Extension Methods Inheritance System.Object MonoBehaviourExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class MonoBehaviourExtensions Methods | Improve this Doc View Source GetFirstComponentInChildrenComplex<T>(MonoBehaviour, Boolean, Boolean, Int32) A slightly more complex version of UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) which allows for different hinted search options. Declaration public static T GetFirstComponentInChildrenComplex<T>(this MonoBehaviour targetMonoBehaviour, bool includeInactive = false, bool lookInChildrenFirst = false, int maxLevelsOfRecursion = -1) where T : Component Parameters Type Name Description UnityEngine.MonoBehaviour targetMonoBehaviour The target UnityEngine.MonoBehaviour to use as the base for the search. System.Boolean includeInactive Include inactive child UnityEngine.GameObject s when looking for the UnityEngine.Component . System.Boolean lookInChildrenFirst Should children UnityEngine.GameObject be searched before the targetMonoBehaviour 's UnityEngine.GameObject . System.Int32 maxLevelsOfRecursion The maximum levels of recursion when looking for a UnityEngine.Component , -1 for infinite recursion. Returns Type Description T The first found UnityEngine.Component . Type Parameters Name Description T The target UnityEngine.Component type that is being looked for. Remarks If the maxLevelsOfRecursion is set to 1; this will search the targetMonoBehaviour and its immediate children only. The internal UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) has optimizations internally in engine code which make it faster in different scenarios. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.NavMeshPathExtensions.html": {
    "href": "api/GDX.NavMeshPathExtensions.html",
    "title": "NavMeshPathExtensions | GDX",
    "keywords": "Class NavMeshPathExtensions UnityEngine.AI.NavMeshPath Based Extension Methods Inheritance System.Object NavMeshPathExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class NavMeshPathExtensions Methods | Improve this Doc View Source GetPositionAtDistance(NavMeshPath, Single) Get a position along a UnityEngine.AI.NavMeshPath based on the travel distance along it. Declaration public static Vector3 GetPositionAtDistance(this NavMeshPath targetNavMeshPath, float distance) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for the position. System.Single distance The distance along the calculated path to find the position at. Returns Type Description UnityEngine.Vector3 The position found on the UnityEngine.AI.NavMeshPath . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetPositionAtDistanceSqr(NavMeshPath, Single) Get a position along a UnityEngine.AI.NavMeshPath based on the travel square distance along it. Declaration public static Vector3 GetPositionAtDistanceSqr(this NavMeshPath targetNavMeshPath, float distance) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for the position. System.Single distance The distance along the calculated path to find the position at. Returns Type Description UnityEngine.Vector3 The position found on the UnityEngine.AI.NavMeshPath . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetTotalDistance(NavMeshPath) Get the total travel distance, from start to finish of a calculated UnityEngine.AI.NavMeshPath . Declaration public static float GetTotalDistance(this NavMeshPath targetNavMeshPath) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for its length. Returns Type Description System.Single The total distance of a calculated path. Remarks The UnityEngine.AI.NavMeshPath.corners does allocate internally. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetTotalDistanceSqr(NavMeshPath) Get the total squared distance, from start to finish of a calculated UnityEngine.AI.NavMeshPath . Declaration public static float GetTotalDistanceSqr(this NavMeshPath targetNavMeshPath) Parameters Type Name Description UnityEngine.AI.NavMeshPath targetNavMeshPath The calculated path to evaluate for its squared length. Returns Type Description System.Single The total squared distance of a calculated path. Remarks The UnityEngine.AI.NavMeshPath.corners does allocate internally. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.ObjectExtensions.html": {
    "href": "api/GDX.ObjectExtensions.html",
    "title": "ObjectExtensions | GDX",
    "keywords": "Class ObjectExtensions UnityEngine.Object Based Extension Methods Inheritance System.Object ObjectExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class ObjectExtensions Methods | Improve this Doc View Source SafeDestroy(Object, Single) Destroy a UnityEngine.Object appropriately based on the current state of the Editor/Player. Declaration public static void SafeDestroy(this Object targetObject, float delay = 0F) Parameters Type Name Description UnityEngine.Object targetObject The target UnityEngine.Object to be destroyed. System.Single delay How long should be waited before the targetObject is destroyed?"
  },
  "api/GDX.Platform.html": {
    "href": "api/GDX.Platform.html",
    "title": "Platform | GDX",
    "keywords": "Class Platform A collection of platform related helper utilities. Inheritance System.Object Platform Namespace : GDX Syntax [VisualScriptingCompatible((short)8)] public static class Platform Fields | Improve this Doc View Source CharacterPoolLength Declaration public const int CharacterPoolLength = 25 Field Value Type Description System.Int32 | Improve this Doc View Source CharacterPoolLengthExclusive Declaration public const int CharacterPoolLengthExclusive = 24 Field Value Type Description System.Int32 | Improve this Doc View Source DoubleTolerance Declaration public const double DoubleTolerance = 1E-06 Field Value Type Description System.Double | Improve this Doc View Source FilenameTimestampFormat A filename safe version of the timestamp format. Declaration public const string FilenameTimestampFormat = \"yyyyMMdd_HHmmss\" Field Value Type Description System.String | Improve this Doc View Source FloatTolerance Declaration public const float FloatTolerance = 1E-06F Field Value Type Description System.Single | Improve this Doc View Source ImageCompareTolerance Declaration public const float ImageCompareTolerance = 0.99F Field Value Type Description System.Single | Improve this Doc View Source SafeCharacterPool Declaration public const string SafeCharacterPool = \"abcdefghijklmnopqrstuvwxyz\" Field Value Type Description System.String | Improve this Doc View Source TimestampFormat Declaration public const string TimestampFormat = \"yyyy-MM-dd HH:mm:ss\" Field Value Type Description System.String Methods | Improve this Doc View Source EnsureFileFolderHierarchyExists(String) Validate that all parent directories are created for a given filePath . Declaration public static void EnsureFileFolderHierarchyExists(string filePath) Parameters Type Name Description System.String filePath The path to process and validate. | Improve this Doc View Source EnsureFileWritable(String) Validate that the file path is writable, making the necessary folder structure and setting permissions. Declaration public static void EnsureFileWritable(string filePath) Parameters Type Name Description System.String filePath The absolute path to validate. | Improve this Doc View Source EnsureFolderHierarchyExists(String) Validate that all directories are created for a given folderPath . Declaration public static void EnsureFolderHierarchyExists(string folderPath) Parameters Type Name Description System.String folderPath The path to process and validate. | Improve this Doc View Source ForceDeleteFile(String) Use our best attempt to remove a file at the designated filePath . Declaration public static void ForceDeleteFile(string filePath) Parameters Type Name Description System.String filePath The file path to remove forcefully. | Improve this Doc View Source GetHardwareGeneration() Gets the current platforms hardware generation number? Declaration public static int GetHardwareGeneration() Returns Type Description System.Int32 Returns 0 for base hardware, 1 for updates. | Improve this Doc View Source GetOutputFolder(String) Returns a runtime writable folder. Declaration public static string GetOutputFolder(string folderName = null) Parameters Type Name Description System.String folderName An optional additional folder under the provided path that will be created if necessary. Returns Type Description System.String The full path to a writable folder at runtime. Remarks Depending on the platform, different routes are taken to finding a writable folder. Editor The project's root folder is used in this case. Standard Player Utilizes UnityEngine.Application.persistentDataPath to find a suitable place. DOTS Runtime Uses System.IO.Directory.GetCurrentDirectory . The path can be overridden by assigning GDX_OUTPUT_FOLDER in the launching arguments. | Improve this Doc View Source GetRandomSafeCharacter(IRandomProvider) Declaration public static char GetRandomSafeCharacter(IRandomProvider random) Parameters Type Name Description IRandomProvider random Returns Type Description System.Char | Improve this Doc View Source GetUniqueOutputFilePath(String, String, String) Declaration public static string GetUniqueOutputFilePath(string prefix = \"GDX_\", string extension = \".log\", string folderName = null) Parameters Type Name Description System.String prefix System.String extension System.String folderName Returns Type Description System.String | Improve this Doc View Source IsFileWritable(String) Is it safe to write to the indicated filePath ? Declaration public static bool IsFileWritable(string filePath) Parameters Type Name Description System.String filePath The file path to check if it can be written. Returns Type Description System.Boolean true/false if the path can be written too. | Improve this Doc View Source IsFocused() Is the application focused? Declaration public static bool IsFocused() Returns Type Description System.Boolean true/false if the application has focus. Remarks There are issues on some platforms with getting an accurate reading. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source IsHeadless() Is the application running in headless mode?. Declaration public static bool IsHeadless() Returns Type Description System.Boolean true/false if the application is without an initialized graphics device. Remarks Useful for detecting running a server. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.PlayerLoopSystemExtensions.html": {
    "href": "api/GDX.PlayerLoopSystemExtensions.html",
    "title": "PlayerLoopSystemExtensions | GDX",
    "keywords": "Class PlayerLoopSystemExtensions UnityEngine.LowLevel.PlayerLoopSystem Based Extension Methods Inheritance System.Object PlayerLoopSystemExtensions Namespace : GDX Syntax public static class PlayerLoopSystemExtensions Methods | Improve this Doc View Source AddSubSystem(ref PlayerLoopSystem, ref PlayerLoopSystem) Adds a child (sub) system to the provided parentSystem . Declaration public static void AddSubSystem(this ref PlayerLoopSystem parentSystem, ref PlayerLoopSystem subSystem) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem parentSystem The parent system which a child (sub) system should be added too. UnityEngine.LowLevel.PlayerLoopSystem subSystem The child (sub) system that is to be added to the parent. | Improve this Doc View Source AddSubSystemToFirstSubSystemOfType(ref PlayerLoopSystem, Type, Type, PlayerLoopSystem.UpdateFunction) Adds a child (sub) system to the first found instance of a parentSystemType system in rootSystem . Declaration public static bool AddSubSystemToFirstSubSystemOfType(this ref PlayerLoopSystem rootSystem, Type parentSystemType, Type subSystemType, PlayerLoopSystem.UpdateFunction subSystemUpdateFunction) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the parentSystemType will be searched recursively for. System.Type parentSystemType The system System.Type that will be searched for as the parent. System.Type subSystemType The type assigned when creating the UnityEngine.LowLevel.PlayerLoopSystem to be added. UnityEngine.LowLevel.PlayerLoopSystem.UpdateFunction subSystemUpdateFunction The method to invoke when the system is updated. Returns Type Description System.Boolean true/false if the parentSystemType was found, and therefore the add could occur. Examples PlayerLoopSystem systemRoot = PlayerLoop.GetCurrentPlayerLoop(); systemRoot.AddSubSystemToFirstSubSystemOfType( typeof(Update.ScriptRunDelayedTasks), typeof(TaskDirectorSystem), PlayerLoopTick); PlayerLoop.SetPlayerLoop(systemRoot); | Improve this Doc View Source AddSubSystemToFirstSubSystemOfType(ref PlayerLoopSystem, Type, ref PlayerLoopSystem) Adds a child (sub) system to the first found instance of a parentSystemType system in rootSystem . Declaration public static bool AddSubSystemToFirstSubSystemOfType(this ref PlayerLoopSystem rootSystem, Type parentSystemType, ref PlayerLoopSystem subSystem) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the parentSystemType will be searched recursively for. System.Type parentSystemType The system System.Type that will be searched for as the parent. UnityEngine.LowLevel.PlayerLoopSystem subSystem The child (sub) system that is to be added to the parent. Returns Type Description System.Boolean true/false if the parentSystemType was found, and therefore the add could occur. | Improve this Doc View Source GenerateSystemTree(ref PlayerLoopSystem, TextGenerator) Populates a TextGenerator with a tree-like structure that represents the UnityEngine.LowLevel.PlayerLoopSystem found under the rootSystem . Declaration public static TextGenerator GenerateSystemTree(this ref PlayerLoopSystem rootSystem, TextGenerator generator = null) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the tree should be crafted based off of. TextGenerator generator Optionally, provide a generator to be populated. Returns Type Description TextGenerator A TextGenerator populated with the system output. | Improve this Doc View Source RemoveSubSystemsOfType(ref PlayerLoopSystem, Type) Removes all child (sub) systems of the specified subSystemType from the provided parentSystem . Declaration public static bool RemoveSubSystemsOfType(this ref PlayerLoopSystem parentSystem, Type subSystemType) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem parentSystem The parent system which the child (sub) systems should be removed from. System.Type subSystemType The system System.Type that will be removed. Returns Type Description System.Boolean true/false, if a remove was done. Remarks This is NOT recursive, and will not effect the child (sub) systems of the child (sub) systems of the parentSystem | Improve this Doc View Source RemoveSubSystemsOfTypeFromFirstSubSystemOfType(ref PlayerLoopSystem, Type, Type) Removes all the child (sub) systems of to the first found instance of a parentSystemType system in rootSystem Declaration public static bool RemoveSubSystemsOfTypeFromFirstSubSystemOfType(this ref PlayerLoopSystem rootSystem, Type parentSystemType, Type subSystemType) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the parentSystemType will be searched recursively for. System.Type parentSystemType The system System.Type that will be searched for as the parent. System.Type subSystemType The child (sub) system System.Type that will be removed. Returns Type Description System.Boolean true/false, if a remove occured. | Improve this Doc View Source ReplaceFirstSubSystemOfType(ref PlayerLoopSystem, Type, ref PlayerLoopSystem) Replaces the first child (sub) system of the given rootSystem of subSystemType with the provided updatedSystem . Declaration public static bool ReplaceFirstSubSystemOfType(this ref PlayerLoopSystem rootSystem, Type subSystemType, ref PlayerLoopSystem updatedSystem) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the subSystemType will be searched recursively for. System.Type subSystemType The child (sub) system System.Type that will be replaced. UnityEngine.LowLevel.PlayerLoopSystem updatedSystem The system to replace the found subSystemType with. Returns Type Description System.Boolean true/false if the replace occured. | Improve this Doc View Source ReplaceSubSystemsOfType(ref PlayerLoopSystem, Type, ref PlayerLoopSystem) Replaces all child (sub) systems of the specified subSystemType from the provided parentSystem . Declaration public static bool ReplaceSubSystemsOfType(this ref PlayerLoopSystem parentSystem, Type subSystemType, ref PlayerLoopSystem updatedSystem) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem parentSystem The parent system which the child (sub) systems should be replaced. System.Type subSystemType The system System.Type that will be replaced. UnityEngine.LowLevel.PlayerLoopSystem updatedSystem The system to replace the found subSystemType with. Returns Type Description System.Boolean true/false if any replacement occured. Remarks This is NOT recursive, and will not effect the child (sub) systems of the child (sub) systems of the parentSystem | Improve this Doc View Source TryGetFirstSubSystemOfType(ref PlayerLoopSystem, Type, out Boolean) Searches the provided rootSystem child (sub) systems for the first instance of a subSystemType system. Declaration public static ref PlayerLoopSystem TryGetFirstSubSystemOfType(this ref PlayerLoopSystem rootSystem, Type subSystemType, out bool foundSubSystem) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the subSystemType will be searched recursively for. System.Type subSystemType The child (sub) system System.Type that will be searched for recursively. System.Boolean foundSubSystem Was an appropriate system found? Returns Type Description UnityEngine.LowLevel.PlayerLoopSystem The found system, or the root system. Check foundSubSystem to determine if the system was actually found. This pattern is used to preserve the reference. | Improve this Doc View Source TryGetFirstSystemWithSubSystemOfType(ref PlayerLoopSystem, Type, out Boolean, out Int32) Searches the provided rootSystem child (sub) systems for the first instance of a subSystemType and returns the parent system, with foundSystemIndex of the found child (sub) system. Declaration public static ref PlayerLoopSystem TryGetFirstSystemWithSubSystemOfType(this ref PlayerLoopSystem rootSystem, Type subSystemType, out bool foundSubSystem, out int foundSystemIndex) Parameters Type Name Description UnityEngine.LowLevel.PlayerLoopSystem rootSystem The root system which the subSystemType will be searched recursively for. System.Type subSystemType The child (sub) system System.Type that will be searched for recursively. System.Boolean foundSubSystem Was an appropriate child (sub) system found? System.Int32 foundSystemIndex The index of the found sub (child) system. Returns Type Description UnityEngine.LowLevel.PlayerLoopSystem The found parent system, or the root system. Check foundSubSystem to determine if the child (sub) system was actually found. This pattern is used to preserve the reference."
  },
  "api/GDX.RectExtensions.html": {
    "href": "api/GDX.RectExtensions.html",
    "title": "RectExtensions | GDX",
    "keywords": "Class RectExtensions Inheritance System.Object RectExtensions Namespace : GDX Syntax public static class RectExtensions Methods | Improve this Doc View Source GetCenteredRect(Rect, Vector2, Single) Declaration public static Rect GetCenteredRect(this Rect parentWindowPosition, Vector2 size, float safeZone = 0.9F) Parameters Type Name Description UnityEngine.Rect parentWindowPosition UnityEngine.Vector2 size System.Single safeZone Returns Type Description UnityEngine.Rect"
  },
  "api/GDX.Reflection.html": {
    "href": "api/GDX.Reflection.html",
    "title": "Reflection | GDX",
    "keywords": "Class Reflection A collection of reflection related helper utilities. Inheritance System.Object Reflection Namespace : GDX Syntax public static class Reflection Remarks Torn about the existence of this utility class, yet alone the conditions dictating it. Fields | Improve this Doc View Source PrivateFieldFlags System.Reflection.BindingFlags for a private field. Declaration public const BindingFlags PrivateFieldFlags = BindingFlags.Instance | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source PrivateStaticFlags System.Reflection.BindingFlags for a private static. Declaration public const BindingFlags PrivateStaticFlags = BindingFlags.Static | BindingFlags.NonPublic Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source PublicStaticFlags System.Reflection.BindingFlags for a public static. Declaration public const BindingFlags PublicStaticFlags = BindingFlags.Static | BindingFlags.Public Field Value Type Description System.Reflection.BindingFlags | Improve this Doc View Source SerializedTypesName The assembly qualified name for Serializable.SerializableTypes Declaration public static readonly string SerializedTypesName Field Value Type Description System.String | Improve this Doc View Source UnityObjectName The assembly qualified name for UnityEngine.Object Declaration public static readonly string UnityObjectName Field Value Type Description System.String Methods | Improve this Doc View Source GetDefault(Type) Returns the default value for a given type. Declaration public static object GetDefault(this Type type) Parameters Type Name Description System.Type type A qualified type. Returns Type Description System.Object The default value. | Improve this Doc View Source GetType(String) Returns a qualified type.. Declaration public static Type GetType(string type) Parameters Type Name Description System.String type The full name of a type. Returns Type Description System.Type A System.Type if found. | Improve this Doc View Source GetTypeQualifiedName(Type) Returns a short form, non-versioned qualified name for the type. Declaration public static string GetTypeQualifiedName(Type type) Parameters Type Name Description System.Type type The System.Type to generate the qualified name for. Returns Type Description System.String A qualified name | Improve this Doc View Source InvokeMethod(Object, String, Object[], BindingFlags) Invoke a known private method on an object. Declaration public static object InvokeMethod(object targetObject, string method, object[] parameters = null, BindingFlags flags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The ambiguous object to invoke a method on. System.String method The name of the method to invoke. System.Object [] parameters Any parameters that should be passed to the method? System.Reflection.BindingFlags flags The method 's access flags. Returns Type Description System.Object An System.Object of the return value. This can be null. | Improve this Doc View Source InvokeStaticMethod(String, String, Object[], BindingFlags) Invokes a known static method. Declaration public static object InvokeStaticMethod(string type, string method, object[] parameters = null, BindingFlags flags = BindingFlags.Static | BindingFlags.Public) Parameters Type Name Description System.String type The explicit type of the static class. System.String method The name of the method to invoke. System.Object [] parameters Any parameters that should be passed to the method? System.Reflection.BindingFlags flags The method 's access flags. Returns Type Description System.Object An System.Object of the return value. This can be null. | Improve this Doc View Source SetFieldOrPropertyValue(Object, String, Object, BindingFlags, BindingFlags) Set the field or property value of a specific targetObject , which may not be normally accessible. Declaration public static bool SetFieldOrPropertyValue(object targetObject, string name, object value, BindingFlags fieldFlags = BindingFlags.Instance | BindingFlags.NonPublic, BindingFlags propertyFlags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's field or property value set. System.String name The field or property's name to set. System.Object value The value to set the field or property to. System.Reflection.BindingFlags fieldFlags The field's access flags. System.Reflection.BindingFlags propertyFlags The property's access flags. Returns Type Description System.Boolean true/false if the value was set. | Improve this Doc View Source SetFieldValue(Object, Type, String, Object, BindingFlags) Set the field value of a specific targetObject , which may not be normally accessible. Declaration public static bool SetFieldValue(object targetObject, Type type, string name, object value, BindingFlags flags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's field value set; use a null value if this is a static field. System.Type type The explicit type of the targetObject . System.String name The field's name to set. System.Object value The value to set the field to. System.Reflection.BindingFlags flags The field's access flags. Returns Type Description System.Boolean true/false if the value was set. | Improve this Doc View Source SetPropertyValue(Object, Type, String, Object, BindingFlags) Set the property value of a specific targetObject , which may not be normally accessible. Declaration public static bool SetPropertyValue(object targetObject, Type type, string name, object value, BindingFlags flags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's property value set; use a null value if this is a static property. System.Type type The type of the targetObject . System.String name The property's name to set. System.Object value The value to set the property to. System.Reflection.BindingFlags flags The property's access flags. Returns Type Description System.Boolean true/false if the value was set. | Improve this Doc View Source TryGetFieldOrPropertyValue(Object, String, out Object, BindingFlags, BindingFlags) Try to access the field or property value of a specific targetObject , which may not be normally accessible. Declaration public static bool TryGetFieldOrPropertyValue(object targetObject, string name, out object returnValue, BindingFlags fieldFlags = BindingFlags.Instance | BindingFlags.NonPublic, BindingFlags propertyFlags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's field or property value read. System.String name The field or property's name to read. System.Object returnValue The returned value from the field or property, the default value if the property was unable to be read. System.Reflection.BindingFlags fieldFlags The field's access flags. System.Reflection.BindingFlags propertyFlags The property's access flags. Returns Type Description System.Boolean true/false if a value was found. Remarks Useful for when you really do not know the System.Type . | Improve this Doc View Source TryGetFieldValue<T>(Object, Type, String, out T, BindingFlags) Try to access the field value of a specific targetObject , which may not be normally accessible. Declaration public static bool TryGetFieldValue<T>(object targetObject, Type type, string name, out T returnValue, BindingFlags flags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's field value read; use a null value if this is a static field. System.Type type The qualified type of the targetObject . System.String name The field's name to read. T returnValue The returned value from the field, the default value if the field was unable to be read. System.Reflection.BindingFlags flags The field's access flags. Returns Type Description System.Boolean true/false if the process was successful. Type Parameters Name Description T The type of data being read from the field. | Improve this Doc View Source TryGetPropertyValue<T>(Object, Type, String, out T, BindingFlags) Try to get a property value from targetObject , which may not be normally accessible. Declaration public static bool TryGetPropertyValue<T>(object targetObject, Type type, string name, out T returnValue, BindingFlags flags = BindingFlags.Instance | BindingFlags.NonPublic) Parameters Type Name Description System.Object targetObject The instanced object which will have it's property value read; use a null value if this is a static property. System.Type type The explicit type of the targetObject . System.String name The property's name to read. T returnValue The returned value from the property, the default value if the property was unable to be read. System.Reflection.BindingFlags flags The property's access flags. Returns Type Description System.Boolean true/false if the process was successful. Type Parameters Name Description T The type of data being read from the property."
  },
  "api/GDX.RigidbodyExtensions.html": {
    "href": "api/GDX.RigidbodyExtensions.html",
    "title": "RigidbodyExtensions | GDX",
    "keywords": "Class RigidbodyExtensions UnityEngine.Rigidbody Based Extension Methods Inheritance System.Object RigidbodyExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class RigidbodyExtensions Methods | Improve this Doc View Source MomentOfInertia(Rigidbody, Vector3) Get a UnityEngine.Rigidbody 's moment of inertia for a targetAxis . Declaration public static float MomentOfInertia(this Rigidbody targetRigidbody, Vector3 targetAxis) Parameters Type Name Description UnityEngine.Rigidbody targetRigidbody The UnityEngine.Rigidbody to evaluate. UnityEngine.Vector3 targetAxis The axis use to calculate the moment of inertia. Returns Type Description System.Single The moment of inertia for the targetAxis . Remarks Provided targetAxis must not be UnityEngine.Vector3.zero . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.SceneExtensions.html": {
    "href": "api/GDX.SceneExtensions.html",
    "title": "SceneExtensions | GDX",
    "keywords": "Class SceneExtensions Inheritance System.Object SceneExtensions Namespace : GDX Syntax public static class SceneExtensions Methods | Improve this Doc View Source IsSceneManagerBusy() Indicates if there are scenes unloading, loading, or scenes that have yet to be integrated and enabled. Declaration public static bool IsSceneManagerBusy() Returns Type Description System.Boolean true/false if there is work being done."
  },
  "api/GDX.SegmentedString.html": {
    "href": "api/GDX.SegmentedString.html",
    "title": "SegmentedString | GDX",
    "keywords": "Struct SegmentedString A segmented collection of System.Char . Namespace : GDX Syntax public struct SegmentedString Methods | Improve this Doc View Source AsCharArray() Get the GDX.SegmentedString.m_Characters array. Declaration public char[] AsCharArray() Returns Type Description System.Char [] A System.Char array. | Improve this Doc View Source AsCharArray(Int32) Declaration public char[] AsCharArray(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Char [] | Improve this Doc View Source AsString() Declaration public string AsString() Returns Type Description System.String | Improve this Doc View Source AsString(Int32) Declaration public string AsString(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.String | Improve this Doc View Source GetCount() Declaration public int GetCount() Returns Type Description System.Int32 | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source GetHashCode(Int32) Declaration public int GetHashCode(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Int32 | Improve this Doc View Source GetOffset(Int32) Declaration public int GetOffset(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Int32 | Improve this Doc View Source GetSegmentLength(Int32) Declaration public int GetSegmentLength(int segmentIndex) Parameters Type Name Description System.Int32 segmentIndex Returns Type Description System.Int32 | Improve this Doc View Source SplitOnNonAlphaNumericToLower(String) Declaration public static SegmentedString SplitOnNonAlphaNumericToLower(string targetString) Parameters Type Name Description System.String targetString Returns Type Description SegmentedString | Improve this Doc View Source SplitOnNonAlphaNumericToLowerHashed(String) Declaration public static SegmentedString SplitOnNonAlphaNumericToLowerHashed(string targetString) Parameters Type Name Description System.String targetString Returns Type Description SegmentedString"
  },
  "api/GDX.Serializable.html": {
    "href": "api/GDX.Serializable.html",
    "title": "Serializable | GDX",
    "keywords": "Class Serializable Inheritance System.Object Serializable Namespace : GDX Syntax public static class Serializable Fields | Improve this Doc View Source SerializableTypesCount Declaration public const int SerializableTypesCount = 30 Field Value Type Description System.Int32 Methods | Improve this Doc View Source GetHashCode(Serializable.SerializableTypes) Declaration public static int GetHashCode(this Serializable.SerializableTypes serializableTypes) Parameters Type Name Description Serializable.SerializableTypes serializableTypes Returns Type Description System.Int32 | Improve this Doc View Source GetLabel(Serializable.SerializableTypes) Declaration public static string GetLabel(this Serializable.SerializableTypes serializableType) Parameters Type Name Description Serializable.SerializableTypes serializableType Returns Type Description System.String | Improve this Doc View Source GetLabelFromTypeValue(Int32) Declaration public static string GetLabelFromTypeValue(int typeValue) Parameters Type Name Description System.Int32 typeValue Returns Type Description System.String | Improve this Doc View Source GetTypeFromHashCode(Int32) Declaration public static Serializable.SerializableTypes GetTypeFromHashCode(int hashCode) Parameters Type Name Description System.Int32 hashCode Returns Type Description Serializable.SerializableTypes | Improve this Doc View Source GetTypeFromLabel(String) Declaration public static Serializable.SerializableTypes GetTypeFromLabel(string label) Parameters Type Name Description System.String label Returns Type Description Serializable.SerializableTypes | Improve this Doc View Source IsReferenceType(Serializable.SerializableTypes) Declaration public static bool IsReferenceType(this Serializable.SerializableTypes type) Parameters Type Name Description Serializable.SerializableTypes type Returns Type Description System.Boolean"
  },
  "api/GDX.Serializable.SerializableTypes.html": {
    "href": "api/GDX.Serializable.SerializableTypes.html",
    "title": "Serializable.SerializableTypes | GDX",
    "keywords": "Enum Serializable.SerializableTypes Namespace : GDX Syntax public enum SerializableTypes Fields Name Description AnimationCurve Bool Bounds BoundsInt Byte Char Color Double EnumInt Float Gradient Hash128 Int Invalid LayerMask Long Object Quaternion Rect RectInt SByte Short String UInt ULong UShort Vector2 Vector2Int Vector3 Vector3Int Vector4 Extension Methods EnumExtensions.HasFlags<Serializable.SerializableTypes>(Serializable.SerializableTypes) Serializable.GetHashCode() Serializable.GetLabel() Serializable.IsReferenceType()"
  },
  "api/GDX.Space.Axis.html": {
    "href": "api/GDX.Space.Axis.html",
    "title": "Space.Axis | GDX",
    "keywords": "Enum Space.Axis Namespace : GDX Syntax public enum Axis Fields Name Description Undefined X Y Z Extension Methods EnumExtensions.HasFlags<Space.Axis>(Space.Axis) Space.ToRotation()"
  },
  "api/GDX.Space.Direction.html": {
    "href": "api/GDX.Space.Direction.html",
    "title": "Space.Direction | GDX",
    "keywords": "Enum Space.Direction Namespace : GDX Syntax public enum Direction Fields Name Description Backward -Z axis. Down -Y axis. Forward Z axis. Left -X axis. Right X axis. Undefined An undetermined direction. Up Y axis. Extension Methods EnumExtensions.HasFlags<Space.Direction>(Space.Direction) Space.ToRotation()"
  },
  "api/GDX.Space.html": {
    "href": "api/GDX.Space.html",
    "title": "Space | GDX",
    "keywords": "Class Space Inheritance System.Object Space Namespace : GDX Syntax public static class Space Methods | Improve this Doc View Source GetDirection(Vector3) Get the corresponding Space.Direction for a UnityEngine.Vector3 provided direction. Declaration public static Space.Direction GetDirection(Vector3 direction) Parameters Type Name Description UnityEngine.Vector3 direction The given direction. Returns Type Description Space.Direction A qualified Space.Direction equivalent to the direction . Remarks Only works with deterministic directions builtin to Unity. | Improve this Doc View Source ToRotation(Space.Axis) Declaration public static Quaternion ToRotation(this Space.Axis axis) Parameters Type Name Description Space.Axis axis Returns Type Description UnityEngine.Quaternion | Improve this Doc View Source ToRotation(Space.Direction) Declaration public static Quaternion ToRotation(this Space.Direction direction) Parameters Type Name Description Space.Direction direction Returns Type Description UnityEngine.Quaternion"
  },
  "api/GDX.StringExtensions.html": {
    "href": "api/GDX.StringExtensions.html",
    "title": "StringExtensions | GDX",
    "keywords": "Class StringExtensions System.String Based Extension Methods Inheritance System.Object StringExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class StringExtensions Fields | Improve this Doc View Source AsciiCaseShift The ASCII decimal value shift required to change the case of a letter. Declaration public const int AsciiCaseShift = 32 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiLowerCaseEnd The ASCII decimal value for lowercase z. Declaration public const int AsciiLowerCaseEnd = 122 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiLowerCaseStart The ASCII decimal value for a. Declaration public const int AsciiLowerCaseStart = 97 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberDecimal The ASCII decimal value for the decimal (.). Declaration public const int AsciiNumberDecimal = 46 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberEnd The ASCII decimal value for 9. Declaration public const int AsciiNumberEnd = 57 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberSeparator The ASCII decimal value for the , separator. Declaration public const int AsciiNumberSeparator = 47 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberSign The ASCII decimal value for the number sign -. Declaration public const int AsciiNumberSign = 45 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiNumberStart The ASCII decimal value for 0. Declaration public const int AsciiNumberStart = 48 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiUpperCaseEnd The ASCII decimal value for uppercase Z. Declaration public const int AsciiUpperCaseEnd = 90 Field Value Type Description System.Int32 | Improve this Doc View Source AsciiUpperCaseStart The ASCII decimal value for uppercase A. Declaration public const int AsciiUpperCaseStart = 65 Field Value Type Description System.Int32 | Improve this Doc View Source EncryptionDefaultKey The default encryption key used when none is provided to the encryption related extensions. Declaration public static byte[] EncryptionDefaultKey Field Value Type Description System.Byte [] Remarks You can change this at runtime during some sort of initialization pass to being something unique to your project, but it is not absolutely necessary. This must be a multiple of 8 bytes. | Improve this Doc View Source EncryptionInitializationVector The IV (Initialization Vector) provided to the System.Security.Cryptography.DESCryptoServiceProvider . Declaration public static byte[] EncryptionInitializationVector Field Value Type Description System.Byte [] Remarks You can change this at runtime during some sort of initialization pass to being something unique to your project, but it is not absolutely necessary. This must be a multiple of 8 bytes. Methods | Improve this Doc View Source Concatenate(String[], String, Boolean) Concatenate an array of strings into one unified string. Declaration public static string Concatenate(this string[] pieces, string delimiter = null, bool trailingDelimiter = false) Parameters Type Name Description System.String [] pieces An array of strings System.String delimiter An optional string which to use between pieces when combining. System.Boolean trailingDelimiter Should a trailing delimiter be appended? Returns Type Description System.String A concatenated System.String . | Improve this Doc View Source CountOccurence(String, Char) Counts the number of times the needle ( targetCharacter ) appears in the haystack ( targetString ). Declaration public static int CountOccurence(this string targetString, char targetCharacter) Parameters Type Name Description System.String targetString The haystack. System.Char targetCharacter The needle. Returns Type Description System.Int32 The number of times targetCharacter is found in targetString . Remarks Specifically created to avoid using LINQ and avoid an allocation. | Improve this Doc View Source Decrypt(String, Byte[]) Decrypt an encrypted System.String created by Encrypt(String, Byte[]) . Declaration public static string Decrypt(this string encryptedString, byte[] encryptionKey = null) Parameters Type Name Description System.String encryptedString The encrypted System.String . System.Byte [] encryptionKey The key used to encrypt the System.String . Returns Type Description System.String The decrypted System.String . Remarks This will have quite a few allocations. | Improve this Doc View Source Encrypt(String, Byte[]) Encrypt a System.String utilizing a System.Security.Cryptography.DESCryptoServiceProvider . Declaration public static string Encrypt(this string decryptedString, byte[] encryptionKey = null) Parameters Type Name Description System.String decryptedString The original System.String . System.Byte [] encryptionKey The key to be used when encrypting the System.String . This must be a multiple of 8 bytes. Returns Type Description System.String The encrypted System.String . Remarks This will have quite a few allocations. | Improve this Doc View Source GetAfterFirst(String, String, StringComparison) Get the System.String after the first identified splitString in targetString . Declaration public static string GetAfterFirst(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content following the splitString , or null if none is found. | Improve this Doc View Source GetAfterLast(String, String, StringComparison) Get the System.String after the last identified splitString in targetString . Declaration public static string GetAfterLast(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content following the splitString , or null if none is found. | Improve this Doc View Source GetBeforeFirst(String, String, StringComparison) Get the System.String before the first identified splitString in targetString . Declaration public static string GetBeforeFirst(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content before the splitString , or null if none is found. | Improve this Doc View Source GetBeforeLast(String, String, StringComparison) Get the System.String before the last identified splitString in targetString . Declaration public static string GetBeforeLast(this string targetString, string splitString, StringComparison comparison = StringComparison.Ordinal) Parameters Type Name Description System.String targetString The target System.String to look in. System.String splitString The divider which the targetString should be split on. System.StringComparison comparison Specifies the culture, case, and sort rules to be used. Returns Type Description System.String The content before the splitString , or null if none is found. | Improve this Doc View Source GetStableHashCode(String) Get the stable hash code value of targetString . Declaration public static int GetStableHashCode(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Int32 A System.Int32 value. Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. It's value will be identical to the value produced natively by processing a System.String with System.String.GetHashCode , but with no allocations and no virtual calls. | Improve this Doc View Source GetStableLowerCaseHashCode(String) Get the stable hash code value of targetString (converted to an uppercase System.String ). Declaration public static int GetStableLowerCaseHashCode(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Int32 A System.Int32 value. Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. It's value will be identical to the value produced natively by processing a System.String with System.String.ToLower . System.String.GetHashCode , but with no allocations. | Improve this Doc View Source GetStableUpperCaseHashCode(String) Get the stable hash code value of targetString (converted to an uppercase System.String ). Declaration public static int GetStableUpperCaseHashCode(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Int32 A System.Int32 value. Remarks This loosely based on the Fowler–Noll–Vo (FNV) hash function. It's value will be identical to the value produced natively by processing a System.String with System.String.ToUpper . System.String.GetHashCode , but with no allocations. | Improve this Doc View Source HasLowerCase(String) Determine if there are any lowercase letters in the provided targetString . Declaration public static bool HasLowerCase(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if lowercase letters were found. | Improve this Doc View Source HasUpperCase(String) Determine if there are any uppercase letters in the provided targetString . Declaration public static bool HasUpperCase(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if uppercase letters were found. | Improve this Doc View Source IsBooleanPositiveValue(String) Determine if the targetString represents a positive boolean value arrangement. Declaration public static bool IsBooleanPositiveValue(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if the targetString can be evaluated as a positive boolean value. Examples Useful method when trying to parse data for branching. if(data[\"set\"].IsBooleanPositiveValue()) { ShouldBlueBox(); } | Improve this Doc View Source IsBooleanValue(String) Determine if the targetString represents a boolean value arrangement. Declaration public static bool IsBooleanValue(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if the targetString can be evaluated as a boolean value. | Improve this Doc View Source IsIntegerValue(String) Determine if the targetString is an System.Int32 value. Declaration public static bool IsIntegerValue(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if it contains an System.Int32 . Remarks This method is meant for when you do not actually need the value returned, merely an evaluation if the provided targetString is an System.Int32 . This does not qualify System.Single values positively. | Improve this Doc View Source IsNumeric(String) Is the targetString a numeric value. Declaration public static bool IsNumeric(this string targetString) Parameters Type Name Description System.String targetString The target System.String . Returns Type Description System.Boolean true/false if the targetString qualifies as a numeric value. Remarks The following requirements must be met to be considered a valid number in this method: The first character may be an indicator of its sign, an explicit acceptance of - is made. If prefixed with + , the number will be found invalid. A single decimal point . may be present in the targetString . No alphabet characters are present in the targetString . | Improve this Doc View Source PartialMatch(SimpleList<String>, String) Does the haystack partially contain the needle ? Declaration public static bool PartialMatch(this SimpleList<string> haystack, string needle) Parameters Type Name Description SimpleList < System.String > haystack A SimpleList<T> of System.String s. System.String needle The System.String that is being looked for. Returns Type Description System.Boolean true/false if found. | Improve this Doc View Source PartialMatch(String[], String) Does the haystack partially contain the needle ? Declaration public static bool PartialMatch(this string[] haystack, string needle) Parameters Type Name Description System.String [] haystack An array of System.String s. System.String needle The System.String that is being looked for. Returns Type Description System.Boolean true/false if found. | Improve this Doc View Source SplitCamelCase(String, String) Create a new string, splitting an existing string up based on camel case formatting. Declaration public static string SplitCamelCase(this string targetString, string divider = \" \") Parameters Type Name Description System.String targetString The target System.String . System.String divider The System.String to put in between the split System.String . Returns Type Description System.String A new System.String . | Improve this Doc View Source StripNonAscii(String) Remove non ASCII characters from a System.String . Declaration public static string StripNonAscii(this string targetString) Parameters Type Name Description System.String targetString The System.String to be cleaned. Returns Type Description System.String A System.String without ASCII characters."
  },
  "api/GDX.Threading.html": {
    "href": "api/GDX.Threading.html",
    "title": "Namespace GDX.Threading | GDX",
    "keywords": "Namespace GDX.Threading Classes TaskBase The base of a task used by TaskDirector . TaskDirector A simple control mechanism for distributed TaskBase work across the thread pool. Tasks should be short-lived and can queue up additional work. TaskDirectorSystem TaskExtensions System.Threading.Tasks.Task Based Extension Methods WaitFor Some useful wait for methods to control program flow. WaitWhile Some useful wait while methods to control program flow. Enums TaskBase.BlockingModeFlags A set of flags indicating what type of blocking this task does when it comes to other tasks, or even user experience."
  },
  "api/GDX.Threading.TaskBase.BlockingModeFlags.html": {
    "href": "api/GDX.Threading.TaskBase.BlockingModeFlags.html",
    "title": "TaskBase.BlockingModeFlags | GDX",
    "keywords": "Enum TaskBase.BlockingModeFlags A set of flags indicating what type of blocking this task does when it comes to other tasks, or even user experience. Namespace : GDX.Threading Syntax [Flags] public enum BlockingModeFlags : ushort Fields Name Description All Bits None SameName UserInteraction Extension Methods EnumExtensions.HasFlags<TaskBase.BlockingModeFlags>(TaskBase.BlockingModeFlags)"
  },
  "api/GDX.Threading.TaskBase.html": {
    "href": "api/GDX.Threading.TaskBase.html",
    "title": "TaskBase | GDX",
    "keywords": "Class TaskBase The base of a task used by TaskDirector . Inheritance System.Object TaskBase Namespace : GDX.Threading Syntax public abstract class TaskBase Fields | Improve this Doc View Source completed An event that is triggered when the TaskBase has finished its execution. Declaration public Action<TaskBase> completed Field Value Type Description System.Action < TaskBase > Remarks It is super important to remember that subscribed actions will invoke off of the main thread. Any logic that requires the main thread will not work. Many of Unity's APIs are not safe for this. | Improve this Doc View Source completedMainThread An event that is triggered once the TaskBase has finished, during the next tick of the TaskDirector . Declaration public Action<TaskBase> completedMainThread Field Value Type Description System.Action < TaskBase > Remarks This is a safe way to do work which requires being executed on the main thread. | Improve this Doc View Source m_Bits The TaskBase 's descriptive bits. Declaration protected BitArray16 m_Bits Field Value Type Description BitArray16 | Improve this Doc View Source m_BlockingBits A quick set of bits used to describe tasks that should be blocked when m_BlockingModes contains Bits . The opposing TaskBase will have its m_Bits checked for positives that match. Declaration protected BitArray16 m_BlockingBits Field Value Type Description BitArray16 Remarks If any of them are the sam | Improve this Doc View Source m_BlockingModes The TaskBase 's blocking modes for other tasks. Declaration protected TaskBase.BlockingModeFlags m_BlockingModes Field Value Type Description TaskBase.BlockingModeFlags | Improve this Doc View Source m_Exception The exception that occured. Declaration protected Exception m_Exception Field Value Type Description System.Exception Remarks See IsFaulted() . | Improve this Doc View Source m_IsLogging Should the task report information to the TaskDirector log. Declaration protected bool m_IsLogging Field Value Type Description System.Boolean | Improve this Doc View Source m_Name The user-friendly name of the task, used by different feedback systems. Declaration protected string m_Name Field Value Type Description System.String Remarks It's important to set this in inherited constructors. Methods | Improve this Doc View Source Complete() Forcibly completes the task on the given thread where the method is invoked. Declaration public void Complete() Remarks This will also forcibly tick the TaskDirector upon completion to trigger callbacks. You should not be using this unless you have an explicit purpose too. | Improve this Doc View Source DoWork() The core logic to be defined for a task. Declaration public abstract void DoWork() | Improve this Doc View Source Enqueue() Enqueue the current TaskBase with the TaskDirector for execution. Declaration public void Enqueue() | Improve this Doc View Source GetBits() Gets the associated BitArray16 with this task. Declaration public BitArray16 GetBits() Returns Type Description BitArray16 The defined flags. | Improve this Doc View Source GetBlockedBits() Gets the BitArray16 to evaluate other tasks against. Declaration public BitArray16 GetBlockedBits() Returns Type Description BitArray16 The defined bits. | Improve this Doc View Source GetBlockingModes() Returns the TaskBase.BlockingModeFlags used to determine other task execution. Declaration public TaskBase.BlockingModeFlags GetBlockingModes() Returns Type Description TaskBase.BlockingModeFlags A set of flags indicating if other tasks should be able to start execution. | Improve this Doc View Source GetException() Returns the System.Exception that was created when the task faulted. Declaration public Exception GetException() Returns Type Description System.Exception An System.Exception object. Remarks See IsFaulted() . | Improve this Doc View Source GetName() Gets the user-friendly name of the task. Declaration public string GetName() Returns Type Description System.String The defined System.String name of the task. | Improve this Doc View Source IsBlockingAllTasks() Does this TaskBase block all other tasks after it from starting execution? Declaration public bool IsBlockingAllTasks() Returns Type Description System.Boolean true if this task blocks all after it, otherwise false. Remarks This will keep all tasks after it sitting waiting for this task to complete. | Improve this Doc View Source IsBlockingBits() Does this TaskBase block other tasks from executing based on its m_BlockingBits ? Declaration public bool IsBlockingBits() Returns Type Description System.Boolean true if this tasks blocks based on bits, otherwise false. | Improve this Doc View Source IsBlockingSameName() Does this TaskBase block all other tasks of the same name from starting during its execution? Declaration public bool IsBlockingSameName() Returns Type Description System.Boolean true if this tasks blocks same named tasks, otherwise false. | Improve this Doc View Source IsBlockingUserInterface() Should the execution of this TaskBase prevent the user from providing input to the user interface? Declaration public bool IsBlockingUserInterface() Returns Type Description System.Boolean true if this task should prevent user input, otherwise false. Remarks This directly relates to the inputBlocked , altering the count used to trigger that particular event. | Improve this Doc View Source IsDone() Is the TaskBase finished executing? Declaration public bool IsDone() Returns Type Description System.Boolean Returns true if the execution phase of the task has been completed. This will be true if an exception has occured. | Improve this Doc View Source IsExecuting() Is the TaskBase currently executing on the thread pool? Declaration public bool IsExecuting() Returns Type Description System.Boolean Returns true if the task is executing, otherwise false. | Improve this Doc View Source IsFaulted() Did an exception occur while executing off thread? Declaration public bool IsFaulted() Returns Type Description System.Boolean Returns true if an exception occured. | Improve this Doc View Source Run() Execute task logic. Declaration public void Run()"
  },
  "api/GDX.Threading.TaskDirector.html": {
    "href": "api/GDX.Threading.TaskDirector.html",
    "title": "TaskDirector | GDX",
    "keywords": "Class TaskDirector A simple control mechanism for distributed TaskBase work across the thread pool. Tasks should be short-lived and can queue up additional work. Inheritance System.Object TaskDirector Namespace : GDX.Threading Syntax public static class TaskDirector Fields | Improve this Doc View Source exceptionOccured An event invoked when a TaskBase throws an exception. Declaration public static Action<Exception> exceptionOccured Field Value Type Description System.Action < System.Exception > | Improve this Doc View Source inputBlocked An event invoked during Tick() when user input should be blocked. Declaration public static Action<bool> inputBlocked Field Value Type Description System.Action < System.Boolean > | Improve this Doc View Source logAdded An event invoked during Tick() with new log content. Declaration public static Action<string[]> logAdded Field Value Type Description System.Action < System.String []> Methods | Improve this Doc View Source GetBusyCount() The number of tasks currently in process or awaiting execution by the thread pool. Declaration public static int GetBusyCount() Returns Type Description System.Int32 The number of tasks sitting in GDX.Threading.TaskDirector.k_TasksBusy . | Improve this Doc View Source GetQueueCount() The number of tasks waiting in the queue. Declaration public static int GetQueueCount() Returns Type Description System.Int32 The number of tasks sitting in GDX.Threading.TaskDirector.k_TasksQueue . | Improve this Doc View Source GetStatus() Get the status message for the TaskDirector . Declaration public static string GetStatus() Returns Type Description System.String A pre-formatted status message. | Improve this Doc View Source HasTasks() Does the TaskDirector have any known busy or queued tasks? Declaration public static bool HasTasks() Returns Type Description System.Boolean A true/false value indicating tasks. Remarks It's not performant to poll this. | Improve this Doc View Source IsBlockingBit(Int32) Is the TaskDirector blocking tasks with a specific bit? Declaration public static bool IsBlockingBit(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean A true/false value indicating if a BitArray16 index is being blocked. Remarks It isn't ideal to constantly poll this method, ideally this could be used to block things outside of the TaskDirector 's control based on tasks running. | Improve this Doc View Source Log(String) Adds a thread-safe log entry to a queue which will be dispatched to logAdded on the Tick() invoking thread. Declaration public static void Log(string message) Parameters Type Name Description System.String message The log content. | Improve this Doc View Source QueueTask(TaskBase) Add a task to the queue, to be later started when possible. Declaration public static void QueueTask(TaskBase task) Parameters Type Name Description TaskBase task An established task. Remarks If the task is already executing it will be added to the known busy list. | Improve this Doc View Source Tick() Update the TaskDirector , evaluating known tasks for work eligibility and execution. Declaration public static void Tick() Remarks This should occur on the main thread. If the TaskDirector is used during play mode, something needs to call this every global tick. While in edit mode the EditorTaskDirector triggers this method. | Improve this Doc View Source UpdateTask(TaskBase) Evaluate the provided task and update its state inside of the TaskDirector . Declaration public static void UpdateTask(TaskBase task) Parameters Type Name Description TaskBase task An established task. Remarks This will add a task to the TaskDirector if it does not already know about it, regardless of the current blocking mode status. Do not use this method to add non executing tasks, they will not be added to the TaskDirector in this way. | Improve this Doc View Source Wait() Wait on the completion of all known tasks, blocking the invoking thread. Declaration public static void Wait() Remarks Useful to force the main thread to wait for completion of tasks. | Improve this Doc View Source WaitAsync() Asynchronously wait on the completion of all known tasks. Declaration public static async Task WaitAsync() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/GDX.Threading.TaskDirectorSystem.html": {
    "href": "api/GDX.Threading.TaskDirectorSystem.html",
    "title": "TaskDirectorSystem | GDX",
    "keywords": "Class TaskDirectorSystem Inheritance System.Object TaskDirectorSystem Namespace : GDX.Threading Syntax public static class TaskDirectorSystem Fields | Improve this Doc View Source ticked Triggered after the TaskDirectorSystem has ticked, with the delta time. Declaration public static Action<float> ticked Field Value Type Description System.Action < System.Single > Methods | Improve this Doc View Source AddToPlayerLoop() Declaration public static void AddToPlayerLoop() | Improve this Doc View Source GetTickRate() Get the current tick rate used by the TaskDirectorSystem . Declaration public static float GetTickRate() Returns Type Description System.Single A double value representing the elapsed time necessary to trigger an update to the TaskDirectorSystem . | Improve this Doc View Source RemoveFromPlayerLoop() Declaration public static void RemoveFromPlayerLoop() | Improve this Doc View Source SetTickRate(Single) Update the rate at which the TaskDirectorSystem updates the TaskDirector . Declaration public static void SetTickRate(float tickRate) Parameters Type Name Description System.Single tickRate The new tick rate. Remarks This will not survive domain reload, please see TaskDirectorSystemTickRate ."
  },
  "api/GDX.Threading.TaskExtensions.html": {
    "href": "api/GDX.Threading.TaskExtensions.html",
    "title": "TaskExtensions | GDX",
    "keywords": "Class TaskExtensions System.Threading.Tasks.Task Based Extension Methods Inheritance System.Object TaskExtensions Namespace : GDX.Threading Syntax public static class TaskExtensions Methods | Improve this Doc View Source AsIEnumerator(Task) Wraps a System.Threading.Tasks.Task for use in a coroutine. Declaration public static IEnumerator AsIEnumerator(this Task task) Parameters Type Name Description System.Threading.Tasks.Task task An established System.Threading.Tasks.Task . Returns Type Description System.Collections.IEnumerator An System.Collections.IEnumerator for use with coroutines. Remarks Don't use coroutines."
  },
  "api/GDX.Threading.WaitFor.html": {
    "href": "api/GDX.Threading.WaitFor.html",
    "title": "WaitFor | GDX",
    "keywords": "Class WaitFor Some useful wait for methods to control program flow. Inheritance System.Object WaitFor Namespace : GDX.Threading Syntax public static class WaitFor Fields | Improve this Doc View Source FiveSeconds Five seconds worth of milliseconds. Declaration public const int FiveSeconds = 5000 Field Value Type Description System.Int32 | Improve this Doc View Source OneMinute One minute worth of milliseconds. Declaration public const int OneMinute = 60000 Field Value Type Description System.Int32 | Improve this Doc View Source OneSecond One second worth of milliseconds. Declaration public const int OneSecond = 1000 Field Value Type Description System.Int32 | Improve this Doc View Source TenMinutes Ten minutes worth of milliseconds. Declaration public const int TenMinutes = 600000 Field Value Type Description System.Int32 | Improve this Doc View Source TenSeconds Ten seconds worth of milliseconds. Declaration public const int TenSeconds = 10000 Field Value Type Description System.Int32 | Improve this Doc View Source ThirtySeconds Thirty seconds worth of milliseconds. Declaration public const int ThirtySeconds = 30000 Field Value Type Description System.Int32 | Improve this Doc View Source TwoSeconds Two seconds worth of milliseconds. Declaration public const int TwoSeconds = 2000 Field Value Type Description System.Int32 Methods | Improve this Doc View Source GetEnumerator(Int32) Wait using an System.Collections.IEnumerator . Declaration public static IEnumerator GetEnumerator(int milliseconds) Parameters Type Name Description System.Int32 milliseconds The number of milliseconds to wait for. Returns Type Description System.Collections.IEnumerator Yields null values. | Improve this Doc View Source GetTask(Int32) Wait asynchronously. Declaration public static async Task GetTask(int milliseconds) Parameters Type Name Description System.Int32 milliseconds The number of milliseconds to wait for. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/GDX.Threading.WaitWhile.html": {
    "href": "api/GDX.Threading.WaitWhile.html",
    "title": "WaitWhile | GDX",
    "keywords": "Class WaitWhile Some useful wait while methods to control program flow. Inheritance System.Object WaitWhile Namespace : GDX.Threading Syntax public static class WaitWhile Methods | Improve this Doc View Source GetEnumerator(Func<Boolean>) Wait using an System.Collections.IEnumerator while the conditional is true. Declaration public static IEnumerator GetEnumerator(Func<bool> conditional) Parameters Type Name Description System.Func < System.Boolean > conditional A function evaluated to determine if the wait continues. Returns Type Description System.Collections.IEnumerator Yields null values. | Improve this Doc View Source GetTask(Func<Boolean>) Wait asynchronously while the conditional is true. Declaration public static async Task GetTask(Func<bool> conditional) Parameters Type Name Description System.Func < System.Boolean > conditional A function evaluated to determine if the wait continues. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/GDX.TransformExtensions.html": {
    "href": "api/GDX.TransformExtensions.html",
    "title": "TransformExtensions | GDX",
    "keywords": "Class TransformExtensions UnityEngine.Transform Based Extension Methods Inheritance System.Object TransformExtensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class TransformExtensions Methods | Improve this Doc View Source DestroyChildren(Transform, Boolean, Boolean, Boolean) Destroy child UnityEngine.Transform . Declaration public static void DestroyChildren(this Transform targetTransform, bool deactivateBeforeDestroy = true, bool destroyInactive = true, bool immediateMode = false) Parameters Type Name Description UnityEngine.Transform targetTransform The parent UnityEngine.Transform to look at. System.Boolean deactivateBeforeDestroy Should the targetTransform children's UnityEngine.GameObject s be deactivated before destroying? This can be used to immediately hide an object, that will be destroyed at the end of the frame. System.Boolean destroyInactive Should inactive UnityEngine.GameObject be destroyed as well? System.Boolean immediateMode Should the destroy be done immediately? This is useful for author time calls. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetActiveChildCount(Transform) Get the number of immediate children active. Declaration public static int GetActiveChildCount(this Transform targetTransform) Parameters Type Name Description UnityEngine.Transform targetTransform The transform to look at's children. Returns Type Description System.Int32 The number of active children transforms. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetFirstComponentInChildrenComplex<T>(Transform, Boolean, Int32, Int32) Search recursively for a UnityEngine.Component on the targetTransform . Declaration public static T GetFirstComponentInChildrenComplex<T>(this Transform targetTransform, bool includeInactive, int currentDepth, int maxLevelsOfRecursion = -1) where T : Component Parameters Type Name Description UnityEngine.Transform targetTransform The target UnityEngine.Transform to use as the base for the search. System.Boolean includeInactive Include inactive child UnityEngine.GameObject s when looking for the UnityEngine.Component . System.Int32 currentDepth Current level of recursion. System.Int32 maxLevelsOfRecursion The maximum levels of recursion when looking for a UnityEngine.Component , -1 for infinite recursion. Returns Type Description T The first found UnityEngine.Component . Type Parameters Name Description T The target UnityEngine.Component type that is being looked for. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source GetScenePath(Transform) Get an in scene path to the targetTransform . Declaration public static string GetScenePath(this Transform targetTransform) Parameters Type Name Description UnityEngine.Transform targetTransform The UnityEngine.Transform which to derive a path from. Returns Type Description System.String A created path System.String . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.UnsupportedRuntimeException.html": {
    "href": "api/GDX.UnsupportedRuntimeException.html",
    "title": "UnsupportedRuntimeException | GDX",
    "keywords": "Class UnsupportedRuntimeException An exception used to indicate when a method is unavailable on a specific runtime. Inheritance System.Object System.Exception UnsupportedRuntimeException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState Namespace : GDX Syntax public class UnsupportedRuntimeException : Exception, ISerializable Constructors | Improve this Doc View Source UnsupportedRuntimeException() Declaration public UnsupportedRuntimeException() | Improve this Doc View Source UnsupportedRuntimeException(String) Declaration public UnsupportedRuntimeException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source UnsupportedRuntimeException(String, Exception) Declaration public UnsupportedRuntimeException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/GDX.Vector2Extensions.html": {
    "href": "api/GDX.Vector2Extensions.html",
    "title": "Vector2Extensions | GDX",
    "keywords": "Class Vector2Extensions UnityEngine.Vector2 Based Extension Methods Inheritance System.Object Vector2Extensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class Vector2Extensions Methods | Improve this Doc View Source Approximately(Vector2, Vector2) Is one UnityEngine.Vector2 approximately similar to another UnityEngine.Vector2 ? Declaration public static bool Approximately(this Vector2 targetVector2, Vector2 otherVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 Point A UnityEngine.Vector2 otherVector2 Point B Returns Type Description System.Boolean Are the two UnityEngine.Vector2 approximately the same? Remarks Includes optimized Unity.Mathematics approach. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Midpoint(Vector2, Vector2) Get the midpoint between two UnityEngine.Vector2 s. Declaration public static Vector2 Midpoint(this Vector2 targetVector2, Vector2 otherVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 Point A UnityEngine.Vector2 otherVector2 Point B Returns Type Description UnityEngine.Vector2 The midpoint between targetVector2 and otherVector2 . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source NearestIndex(Vector2, Vector2[]) Find the index of the UnityEngine.Vector2 in otherVector2 that is nearest to the targetVector2 . Declaration public static int NearestIndex(this Vector2 targetVector2, Vector2[] otherVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 The UnityEngine.Vector2 to use as the point of reference. UnityEngine.Vector2 [] otherVector2 An array of UnityEngine.Vector2 positions to evaluate for which one is nearest. Returns Type Description System.Int32 The index of the nearest otherVector2 element to targetVector2 . Returning -1 if the the otherVector2 has no elements or is null. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Slope(Vector2) Get the slope of a UnityEngine.Vector2 . Declaration public static float Slope(this Vector2 targetVector2) Parameters Type Name Description UnityEngine.Vector2 targetVector2 The UnityEngine.Vector2 to evaluate. Returns Type Description System.Single The slope value. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TryParseVector2(String, out Vector2) Attempt to parse a System.String into a UnityEngine.Vector2 . Declaration public static bool TryParseVector2(this string targetString, out Vector2 outputVector2) Parameters Type Name Description System.String targetString The System.String to convert into a UnityEngine.Vector2 if possible. UnityEngine.Vector2 outputVector2 The outputted UnityEngine.Vector2 . Returns Type Description System.Boolean true/false if the conversion was successful. Remarks This isn't great for runtime performance, it should be used predominantly when reconstructing data. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.Vector3Extensions.html": {
    "href": "api/GDX.Vector3Extensions.html",
    "title": "Vector3Extensions | GDX",
    "keywords": "Class Vector3Extensions UnityEngine.Vector3 Based Extension Methods Inheritance System.Object Vector3Extensions Namespace : GDX Syntax [VisualScriptingCompatible((short)2)] public static class Vector3Extensions Methods | Improve this Doc View Source Approximately(Vector3, Vector3) Is one UnityEngine.Vector3 approximately similar to another UnityEngine.Vector3 ? Declaration public static bool Approximately(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description System.Boolean Are the two UnityEngine.Vector3 approximately the same? Remarks Includes optimized Unity.Mathematics approach. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source DistanceSqr(Vector3, Vector3) Calculate the squared distance between two UnityEngine.Vector3 . Declaration public static float DistanceSqr(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description System.Single The squared distance. Remarks Based on https://en.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source DistanceToRay(Vector3, Ray) Calculate the distance from a UnityEngine.Vector3 to a UnityEngine.Ray . Declaration public static float DistanceToRay(this Vector3 targetVector3, Ray targetRay) Parameters Type Name Description UnityEngine.Vector3 targetVector3 The position. UnityEngine.Ray targetRay The line. Returns Type Description System.Single The distance. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source HorizontalDistance(Vector3, Vector3) Get the horizontal distance between two UnityEngine.Vector3 points. Declaration public static float HorizontalDistance(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description System.Single The horizontal distance. Remarks Ignores the Y-axis completely. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source Midpoint(Vector3, Vector3) Get the midpoint between two UnityEngine.Vector3 s. Declaration public static Vector3 Midpoint(this Vector3 targetVector3, Vector3 otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 Point A UnityEngine.Vector3 otherVector3 Point B Returns Type Description UnityEngine.Vector3 The midpoint between targetVector3 and otherVector3 . Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source NearestIndex(Vector3, Vector3[]) Find the index of the UnityEngine.Vector3 in otherVector3 that is nearest to the targetVector3 . Declaration public static int NearestIndex(this Vector3 targetVector3, Vector3[] otherVector3) Parameters Type Name Description UnityEngine.Vector3 targetVector3 The UnityEngine.Vector3 to use as the point of reference. UnityEngine.Vector3 [] otherVector3 An array of UnityEngine.Vector3 positions to evaluate for which one is nearest. Returns Type Description System.Int32 The index of the nearest otherVector3 element to targetVector3 . Returning -1 if the the otherVector3 has no elements or is null. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime. | Improve this Doc View Source TryParseVector3(String, out Vector3) Attempt to parse a System.String into a UnityEngine.Vector3 . Declaration public static bool TryParseVector3(this string targetString, out Vector3 outputVector3) Parameters Type Name Description System.String targetString The System.String to convert into a UnityEngine.Vector3 if possible. UnityEngine.Vector3 outputVector3 The outputted UnityEngine.Vector3 . Returns Type Description System.Boolean true/false if the conversion was successful. Remarks This isn't great for runtime performance, it should be used predominantly when reconstructing data. Exceptions Type Condition UnsupportedRuntimeException Not supported on DOTS Runtime."
  },
  "api/GDX.VisualElementStyles.Alignment.html": {
    "href": "api/GDX.VisualElementStyles.Alignment.html",
    "title": "VisualElementStyles.Alignment | GDX",
    "keywords": "Enum VisualElementStyles.Alignment Namespace : GDX Syntax public enum Alignment Fields Name Description BottomLeft BottomRight TopLeft TopRight Extension Methods EnumExtensions.HasFlags<VisualElementStyles.Alignment>(VisualElementStyles.Alignment)"
  },
  "api/GDX.VisualElementStyles.html": {
    "href": "api/GDX.VisualElementStyles.html",
    "title": "VisualElementStyles | GDX",
    "keywords": "Class VisualElementStyles Inheritance System.Object VisualElementStyles Namespace : GDX Syntax public static class VisualElementStyles Fields | Improve this Doc View Source AlignmentBottomLeftClass Declaration public const string AlignmentBottomLeftClass = \"bottom-left\" Field Value Type Description System.String | Improve this Doc View Source AlignmentBottomRightClass Declaration public const string AlignmentBottomRightClass = \"bottom-right\" Field Value Type Description System.String | Improve this Doc View Source AlignmentTopLeftClass Declaration public const string AlignmentTopLeftClass = \"top-left\" Field Value Type Description System.String | Improve this Doc View Source AlignmentTopRightClass Declaration public const string AlignmentTopRightClass = \"top-right\" Field Value Type Description System.String | Improve this Doc View Source DisplayHidden Declaration public static readonly StyleEnum<DisplayStyle> DisplayHidden Field Value Type Description UnityEngine.UIElements.StyleEnum < UnityEngine.UIElements.DisplayStyle > | Improve this Doc View Source DisplayVisible Declaration public static readonly StyleEnum<DisplayStyle> DisplayVisible Field Value Type Description UnityEngine.UIElements.StyleEnum < UnityEngine.UIElements.DisplayStyle > | Improve this Doc View Source LengthOneHundredPercent Declaration public static readonly StyleLength LengthOneHundredPercent Field Value Type Description UnityEngine.UIElements.StyleLength | Improve this Doc View Source LengthZeroPixel Declaration public static readonly StyleLength LengthZeroPixel Field Value Type Description UnityEngine.UIElements.StyleLength | Improve this Doc View Source PositionAbsolute Declaration public static readonly StyleEnum<Position> PositionAbsolute Field Value Type Description UnityEngine.UIElements.StyleEnum < UnityEngine.UIElements.Position > | Improve this Doc View Source PositionRelative Declaration public static readonly StyleEnum<Position> PositionRelative Field Value Type Description UnityEngine.UIElements.StyleEnum < UnityEngine.UIElements.Position > Methods | Improve this Doc View Source ApplyAlignment(VisualElement, VisualElementStyles.Alignment) Declaration public static void ApplyAlignment(this VisualElement element, VisualElementStyles.Alignment alignment) Parameters Type Name Description UnityEngine.UIElements.VisualElement element VisualElementStyles.Alignment alignment | Improve this Doc View Source Fullscreen(VisualElement) Declaration public static void Fullscreen(this VisualElement element) Parameters Type Name Description UnityEngine.UIElements.VisualElement element | Improve this Doc View Source Hide(VisualElement) Declaration public static void Hide(this VisualElement element) Parameters Type Name Description UnityEngine.UIElements.VisualElement element | Improve this Doc View Source IsVisible(VisualElement) Declaration public static bool IsVisible(this VisualElement element) Parameters Type Name Description UnityEngine.UIElements.VisualElement element Returns Type Description System.Boolean | Improve this Doc View Source Show(VisualElement) Declaration public static void Show(this VisualElement element) Parameters Type Name Description UnityEngine.UIElements.VisualElement element"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API | GDX",
    "keywords": "API GitHub Repository"
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog | GDX",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [4.0.1] - Unreleased Added A CommandPalette , (Developer) Console and RuntimeConsole requiring ( Unity 2022.2+ ), example code utilizes the new InputSystem. GDX primarily uses own ManagedLog system now allowing for heirarchial logging through the framework. Numerous Watches which provide easily visualization of static fields. A simplified BuildConfiguration object with inheritance. Simplified ways to access identifiers for DataTableBase rows and columns. SceneExtensions extensions to provide better awareness of loading. FilenameTimestampFormat as a ToString format for DateTime . GDX.RuntimeContent to organize runtime resources for automatic build inclusion and loading. Changed TestRunner now waits for all scenes to finish loading before proceeding with tests. Moved issues and planning back to GitHub issues; making it easier for outside contributions. [4.0.0] - 2023-07-02 \"Going Bold\" After almost a year of no public updates (the dev branch was bustling), the release of 4.0.0 comes with significant changes and a continued effort to improve unit test coverage and discoverability. The package remains tested against 2020.3 and 2021.3 ; however, we strongly recommend transitioning to 2022.3 or newer to unlock additional functionality. Added GDX.Experimental namespace to encapsulate code and features actively being iterated until they meet the shipping bar. New toggle added to Project Settings -> GDX -> Environment, ensuring that GDX shaders included are always included in a build. This encompasses the shaders necessary to draw the DebugDraw commands ( Experimental ). TaskDirector to assist with TaskBase based scheduling of the thread pool, configurable in GDX project preferences. EditorTaskDirectorSystem and TaskDirectorSystem to automatically tick the TaskDirector in appropriate modes. Boilerplate in PlayerLoopSystemExtensions to make modifying the PlayerLoop much simpler. Compact() added to SimpleList utilizing a properly sized version of the backing array. FirstIndexOf() and LastIndexOf() methods added to ArrayExtensions constrained to IEquatable for easier string comparison. FirstIndexOf() , FirstIndexOfItem() , FirstIndexOfValue() , LastIndexOf() , LastIndexOfItem() , LastIndexOfValue() methods added to SimpleListExtensions . Contains() to SimpleListExtensions constrained to IEquatable . WaitFor program flow helper. AssetDatabaseReference weak-reference objects with helpers. EditorPrefsCache to cache editor preference accessing. StableDataTable implementation of new DataTableBase with full suite of supporting references *CellValue . Spreadsheet-like editing experience for DataTableBase inheriting objects ( Unity 2022.2+ ) Changed Extension-based classes now live in the namespace they extend from. Reworked the project settings window to now include some of the recent changelog for visibility. SimpleListManagedPool events renamed for consistency to destroyedItem , returnedItem , spawnedItem , tearingDown . Explicit callout that SerializableDictionary does not support custom struct keys. Addressables package version dependency increased to 1.18.19 . Internal config variable names clarified, including now a config format version number. Reworked internal stylesheets to be segmented and more efficient. Fixed StringKeyDictionary and IntKeyDictionary can now be initialized with capacities as static fields. Bolt changes in Unity 2022 causing Project Settings from being able to load properly. TransformExtensions::GetFirstComponentInChildrenComplex() will now properly handle the recursive compare of objects appropriately. Removed Trace has been removed, replaced with ManagedLog ( Experimental ), there is no longer a preferences section for it. Given that categories are set through code, so is the output options. Removed portability tests based on depreciation of tool. Reliance on jobs package. Any usage of AssetDatabase.FindAssets() [3.0.1] - 2022-07-12 \"3D Arrays\" A few additions with a bug fix that emerged. Added New Array3D and NativeArray3D flattened 3D arrays. Changed BitArray8 , BitArray16 , BitArray32 , BitArray64 have been marked Serializable . Fixed IntKeyDictionary.Clear() now properly sets bucket values. [3.0.0] - 2022-07-05 \"Clean Slate\" As we began planning what this release might look like, the decision was made to attempt to clear out a significant portion of our technical debt by sunsetting unsupported versions of Unity. We also took this opportunity to reevaluate and upgrade portions of the framework to better position it for future growth. Added Dependencies on com.unity.mathematics , com.unity.burst , com.unity.jobs and com.unity.collections packages. Support for com.unity.runtime.dots (UNITY_DOTSRUNTIME) builds. Unsupported functionality will cause compilation errors during builds for immediate feedback on unsupported usage. Additionally, unsupported methods are flagged with an UnsupportedRuntimeException which is visible in documentation as well as IDE intelli-sense. Support for com.unity.entities programming patterns. BuildVerificationReport structure for quick validation of builds, including a TestBehaviour . StringKeyDictionary to optimize one of the most common use cases for dictionaries. SegmentedString to support string search patterns. OriginalValueAttribute to support a default value-like pattern. Unity editor non-pro (light) theme. Additional information around coding standards to documentation. UniformArray3D counter part to NativeUniformArray3D Changed Properly formatted the CHANGELOG.md thanks to a proper linter, as well as tried to unify nomenclature used to describe changes. The GDX namespace has been reorganized. Conform naming conventions to Unity standard. GDXConfig has been simplified to Config , with member variables being statically accessible. Package's project settings were rebuilt to use UIElement s instead of IMGUI with added searchability. Smooth::HalfLifeToSmoothingFactor() no longer defaults elapsed time to Time.deltaTime The visual scripting module detects the package based installation available in Unity 2021 and forward. If you wish to have support in Unity 2020.3 via the Asset Store you will need to add a scripting define symbol of GDX_VISUALSCRIPTING to your project. All internal Dictionary<string,value> have been replaced with StringKeyDictionary<value> BuildInfoProvider now uses a TextGenerator for codegen. Platform::GetOutputFolder() supports being overridden via command-line argument GDX_OUTPUT_FOLDER . Internal members of SerializableDictionary have been renamed, FormerlySerializedAs attribute has been used to hopefully upgrade content. Localization::GetIETF() was renamed for clarity to Localization::GetIETF_BCP47() , with further value definitions. Optimized internals of CircularBuffer removing some garbage being made when using ToArray() . ListManagedPool rebuilt as SimpleListManagedPool for all object based pooling needs. Flagged DisableInInspectorAttributePropertyDrawer to only use UIElements version with UNITY_2022_2_OR_NEWER . GenerateProjectFiles now has more macOS options. The Camera extension method CaptureToPNG() has been renamed RenderToPNG() to reflect better its actual actions. TransformExtensions::DestroyChildren() now has an immediate mode to remove children at author time. Moved SemanticVersion into the GDX.Developer namespace. Moved TransientReference into the GDX.Developer namespace. Byte2 accessor throws IndexOutOfRangeException when using ENABLE_UNITY_COLLECTIONS_CHECKS . Fixed Platform::IsFocused() now returns the proper focus state on desktop platforms. TransformExtensions::DestroyChildren() no longer has issues with child counts. NativeUniformArray3D.GetFromIndex() provides the correct index now. NUnitReport.GetResultCount() now reflects accurate count post NUnitReport.Process() . Removed Automation::GetTempFolder() in favour of using Platform::GetOutputFolder() . Automation::GetTempFilePath() in favour of using Platform::GetUniqueOutputFilePath() . NativeSimpleList in favour of builtin collection UnsafeList . NativeSimpleQueue in favour of builtin collection UnsafeQueue . GDXConfigInspector no longer needed as the serialized config model has been replaced. All \"Requires UnityEngine.CoreModule.dll\" remarks removed. [2.0.3] - 2021-12-01 \"Automate This\" This marks the start of our effort to refactor GDX to be more compatible outside of the GameObject world that we currently live in. Over the next couple versions a lot of effort will be going into making types Burst compatible. We will do this by changing the backing types to NativeCollections, however this will result in some slight changes to the API to force cleanup. Added A RandomWrapper was created to allow for System.Random to be used with the IRandomProvider interface. Cleaning method StringExtensions::StripNonAscii() . Editor scoped functionality, with supporting functionality builtin to provide reliable Unity editor testing. Automation::CaptureEditorWindow<T>() Automation::CaptureEditorWindowToPNG<T>() Automation::CaptureFocusedEditorWindow() Automation::CaptureFocusedEditorWindowToPNG() Numerous color comparison operation jobs. Jobs.ParallelFor.Color32CompareJob Jobs.ParallelFor.Color32MatchJob Jobs.ParallelFor.ColorCompareJob Jobs.ParallelFor.ColorMatchJob Changed Now using a NativeArray<uint> to store state in the 'WELL1024a', now requires the use of Dispose() . Some Platform methods behaved like extensions when they should not have been. Fixed WELL1024a exclusive methods truly will exclude the values correctly. [2.0.2] - 2021-11-03 \"Told Ya\" Mistakes were made; fixes happened. Added Infinitely sized CoalesceStream available for dealing with large data streams. A few ( Platform::EnsureFileWritable() , Platform::ForceDeleteFile() , Platform::IsFileWritable() ) file permission operations have been added. Fixed The manifest for the package can be found again! Corrected path information to reflect new hierarchy. [2.0.1] - 2021-11-02 \"Feature Branches\" A lot of experimental work is being now done in feature branches; this should speed up iteration time on releases. Added Trace configuration matrix available in project settings. Changed Internally used SettingsStyles has been split into SettingsStyles and SettingsLayoutOptions accordingly. Moved everything up one folder layer in package to fit with package standards. Fixed Optimized referencing of GDXConfig in author time operations (now similar to runtime). IListExtensions::ContainsItem() now uses Equals() to resolve literals issues with strings. Categories for Visual Scripting based entries are now correct. Resolved issue with newer Package Manager based lock files having no tag identities. [2.0.0] - 2021-05-09 \"Fresh Paint\" Breaking changes and a new license (BSL-1.0); making GDX even easier to include in projects! Added New FAQ section of the website, addressing some of the more frequently asked questions. WELL1024a implementation to replace removed MersenneTwister in GDX . IRandomProvider and RandomAdaptor to allow for some interchange with existing usages; these are slow and should be used as a last resort. StringExtensions::GetStableHashCode() for generating hashcode of strings identical to GetHashCode() , without the virtual call. TransientReference provides a comparable non-garbage collection blocking reference type. Report provides some of the common logic used by the newly added ResourcesAudit and ResourcesDiff . Think of this as an incredibly simple way to find resource memory leaks. Changed File license headers, repository wide now reference the BSL-1.0 license. Corrected minimum compatible version to 2018.4 in README.md Added latest version 2.0.0 to SECURITY.md , sunsetting 1.2.x . VisualScriptingCollectionAttribute , VisualScriptingExtensionAttribute , VisualScriptingTypeAttribute , VisualScriptingUtilityAttribute have been consolidated to VisualScriptingCompatible . NextDouble , NextSingle functionality on IRandomProviders do not default to extreme values. NativeSimpleList and NativeSimpleQueue are only available when com.unity.collections is not present. Altered API documentation to have a heirachial namespace index using custom tooling. Removed Removed some supporting types and methods used by GDX's project settings from documentation . Removed MersenneTwister to allow for our new licensing model (functionally replaced with WELL1024a implementation). [1.3.0] - 2021-04-06 \"Visual Time\" An effort to make GDX more accessible to Visual Scripting. Added Automated compatibility tests for 2018.4 LTS, 2019.4 LTS and 2020.3 LTS have been added to internal CI. Automated portability checks for .NET Standard 2.0 and .NET Core 3.1 to internal CI. Support for Visual Scripting (Bolt) with options in Project Settings to add a currated portion of the GDX API for usage with Visual Scripting. New array pooling type ArrayPool , with corresponding JaggedArrayWithCount . Numerous collections gained Reverse() methods, and the newly added Array2D also having ReverseRows() and ReverseColumns() . Changed Stated support for GDX has shifted to current release cycle Unity, with support for 2018.4 LTS, 2019.4 LTS and 2020.3 LTS. This doesn't mean that it will not work with other versions, just our automation only checks against LTS and current versions. Removed the extension Get method from GameObjectPool to match the other methods. Only Unity 2020+ supports the Package Manager resolve function, previous versions of Unity will be presented with an options dialog. Consolidated access/creation of GDXConfig . Altered NativeArray2D to index accessor to function like Array2D . Fixed Force the Package Manager to resolve the package manifest during an update. Occasional infinite loop importing GDXConfig with a cache server. Unsupported attributes for Unity 2018. Removed Struct specific extension methods have been removed from IListExtensions and SimpleListExtensions ; explicitly to avoid obsfucating boxing types and hiding a problem. [1.2.7] - 2021-03-16 \"Never Say Never\" Updates have been tested across different installation methods, a pooling system, and some fixes! Added UPM and GitHub installation methods utilizing the dev branch will have a \"Force Update\" action available to them in the Project Settings . PlatformExtensions now has a IsHeadless() method for determining if the application is running without a graphics device initialized; aka a headless server. EnumExtensions has a faster HasFlags() method for working with flags. PoolingSystem now exists in the GDX.Collections.Pooling namespace, including a GameObjectPool system. Trace static now available to funnel all GDX based logging through, with editor/build configurations available. Changed Made SparseSets .NET Standard 2.0 compliant @godjammit Fixed Caught issue with initialCapcity causing an OOB issue with SparseSets @godjammit Caught a few more null coalescing assignments that are not compatible with Unity 2019 in InspectorMessageBoxAttributeDecoratorDrawer . (thanks Nick & Gabe) Resolved PackageProvider issues with Unity 2019. [1.2.6] - 2021-02-15 \"UPM Updates\" Starting to frame up the ability to update package adds from GitHub. Added Some functionality around being able to update a UPM based package, by removing the entry in the lockfile, a package will update. Fixed NavMeshPathExtensions no longer breaks compiling without com.unity.mathematics . [1.2.5] - 2021-02-12 \"Hello World\" Enough critical mass has been hit with functionality that with this release we will start to look at publicizing the package more. Added Environment section of GDX project settings allows for an initial toggling of GDX scripting define symbol enforcement. TransformExtensions gained a GetScenePath() to create an easy way to identify an object in logs. GameObjectExtensions extended out to have more helper functionality. A GetOrAddComponent() method which ensures that a component exists (by adding) when requested. The GetScenePath() for easy identification as well. Changed The CHANGELOG.md has had it's identifiers simplified, retroactively. Functionality from inside of Editor.Build.BuildInfoProvider has been split into more specific classes for different build pipeline / paths. Classic Build Pipeline BuildInfoBuildCustomizer produces the BuildInfo file during that pipeline execution. ScriptingDefinesBuildCustomizer ensures the GDX scripting define is set during builds (if enabled). Legacy Build Pipeline BuildInfoBuildProcessor is used to produce the BuildInfo file during legacy builds, as well as resetting it in both Classic and Legacy builds. ScriptingDefinesBuildProcessor ensures the GDX scripting define is set during legacy builds. Fixed The CHANGELOG.md retroactively has had a Fixed section added. [1.2.4] - 2021-02-11 \"Cold Brew\" Bugfixes, feedback, and features, just what a growing library needs. Added GDX scripting define is automatically added to all build targets. GameObjectExtensions and TransformExtensions received a DestroyChildren() function. DisableInInspectorAttribute for all your disabled field needs. InspectorMessageBoxAttribute for ease of messaging/reminders. Changed Adopted using dev branch on GitHub for active development, pulling into version named branches for patching. Removed InspectorLabelAttribute , Unity has native InspectorNameAttribute in 2019.1+ Fixed Restored reference to Unity.PerformanceTesting [1.2.3] - 2021-02-09 \"Workplace 2.0\" Extending functionality out with more code from the backlog, while still addressing some oddities in the existing codebase. Added A Unity serializable dictionary based type Collections.Generic.SerializableDictionary . The SerializableDictionaryCustomPropertyDrawer requires Unity 2020.1 or newer; while the SerializableDictionary will still work without it, just without a pretty PropertyDrawer . Vector3Extensions.DistanceToRay() A way to get key positions CapsuleCollider.OutSphereCenters() from a CapsuleCollider . Improved on StringExtensions : Optimized test IsBooleanValue() . Optimized test IsBooleanPositiveValue() . Optimized test IsIntegerValue() Optimized test IsNumericalValue() . Exposed ASCII markers. NavMeshPathExtensions to help with working with AI/navigation. TransformExtensions A depth-limited GetFirstComponentInChildrenComplex() method. A quick GetActiveChildCount() reporting only on active child transforms. Automated culture setting on main thread when an unknown system language is found, protecting against specific calender situations. LICENSE.meta has returned to the package to stop compile warnings, we will just have to deal with GitHub not being able to figure out the license model automatically. Changed Added language to README.md and documentation regarding associations to Unity. Optimized GDXConfig loading at runtime. Wrap InspectorLabelAttribute in UNITY_EDITOR define requirement. Consolidated entirety of Editor.Settings related classes into private classes inside of itself. Moved Editor.InspectorLabelPropertyDrawer to Editor.PropertyDrawers.InspectorLabelPropertyDrawer Removed Centralized Strings , moving ownership of data to the actual primary consumer. Reference to unit test locations from files. Corrected Jobs package being included in Unity's CoreModule. [1.2.2] - 2021-02-1 \"Cookie Monster\" A whole lot of work went into trying to solidify what documentation is going to look like, as well as get foundational work in place to make sure anyone can contribute. Added Moved all static GUIContent from settings window into new SettingsContent . Moved all static layout functionality from SettingsStyles into SettingsLayout . Developer.Conditionals contains constant status indicators of packages used by GDX . Useful for determine if a certain feature set is available. Properly set define GDX_PLATFORMS based on the com.unity.platforms package. The Localization.GetHumanReadableFileSize() method to create more readable file size outputs. More functionality in Vector2Extensions NearestIndex() to find the closest position in an array. Slope() Additional functionality in Vector3Extensions HorizontalDistance() to get a horizontal distance ignoring vertically. NearestIndex() to find the closest position in an array of positions. StringExtensions 's TryParseVector2() and TryParseVector3() will rehydrate 0,0 and 0,0,0 formatted strings. A complex version of GetComponentInChildren() , called GetFirstComponentInChildrenComplex() is available in GameObjectExtensions and MonoBehaviourExtensions , allowing for recursion limits. BoxColliderExtensions.ContainsPosition() as a quick method to determine if a world space position is inside of a BoxCollider . CapsuleColliderExtensions.Direction() to get a Vector3 based direction for a CapsuleCollider . RigidbodyExtensions.MomentOfInertia() for an inertia calculation based on axis. Mathematics.Smooth adds Exponential() smoothing functionality. Mathematics.Rotate adds Towards() calculations. Changed Generated documentation now includes private and internal classes. Lowered feature requirement of com.unity.jobs to 0.2.7 , and com.unity.burst to 1.0.0 . GDX.Developer assembly collapsed back into main GDX assembly. Modified settings framework to be in a single GDX category in the Project Settings window, with collapsable sections contained within. StringExtensions.GetLowerCaseHashCode() renamed to StringExtensions.GetStableLowerCaseHashCode() . StringExtensions.GetUpperCaseHashCode() renamed to StringExtensions.GetStableUpperCaseHashCode() . ByteExtensions.GetValueHashCode() renamed to ByteExtensions.GetStableHashCode() . Better package installation type detection and handling of upgrades. This has cut down the possibilities of automatic upgrades, however efforts will continue to expand on this functionality. [1.2.1] - 2021-01-24 \"Old Is New\" A DocFX generated site is now being stood up by our internal CI when a new commit is made to the main branch. Added A proper Getting Started section to the manual Changed Fixes to compilation of code requiring C# 8 using UNITY_2020_2_OR_NEWER preprocessor in IO.Compression.TarFile , StringExtensions and Editor.UpdateProvider . Removed Removed the Wiki links and entries on GitHub, favoring discussions and content additions to the documentation . [1.2.0] - 2021-01-20 \"Cisco's Birthday\" A bit of refactoring around BuildInfo to make it a little easier to work with and some small additions to functionality by request. Added Separation of checking folders and files path structure, new Platform.EnsureFileFolderHiearchyExists() just for files. The ability (by default) to encompass the BuildInfo output folder in an assembly definition. An ability from Project Settings to output a default BuildInfo file. AssemblyInfo to each assembly to support internal access during unit testing. Applied MethodImplOptions.AggressiveInlining to many methods. A bunch of split related functionality to StringExtensions . GetAfterFirst() GetAfterLast() GetBeforeFirst() GetBeforeLast() Vector2Extensions and Vector3Extensions with associated unit testing. Approximately() Midpoint() StringExtensions SplitCamelCase() to help with formatting of internal data. Encrypt() and Decrypt() for all your string hiding needs. Changed All classes/structs with unit testing will reference the class in a comments ListExtensions renamed to IListExtensions (as well as its unit test class) Removed feature highlight section from README.md . Dropped in some unsafe attributes to StringExtensions.HasLowerCase() and StringExtensions.HasUpperCase() in StringExtensions . Reorganized Project Settings sections to be alphabetically sorted. Platform.EnsureFolderHierarchyExists() 's argument to be labeled folderPath to provide further clarity of the functional intent. Combined Developer.Build.BuildInfoGenerator into Developer.Build.BuildInfoProvider . Renamed Editor.Build.BuildInfoGeneratorTests to Editor.Build.BuildInfoProviderTests Fixed issue with output folder structure was not present for BuildInfo generation. Renamed Editor.SettingsGUILayout to Editor.SettingsStyles , while exposing more internals for reuse. [1.1.2] - 2021-01-18 \"EditMode Enabled\" Fixes for author-time code accessing runtime only parts. Added Added more EditMode unit test coverage. Developer.Build.BuildInfoGeneratorTests Developer.CommandLineParserTests Changed Renamed Editor.Config to Editor.ConfigProvider Fixed a bug where author-time calls to GDXConfig.Get() would return a null as it is meant for runtime only, they will now route through an editor safe path. Moved all Tests to follow the test runner naming EditMode for editor runnable unit tests, namespaces included inside the assembly have been stripped down as well. Exposed ProcessArguments() in Developer.CommandLineParser to allow for manual arguments to be added. [1.1.1] - 2021-01-17 \"Let Us Build\" A minor problem came to light after pushing the button. Changed Developer.Build.BuildInfoGenerator will now forcibly tell the Developer.CommandLineParser to do its thing prior to filling out the file. [1.1.0] - 2021-01-17 \"Breaking Bad\" We are breaking some rules! This should have been a major release as we have altered method names to be consistent across the API. Added GDX assembly documentation contains remarks where a function or class requires the presence of Unity's CoreModule to function correctly. GDXConfig scriptable object self creates to store persistent project-wide configurations for both runtime and author-time, editable through Project Settings . InspectorLabelAttribute (and supporting Editor.InspectorLabelPropertyDrawer ) to facilitate a quick way of replacing a labels content in the inspector. IO.Compression.TarFile support for decompressing tarballs. SemanticVersion struct for assistance with versioning. StringExtensions gained HasLowerCase() and HasUpperCase() checks. Strings.Null is a constant null value string Editor.Config static utility class to help with GDXConfig at author-time. Editor.Settings to drive specific GDX assembly settings to show up in the Project Settings window. Editor.SettingsGUILayout to assist with creating a consistent feel for GDX settings. Editor.GDXConfigEditor enforces that a selected GDXConfig does not allow for inspector changes. Editor.UpdateProvider , Editor.PackageProvider to facilitate updating of GDX package from different installation sources. Editor.VersionControl static utility class to help with VCS operations. Unit test coverage for extension classes. ArrayExtensionsTests ListExtensionsTests SimpleListExtensionsTests Additional coverage was added to StringExtensionsTests to cover HasUpperCase() and HasLowerCase() methods. GDX.Developer a separate assembly with more developer specific functionality. Developer.CommandLineParser to provide a simple, yet configurable argument parser. Developer.Editor.Build.BuildInfoProvider to facilitate automated BuildInfo generation across different pipelines. Developer.Editor.Build.BuildInfoGenerator to generate content for the BuildInfo file. Developer.Editor.Settings to drive specific GDX.Developer assembly settings to show up in the Project Settings window. Changed Updated the README.md header with logo and badges. Added release names to CHANGELOG.md as well as removed namespace sub-lists, settling on having full names in description instead. Altered arrangement of LICENSE with the hopes of appeasing the GitHub overlords of license type detection. ArrayExtensions to be more specific Corrected documentation of Clear() Class based operations FirstIndexOfItem() and LastIndexOfItem() Struct based operations FirstIndexOfValue() and LastIndexOfValue() Correctly moved into GDX namespace. ByteExtensions to be more specific Renamed hashing method to GetValueHashCode() ListExtensions to be more specific. Class based operations AddUniqueItem() , ContainsItem() , RemoveItems() , RemoveFirstItem() and RemoveLastItem() .. Struct based operations AddUniqueValue() , ContainsValue() , RemoveValues() , RemoveFirstValue() and RemoveLastValue() . SimpleListExtensions to be more specific. Class based operations AddUncheckedUniqueItem() , AddWithExpandCheckUniqueItem() , ContainsItem() , RemoveItems() , RemoveFirstItem() and RemoveLastItem() . Struct based operations AddUncheckedUniqueValue() , AddWithExpandCheckUniqueValue() , ContainsValue() , RemoveValues() , RemoveFirstValue() and RemoveLastValue() . Moved Collections.Byte2 to Mathematics.Byte2 as it made more sense to alongside other similar types in Unity.Mathematics . Removed Removed unused static StringBuilder from Strings . [1.0.0] - 2021-01-03 \"The Beginning\" Initial release containing only the GDX core library. Added Numerous static extension based functionality classes. AddressablesExtensions ArrayExtensions ByteExtensions ListExtensions SimpleListExtensions StringExtensions Numerous static utility classes. Display Localization Memory Platform Strings Bit array structures. Collections.BitArray8 Collections.BitArray16 Collections.BitArray32 Collections.BitArray64 Collections.BitArray128 Collections.BitArray256 Collections.BitArray512 Byte vector Collections.Byte2 . Sparse index pool structures Collections.SparseSet and Collections.NativeSparseSet Collections.FreeList Revolving buffer Collections.Generic.CircularBuffer . List -like structure Collections.Generic.SimpleList . A few NativeArray based structures. Collections.Generic.NativeArray2D Collections.Generic.NativeSimpleList Collections.Generic.NativeSimpleQueue Collections.Generic.NativeUniformArray3D . Numerous int32 buffer operation jobs. Jobs.ParallelFor.IntegerBufferCopyJob Jobs.ParallelFor.IntegerBufferFillJob Jobs.ParallelFor.IntegerBufferSwapJob Deterministic random Mathematics.Random.MersenneTwister ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Game Development Extensions | GDX",
    "keywords": "Game Development Extensions Game Development Extensions, a battle-tested library of game-ready high-performance C# code."
  },
  "license.html": {
    "href": "license.html",
    "title": "License | GDX",
    "keywords": "License Boost Software License - Version 1.0 - August 17th, 2003 Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the \"Software\") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following: The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/contributing/automation.html": {
    "href": "manual/contributing/automation.html",
    "title": "Automation | GDX",
    "keywords": "Automation Every commit to the dev branch runs through a barrage of automated testing to validate the expected behaviour and quality of the code being written inside of a private TeamCity installation. The results of all of the ran tests / build configurations are published as they complete back to GitHub and are viewable via the little indicator next to a commit. Automated Tests All test that run inside of TeamCity are named in a very descriptive manner, GDX- Test - UnityVersion - Variant . GDX-GenerateProject The first set of automated tests triggered are used to ensure that any API usage does not cause any compilation issues against the different versions of Unity supported. They additionally also try different inclusions of packages to ensure the #ifdef are exercised; this is the empty/packages variant definition. The run ends with the generation of the projects solution files via GDX.Editor.Automation.GenerateProjectFiles which are stored as artifacts for future use. GDX-EditMode Next, assuming the previous test in the series has been successful, an associated GDX-EditMode test will run. These perform author-time unit testing (powered by UTR) validating expected outcomes from direct API usage calls. GDX-BVT Finally, assuming the previous test in the series has been successful, multiple builds will be made to run build verification tests. Currently Windows and macOS are covered at this point, with both Mono and IL2CPP backends being exercised. This works out to 8 builds per supported Unity version. Documentation In parallel to all of the automated testing, documentation is generated for the dev and gets posted to https://gdx-dev.dotbunny.com/ . Additionally, when a commit is made to the main branch, documentation is likewise generated and posted to https://gdx-dev.dotbunny.com/ . Some of the generated content which is more for developer reference can be found below. Artifact Description Code Coverage How much of the codebase is covered by unit testing? This is what drives the badge on the front page. Inspection The results from static analysis of the codebase, including violations of its predetermined style guide. Portability A quick series of tests to identify what versions of .NET is required for GDX to function fully."
  },
  "manual/contributing/bootstrap.html": {
    "href": "manual/contributing/bootstrap.html",
    "title": "Bootstrap | GDX",
    "keywords": "Bootstrap One less publicized part of the GDX initiative is the Bootstrap system we have in place for development outside of existing projects. Cloning this repository allows you to test and develop features in isolation quickly. Once cloned, on a Windows machine, all you need to do is run script-setup.bat and it will make the magic happen. Repository Layout Scripts script-setup.bat This will download GDX into each of the development projects and symlink the .editorconfig into the right spot for your IDE to pick it up when generating a project from Unity. script-docs.bat This will download the necessary components to build the documentation locally. Most people do not need this to work on the project. Templates Underneath this folder are empty Unity projects used to test what including the package at different versions does, it helps with compatibility testing mostly. Projects GDX_Development Located in Projects\\GDX_Development , this is the primary development project that should be used when contributing to the project. Unit tests can be ran from the Unity Editor and this project is used in Automation as well. The project includes a root menu item addition (of its namesake) to the Unity editor which allows build and BVT testing to be driven from the editor (on Windows). BVT The Build Vertification Test suite allows for tests to be run in builds and validated across numerous platforms. These are meant to run without any other dependencies and therefore appropriate for actual runtime deployment. The Bootstrap MonoBehaviour file drives this in our builds asynchronously. Demo This is where content lives that is used in our discovery videos about GDX . GDX_Entities This project has been rather dormant whilst we await a proper Entities 1.0 release cycle. It will change as things become publicly available."
  },
  "manual/contributing/coding-standard.html": {
    "href": "manual/contributing/coding-standard.html",
    "title": "Coding Standard | GDX",
    "keywords": "Coding Standard There is a general effort to follow the Framework Design Guidelines set forth by the .NET team. While we do not always precisely adhere to them, they serve as a guiding principle. .NET Coding Conventions is also a good point of reference from a conventions standpoint. We operate with a few pillars when we think about code: Expose everything — We dot not want anyone to ever find themself wishing something we had made was marked public not private. Garbage in, garbage out. — A developer should do their own data guarding to prevent exceptions. Structs over classes — It's easier to think about data optimizations this way. Embedded in the project is an EditorConfig , which significantly helps with some of the style guidelines as well as includes some carv-outs for use with ReSharper based inspection. Code Organization Code should be laid out with the future reader in mind. Public facing elements should be before private; we tend to alphabetically organize individual sections. Naming Convensions Just like every developer in history, the hardest part of our jobs is naming conventions. There are some basic conventions that we make use of that make naming ever so slightly easier. Suffix Description Extensions A reserved name for base classes in GDX which build upon a concept. Generator Something which produces consumable content. This varies in degree from things like file content to UI panels. Provider These are almost like service wrappers, where we use the word service lightly. Unit Testing We are trying to get as much coverage in tests as possible on the package to try and mitigate regressions. Please have a read of Unit Testing Best Practices . The anatomy of a test looks a little like: public void MethodName_TestDetails_ExpectedOutcome() { // ARRANGE: Build up the necessary environment to correctly test. // ... // ACT: Do the work that you want to test. // ... // ASSERT: Identify the exepected outcomes // ... } Static Analysis We strive to not add to the problem of noise in code inspection. We try our best to markup GDX code in a manner which will let code analyzers know specifically that we have made choices about the way something is written and that it is by design. We also understand that scenarios come up where the naming conventions need a little bit of breathing room. The following appears throughout the codebase to temporarily resolve warnings which should be muted in that case. #pragma warning disable IDE1006 // ReSharper disable once InconsistentNaming public string CLRVersion { get; set; } #pragma warning restore IDE1006 This is not an isolated instance, and more complex scenarios exist where multiple exclusions are needed. #pragma warning disable IDE0052, IDE0090 // ReSharper disable UnusedMember.Local, ArrangeObjectCreationWhenTypeEvident static readonly CoreSentinel k_DisposeSentinel = new CoreSentinel(); // ReSharper restore UnusedMember.Local, ArrangeObjectCreationWhenTypeEvident #pragma warning restore IDE0052, IDE0090 In each spot we try to craft a minimal set of exclusions that most static analysis will be able to understand. It is important to match pragma and ReSharper markup. Ignore Codes Here is a collection of linked pragma to ReSharper representations that appear throughout the GDX codebase. Compiler Warnings Code Resharper Description CS0168 ? The variable 'var' is declared but never used. CS0169 ? The private field 'class member' is never used. CS0414 ? The private field 'field' is assigned but its value is never used. CS0429 ? Unreachable expression code detected. CS0649 ? Field 'field' is never assigned to, and will always have its default value 'value'. Code Style Pragma Resharper Description IDE1006 InconsistentNaming Naming rule violation. IDE0051 ? Remove unused private member. IDE0052 UnusedMember.Local Remove unread private member. IDE0090 ArrangeObjectCreationWhenTypeEvident Simplify new expression. ? StringLiteralTypo Ignore typos in a string. ? CommentTypo Ignore typos in a comment. ? Unity.ExpensiveCode Ignore alerting about a specific Unity method being expensive. ? Unity.PerformanceCriticalCodeInvocation Ignore performance critical path notifications."
  },
  "manual/contributing/documentation.html": {
    "href": "manual/contributing/documentation.html",
    "title": "Assisting with Documentation | GDX",
    "keywords": "Assisting with Documentation Important A midlevel developer given GDX should be able to pick it up and use it effectively just by reading the inline documentation. A pretty ambitious goal; that should set the tone for what we are aiming to do when it comes to documentation. Development Workspace For internal development we have created a bootstrapped workspace which downloads a set of projects and will clone different repositories into specific locations. This is used by some of our core developers as well as our CI/CD. Local Generation The documentation is statically generated using the DocFx project file located at .docfx/docfx.json with the help of an additional tool Dox . By downloading and building Dox , anyone can build and host locally the documentation for GDX with the following command: Dox.exe --input <absolute path to gdx package folder> Note Some of the documentation is generated through automation in TeamCity and as such, in locally generated situations stubs will be present. Some images, particularily to do with code coverage will not appear correctly."
  },
  "manual/contributing/index.html": {
    "href": "manual/contributing/index.html",
    "title": "Contributing | GDX",
    "keywords": "Contributing Thank you for your interest in contributing to GDX! ❤️ While the GDX package has Unity employees amongst its contributors, it is not officially supported by Unity , and it is not on Unity's roadmap. Boostrap A secondary repository which allows for streamlined development of GDX outside of existing projects. This is used by automation as well to validate every commit. Automation An overview of the automation that is ran in TeamCity against all commits to GDX . Coding Standard We try and keep some semblance of order to the GDX codebase. Building on the shoulders of the .NET team. Assisting with Documentation We aim to put documentation first. If a developer fails to grasp why to utilize a feature or component in GDX , we have not done our job effectively. Creating good documentation is important; please help us!"
  },
  "manual/faq.html": {
    "href": "manual/faq.html",
    "title": "Frequently Asked Questions | GDX",
    "keywords": "Frequently Asked Questions What does this license mean? The big reason for switching to BSL-1.0 license is that you no longer need to include any notice in your distributed game about the inclusion of GDX . This is the clear difference with this new licensing model, compared to the MIT license, which requires notice in produced materials. Therefore, you can drop the code in your project and start working. The only ask is to leave the source files headers alone. You can even distribute the GDX source code this way, so long as those headers are left in place. Why are exceptions not protected against? Garbage in, garbage out — Branching inside methods to handle scenarios that should have been protected against hire up in the call stack adds overhead and tech debt. GDX wants no part in your architectural problem. Note There are some scenarios where exceptions are thrown to match existing expected behaviours. Why doesn't GDX have < insert feature here >? Let us reverse that question. Why haven't you added that feature to GDX ? In all honesty, we are a relatively small team of dedicated developers who have actual games/engines to make. Things get added ad-hoc as we find the time or need for them. We are always open to contributions and would encourage everyone to help their fellow game developer."
  },
  "manual/features/data-tables.html": {
    "href": "manual/features/data-tables.html",
    "title": "Data Tables | GDX",
    "keywords": "Data Tables A robust implementation of a data table type similar to Unreal Engines . It's every game designers dream come true! Note This feature heavily relies on Unity 2022.2 or newer functionality. The editing experience is disabled in older versions of Unity. The DataTableBase API is still valid for programmatic generation and manipulation. Column Types Type coverage is very much related to how and what Unity will be able to serialize inside the backing ScriptableObject . Out of the box, you can use: Values Structs Classes Special string , char , bool , sbyte , byte , short , ushort , int , uint , long , ulong , float , double Vector2 , Vector3 , Vector4 , Vector2Int , Vector3Int , Quaternion , Rect , RectInt , Color , LayerMask , Bounds , BoundsInt AnimationCurve , Gradient , Hash128 , Object EnumInt Usage of Object ( UnityEngine.Object ) and EnumInt types require additional information to be provided when creating a new column. A filter field will be visible when adding a column of these types asking for a fully qualified name of the desired type; this allows editing fields to isolate types. As you type a picker will appear with public results from Unity's TypeCache . Creating By default, a StableDataTable can be created from the Assets context menu or the application menu bar. Assets → Create → GDX → Stable Data Table This utilizes the CreateAssetMenu attribute on the DataTableBase implementations. If you create an implementation, you must add your own attribute. Inspector A surface-level display of information about the DataTableBase is made available via the inspector. Names of rows and columns are listed, including the type of column. Clicking the Open button will open an editing window focused on the selected DataTableBase . Interchange The DataTableBase allows for data-interchange between formats ( CSV & JSON out-of-the-box), export and non-destructive table data import. What this means in practice is that you can export an already-built table and make changes in whatever editing program a user desires. Those changes can then be re-imported back into Unity, maintaining existing references (an example being an object column referencing prefabs). Warning It is important to note that the column structure (order and types) cannot change in the imported data. The row identifiers will be used to match up rows, updating where appropriate, creating when necessary, and removing when no longer found. Excel / Google Sheets Yes, absolutely! However, you will need to do a bit of legwork to get there. When we ship GDX we try to think about a lean-and-mean approach. Adding the libraries necessary to interact with those types easily would add a certain level of bloat to the package. We have modelled our existing JSON and CSV formats to demonstrate how to build custom formats. class ExcelFormat : FormatBase { #if UNITY_EDITOR [UnityEditor.InitializeOnLoadMethod] #else [UnityEngine.RuntimeInitializeOnLoadMethod] #endif static void RegisterFormat() { // Ensure the format is registered for usage DataBindingProvider.RegisterFormat(new ExcelFormat()); } // Fill out other overrides ... public override SerializableTable Pull(string uri, ulong currentDataVersion, int currentStructuralVersion) { // Open excel file with OpenXML SDK // Read cells and put into new } public override bool Push(string uri, SerializableTable serializableTable) { // Open excel file with OpenXML SDK // Iterate through simplified table data and put into cells } } Tracker Table information is tracked in the editor via a reference counting mechanism. This information is helpful for developers to identify leaking references that were expected to be removed. This information is updated manually every time the inspector is drawn. While some table-driven events trigger a redraw, this number sometimes needs to be refreshed. The Refresh button at the top of the inspector will update the numbers. Table Window Bringing a spreadsheet-like editing experience to DataTables, this window allows for a designer or developer to quickly work on the structure or data of a DataTable in a familiar and expected experience. A unique-to-asset window will appear by double-clicking a DataTable asset or clicking the Open button while inspecting it. [!INFO] A lock icon may be on the toolbar's right side indicating that the Data Table has been put in * References Only mode, allowing for editing of only Unity-specific references. Shortcuts Some default shortcuts are bound to the Table Window, modelled after existing expected behaviours. Command Shortcut Add Row Ctrl + = Add Column Ctrl + Shift + - Add Row (Default) Ctrl + Shift + = Remove Selected Rows (Quick) Shift + Del Remove Selected Row Del Tip Shortcuts can be changed in Unity's Shortcut manager, available in the Edit menu. Sorting & Ordering Clicking on the column headers allows for sorting the rows (ascending/descending); holding CTRL while clicking a column header will allow for multi-levels of sorting to occur. You can also manually click and drag rows up and down to reorder them. This ordering information is virtually managed at this stage and does not get committed to the Data Table without user direction. Table Menu The first item in the menu bar covers table-specific operations and includes some of the functionality found in the individual inspectors (interchange operations, for example). Write To Disk A DataTable is backed by a ScriptableObject; changes reside in memory until they are committed to disk by saving the project and/or asset. This option will execute a SaveAssetIfDirty on the backing object writing the contents to disk. Tip This option will only be available when changes are detected to the currently opened DataTable. Settings Data Tables have settings which outline the behaviour of the table as well as some nice-to-have features. The Display Name is a user-friendly name shown throughout the editor for this table. The undo functionality is disabled by default, as it can be rather costly to execute across large datasets and is only available in Unity 2022.2 and newer. Columns Menu The general Columns menu gives minimal actions that can be taken without specifically selecting a column. Adding a new column, for example, is done from this menu. The Resize To Fit action will ensure that the displayed table fills the window's horizontal space without requiring scrolling. Column-specific actions are accessed by right-clicking a column header. Rows Menu Action Description Add Presents a dialogue to add a row to the Data Table, asking for a user-friendly name for the row before proceeding. Add (Default) Adds a row to the Data Table with a default randomly generated name. Rename Selected Renaming the selected row will update the row's internal user-friendly name stored in the Data Table. Remove Selected Deletes the selected row, plain and simple. Commit Order Alters the internal ordering of rows in the Data Table to match the current order of rows in the Table Window. Reset Order Clears the virtual sorting information and restores the order in the Data Table. Context Menu Currently, only the column headers have a context menu allowing the user to perform specific operations on that column. Rename Renaming the column will update the column's internal user-friendly name stored in the Data Table. Remove The name is self-explanatory; however, as a precaution, this will request confirmation that you want to remove the column. Ensure that the name matches the column you intended to remove. Move Left / Right While the order of rows in the table window is virtual (until committed), the order of columns is bound to the internal data table. These options will alter the column order one increment at a time. Referencing Cells One of the design pillars for the DataTable feature was ensuring the data consumption was intuitive, both from a designer's standpoint and a developer's. A developer can create a cache-friendly reference to a cell by type: public FloatCellValue BaseHealth; void Awake() { // Check data version and fill Health = BaseHealth.Get(); } void OnRespawn() { // Reset without checking data version Health = BaseHealth.GetUnsafe(); } Then in the object's inspector, an easy-to-use property drawer is created. When unset, the user is presented with a dropdown of all available tables in the project to select from. A new dropdown is generated with the row names to choose from upon selecting a table. After selecting a row, the type-specific columns of data appear for selection. After all that, the selected data is presented in a locked field. By default, values are locked from editing in this view. Clicking the lock icon will allow editing the data in the table directly. When Unity serializes this object, only the connection information is serialized. Tip Clicking the link icon at any time will break all connection information. All *CellValue structs have Get() and GetUnsafe() methods which return the value stored in the linked Data Table. The safer Get() method checks the cached DataTable version number, updating the locally cached value before returning the cached value. The GetUnsafe() method returns the cached value without any checks; thus it is required that the first time a value is accessd, the Get() method is used. Undo Support In the DataTable settings, there is a toggle to turn on the Undo/Redo feature in Unity for a specific table. This will allow Unity's internal serialization system to move back and forth between changes made to the DataTable. However, this has a performance cost as the data serializes with each registered state. Warning This is very experimental as a feature; use it at your own risk."
  },
  "manual/features/index.html": {
    "href": "manual/features/index.html",
    "title": "Features | GDX",
    "keywords": "Features Over time GDX has grown into a robust set of functionality; with that comes the much larger problem of discoverability. There are too many things to cover in a list on this page ( hence we removed it ). We are working on this problem by building key feature sub-pages to highlight functionality; thus, this page only encompasses part of the package. Tip For a more thorough list of functionality, explore the API documentation directly. Looking at the GDX runtime namespace, we can extract highlights from each area to get you thinking. Not going to dive into the authoring namespace; for now. GDX The root of all evil awesomeness? Numerous extension classes live at the core, matching and extending Unity's types. We also have a standard set of utilities that live here as well. Highlight Description ArrayExtensions A bunch of Array operations which are commonly used by other methods. For example getting the last or first index of an item or value in an Array . EnumExtensions Useful functionality around Flags IList A common set of methods for IList implementing collections allowing for optimized value and item checks, as well as some extras. PlayerLoopSystemExtensions A helpful set of tools for manipulating Unity's PlayerLoop . Reflection It makes reflection a little less painful to utilize; it still has the same performance problems. String A vast collection of extension methods covering a wide range from encryption to hash codes, to simply finding content an existing string . GDX.Collections We've found that the collections that ship with Unity and .Net don't live up to our desired performance characteristics. GDX provides various collection types to meet the performance criteria needs of demanding environments. Warning It is important to note that many structures backing data, indices, counts, etc., are publicly accessible for advanced usage. Change at runtime at your own risk. Highlight Description FreeList An array where indices are allocated from and stored in an in-place linked list. IntKeyDictionary An optimzed Dictionary<int, T> replacement. SerializableDictionary A dictionary that can be serialized by Unity into its native YAML format. Usage of the editor side property drawer requires Unity 2020.1+ . SimpleList An optimized List replacement. StringKeyDictionary An optimzed Dictionary<string, T> replacement. SparseSet An adapter collection for external data arrays that allows constant-time insertion, deletion, and lookup by handle, as well as array-like iteration. GDX.DataTables A game designer's dream comes true for Unity, plain and simple. We've built an extensive system allowing an expected workflow to fit in with the traditional Unity development pipeline. While we don't ship directly with a Microsoft Excel or Google Sheets integration, the format framework is extensible and can easily have any data source. Note We are looking into ways to ship Excel support out of the box, but you have to create the new Format for now ( hint: use OpenXML ). GDX.Developer A toolbox of various functionality that developers tend to rely on while making a game but should not show up in a gold master build; however often does. Highlight Description InputProxy A way to simulate hardware input on windows based machines, think automated testing. ResourceAuditReport A reporting mechanism for outputting managed objects at runtime as well as differences between captures. TextGenerator A text file generator allowing for easy formatting and unwinding. GDX.Experimental While the purpose of GDX is to provide battle-tested code to developers, this section of the namespace can be considered the battleground where that happens with games in development. Often we work alongside other developers to create new features for GDX ; this is where they live and get tested. The API is bound to change, and there are bound to be bugs, yet there is nothing but glory for the adventuresome contributors. Highlight Description DebugDraw A state-based optimized line drawing solution for debugging information at authoring and runtime. ManagedLog A managed-only categorized hierarchical logging solution. GDX.IO Not the most glorious chunks of code, we fill a gap of some commonly expected operations with different file streams or, more importantly, what to do with massive files. GDX.Jobs We have found a small but mighty group of jobs we repeatedly reuse when building out systems in Unity. While small, they are still titans in their ways. GDX.Mathematics A series of helper functionality used throughout GDX itself. They are excellent standalone additions when it comes to everyday math operations. Nothing glorious; they provide solutions to repetitively created functions. Highlight Description WELL1024a A deterministic random number generator. GDX.Rendering Just ignore this one; honestly, it's got nothing of value outside of a tiny bit of functionality we rely on for other parts of the package. What? We're telling you the truth. GDX.Threading Optimizing for concurrency and utilization is complex; GDX provides some exciting systems to move stuff off of the main thread while respecting Unity's main-thread operation. It took a while to bring some of this functionality to GDX; however, it played a heavy role in the initial reasoning for creating GDX as we kept having to make similar systems for numerous titles. Highlight Description TaskDirector Off-thread task management system with main-thread execution hooks. WaitFor Execution flow management waiting paradigm. WaitWhile Execution flow management while paradigm."
  },
  "manual/features/serializable-dictionary.html": {
    "href": "manual/features/serializable-dictionary.html",
    "title": "Serializable Dictionary | GDX",
    "keywords": "Serializable Dictionary A New Beginning A typical piece of feedback we've heard repeatedly is that Unity needs to have a Dictionary collection capable of being serialized. With the introduction of template-based property drawers in Unity 2020.1 , the final piece to solving that puzzle landed. While the core functionality backing the SerializableDictionary is compatible across all supported versions of Unity. The real power comes from the freshly acquired property drawer features. Warning Unity's internal serializer cannot serialize System.Object , objects must inherit from UnityEngine.Object instead. Familiar Workflow One of the pillars of design for the SerializableDictionary was making sure that its workflow in editor kept in line with Unity's OrderedList inspector, with some obvious contextual tweaks. The left side contains the entry's key, with its value being listed directly beside it. Clicking on that row selects it, making the subtraction ( - ) button on the right available. Note The addition button ( + ) only becomes available when a valid and unique key is provided. The ability to edit the number of elements in the collection is disabled due to the difficulty of predetermining valid keys for various types effectively. Code Example using GDX.Collections.Generic; public class SerializableDictionaryExamples { // An integer keyed collection of strings public SerializableDictionary<int, string> IntegerStringKVP = new SerializableDictionary<int, string>(); // A string keyed collection of GameObjects (works with Prefabs!) public SerializableDictionary<string, GameObject> StringGameObjectKVP = new SerializableDictionary<string, GameObject>(); }"
  },
  "manual/getting-started/index.html": {
    "href": "manual/getting-started/index.html",
    "title": "Getting Started | GDX",
    "keywords": "Getting Started Installation There are many options to getting GDX into your project; each comes with its benefits and drawbacks. Unity Package Manager Installing via the package manager system (UPM) in Unity will provide an immutable (unable to be modified) copy of the package inside of your project. Tip There are two available UPM methods. You only need to pick one ! UPM: Package Manager Window The simplest and most straight forward method is to use Unity's built in workflow, once you have found and opened the Package Manager window ( Window > Package Manager ), follow these steps: Find the + button in the upper left portion of the Package Manager window, clicking it should reveal a dropdown menu. Select Add package from git URL... In the presented text field, enter: https://github.com/dotBunny/GDX.git After entering the URL, click Add . UPM: Package Manifest The above workflow provides a user interface for your project's manifest.json file. Alternatively, you can enter the necessary line into that file manually by opening Packages/manifest.json in a text editor and adding the dependency your self: { \"dependencies\": { \"com.dotbunny.gdx\": \"https://github.com/dotBunny/GDX.git\", } } Note You can also include branches or releases with this method by appending #branch to the end of the definition. Check out Unity's UPM page for more details. Asset Store Note Discussions to bring the package to the Asset Store are ongoing, we are looking to do this in the near future. OpenUPM The GDX package is registered with OpenUPM , and releases are automatically reflected in that registry. The package is registered as com.dotbunny.gdx . For detailed instructions on how to use the OpenUPM system and it's limitations, please consult their \" Installing a UPM package \" documentation. Cloned Repository It is possible for the repository to be cloned into a sub-folder in your project's Assets folder. This option makes it easy to modify GDX to your liking, as well as access additional in-development branches. git clone https://github.com/dotBunny/GDX.git This method is how typical development is done on GDX , however in the dev branch. Project Settings Upon installation, GDX should work out of the box. Further configuration of GDX is done by opening the Project Settings window ( Edit > Project Settings... ), and selecting the GDX section. You will be presented with a view similar to the image below, with numerous configuration options sorted by feature. Each feature has a collapsable section ( A ) that is expandable and collapsable by clicking the + / - buttons to the header's left. Features dynamically activate based on the Unity version and packages found in the project ( B ). A section header's background can inform you of the status of the feature. A green background indicates that the feature is active, where a yellow background means that it is currently disabled. Not all features are enabled by default and require an opt-in ( C ). A blue background indicates an always-on feature, most commonly just functionality that has some level of configuration. Persitent Storage Project-specific configuration values are stored in .\\Generated\\GDX.generated.cs (configurable) using an override pattern which automagically updates the Config when the Core statically initializes. Note This process works with DOTS_RUNTIME builds, however there is an additional need to call GDX.Core.InitializeOnMainThread() for thread specific initialization."
  },
  "manual/getting-started/visual-scripting.html": {
    "href": "manual/getting-started/visual-scripting.html",
    "title": "Visual Scripting Support | GDX",
    "keywords": "Visual Scripting Support Warning There is an inherent inefficiency in utilizing visual scripting; in most cases, hand-crafted code will outperform generated code. While GDX operates on the principle of performance first, this does not preclude the idea of providing performant nodes for visual scripting graphs. Adding GDX To Visual Scripting An assembly and its types need to be added to the unit list configuration of Visual Scripting to be usable. By default, this is a manual process available in the Visual Scripting section of the Project Settings . To speed this process up a bit and generally create a much nicer workflow, GDX provides a shortcutted workflow. A curated selection of functionality for Visual Scripting is available by clicking category checkboxes ( A ), and then clicking the Regenerate Units button ( B ). This button replicates the same functionality available in the Visual Scripting section of the Project Settings . The Install Docs button copies over a simplified version of XML documentation into a specific folder in your project so that Visual Scripting will have documentation for GDX based units. Toggling the dropdown arrows ( C ) will display a list of the types added by this category; clicking on a type will open its documentation."
  },
  "manual/policy/code-of-conduct.html": {
    "href": "manual/policy/code-of-conduct.html",
    "title": "Contributor Covenant Code of Conduct | GDX",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at support@dotbunny.com . All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4."
  },
  "manual/policy/index.html": {
    "href": "manual/policy/index.html",
    "title": "Policies | GDX",
    "keywords": "Policies Code of Conduct GitHub generated a nice and concise code of conduct agreement for the project. Let us be very explicit: don't be an asshole . Good and bad days happen, but the goal is to move forward together. Security Our commitments to security related maintainence and updates."
  },
  "manual/policy/security.html": {
    "href": "manual/policy/security.html",
    "title": "Security Policy | GDX",
    "keywords": "Security Policy Supported Versions In the unlikely situation where GDX is found to contain a security vulnerability, updates will be issued within 48 hours of the first point of notification and validation, in accordance to the supported version chart below. Version Supported 4.0.x ✅ 3.0.x ✅ 2.0.x ❌ 1.3.x ❌ 1.2.x ❌ 1.1.x ❌ 1.0.x ❌ Reporting a Vulnerability If you suspect a vulnerability caused by GDX , please contact support@dotbunny.com directly with as much detail as possible. We will follow up within 48 hours. If the suspected issue is proven to be a vulnerability, an anonymized security advisory notice will be posted publicly along with side updates to the package."
  },
  "manual/requirements.html": {
    "href": "manual/requirements.html",
    "title": "Requirements | GDX",
    "keywords": "Requirements The GDX package can be dropped into any compatible Unity project and selectively enables portions of its functionality based on what packages it finds in the project. GDX accomplishes this feat by utilizing a preprocessor setup that places functionality behind gated conditionals set by the assembly definition. Unity Versions The suggested minimum Unity version for using GDX is Unity 2022.2 ; internal development is done on 2022.3 . Compatibility is automatically tested against Unity's L ong T erm S upport releases 2020.3 , 2021.3 and 2022.3 , as well as the current 2023.2 release. While we do our best to support features across all versions of Unity, there are cases where we are unable to support older legacy LTS versions of Unity. GDX utilizes assembly definition version defines to gate feature sets and employs specific coding patterns that may not be available in previous versions of Unity. Supported Packages We try to make sure we are compatible with the latest verified release of a package across all supported versions of Unity where possible. Define Package Minimum Unity Version Minimum Package Version GDX_ADDRESSABLES com.unity.addressables n/a 1.18.19 GDX_BURST com.unity.burst n/a 1.6.4 GDX_MATHEMATICS com.unity.mathematics n/a 1.2.5 GDX_PLATFORMS com.unity.platforms n/a 0.9.0 GDX_VISUALSCRIPTING com.unity.visual-scripting 2021.1 1.5.2 GDX_COLLECTIONS com.unity.collections n/a 1.2.3 Note It is essential to remember that the GDX_* defines are only valid inside the GDX assembly, see Conditionals if you wish to access some semblance outside of GDX . Portability Automation continually checks the portability of the code used in GDX to ensure the compatibility across various platforms generating a report ."
  },
  "reports/coverage/Report/Summary.html": {
    "href": "reports/coverage/Report/Summary.html",
    "title": "Summary | GDX",
    "keywords": "Summary Generated on: 2023-11-30 - 8:38:30 PM Parser: MultiReportParser (689x OpenCoverParser) Assemblies: 1 Classes: 213 Files: 209 Covered lines: 7685 Uncovered lines: 7392 Coverable lines: 15077 Total lines: 37476 Line coverage: 50.9% (7685 of 15077) Covered branches: 0 Total branches: 0 Covered methods: 801 Total methods: 1676 Method coverage: 47.7% (801 of 1676) Name Covered Uncovered Coverable Total Line coverage Covered Total Branch coverage Covered Total Method coverage GDX 7685 7392 15077 42444 50.9% 0 0 **** 801 1676 47.7% GDX.AddressablesExtensions 0 33 33 114 0% 0 0 0 5 0% GDX.ArrayExtensions 73 20 93 230 78.4% 0 0 8 10 80% GDX.BoxColliderExtensions 0 8 8 40 0% 0 0 0 1 0% GDX.ByteExtensions 34 0 34 77 100% 0 0 2 2 100% GDX.CameraExtensions 0 23 23 82 0% 0 0 0 2 0% GDX.CapsuleColliderExtensions 0 21 21 73 0% 0 0 0 2 0% GDX.Collections.ArrayHolder[T] 1 0 1 20 100% 0 0 1 1 100% GDX.Collections.BitArray128 0 15 15 78 0% 0 0 0 2 0% GDX.Collections.BitArray16 7 6 13 63 53.8% 0 0 2 3 66.6% GDX.Collections.BitArray256 0 18 18 107 0% 0 0 0 2 0% GDX.Collections.BitArray32 0 13 13 63 0% 0 0 0 3 0% GDX.Collections.BitArray512 0 18 18 155 0% 0 0 0 2 0% GDX.Collections.BitArray64 0 8 8 57 0% 0 0 0 3 0% GDX.Collections.BitArray8 10 3 13 63 76.9% 0 0 2 3 66.6% GDX.Collections.DisposeUnsafeSparseSetAndVersionArrayJob 0 4 4 1242 0% 0 0 0 1 0% GDX.Collections.DisposeUnsafeSparseSetJob 0 3 3 1242 0% 0 0 0 1 0% GDX.Collections.DisposeUnsafeVersionArrayJob 0 3 3 1242 0% 0 0 0 1 0% GDX.Collections.FreeList 79 0 79 174 100% 0 0 7 7 100% GDX.Collections.Generic.Array2D[T] 101 8 109 264 92.6% 0 0 12 14 85.7% GDX.Collections.Generic.Array2DExtensions 23 0 23 53 100% 0 0 1 1 100% GDX.Collections.Generic.Array3D[T] 18 6 24 119 75% 0 0 6 8 75% GDX.Collections.Generic.CircularBuffer[T] 84 49 133 311 63.1% 0 0 14 15 93.3% GDX.Collections.Generic.CoalesceArray[T] 0 77 77 156 0% 0 0 0 9 0% GDX.Collections.Generic.ConcurrentCircularBuffer[T] 29 126 155 341 18.7% 0 0 4 15 26.6% GDX.Collections.Generic.DictionaryPrimes 36 5 41 115 87.8% 0 0 5 6 83.3% GDX.Collections.Generic.ExpandingArray[T] 0 58 58 102 0% 0 0 0 13 0% GDX.Collections.Generic.IListExtensions 67 17 84 221 79.7% 0 0 7 9 77.7% GDX.Collections.Generic.IntKeyDictionary[TValue] 350 27 377 667 92.8% 0 0 19 19 100% GDX.Collections.Generic.NativeArray2D[T] 0 71 71 190 0% 0 0 0 9 0% GDX.Collections.Generic.NativeArray3D[T] 23 5 28 130 82.1% 0 0 7 8 87.5% GDX.Collections.Generic.NativeUniformArray3D[T] 12 11 23 111 52.1% 0 0 3 7 42.8% GDX.Collections.Generic.SerializableDictionary[TKey,TValue] 45 18 63 203 71.4% 0 0 6 8 75% GDX.Collections.Generic.SimpleList[T] 308 7 315 580 97.7% 0 0 27 28 96.4% GDX.Collections.Generic.SimpleListExtensions 157 62 219 572 71.6% 0 0 15 21 71.4% GDX.Collections.Generic.StringKeyDictionary[TValue] 319 102 421 726 75.7% 0 0 16 19 84.2% GDX.Collections.Generic.UniformArray3D[T] 7 18 25 117 28% 0 0 2 8 25% GDX.Collections.NativeArraySparseSet 477 2 479 965 99.5% 0 0 29 29 100% GDX.Collections.Pooling.ArrayPool[T] 57 0 57 120 100% 0 0 3 3 100% GDX.Collections.Pooling.GameObjectPool 175 37 212 629 82.5% 0 0 15 15 100% GDX.Collections.Pooling.ManagedPoolBuilder 22 40 62 164 35.4% 0 0 3 5 60% GDX.Collections.Pooling.ManagedPools 28 50 78 222 35.8% 0 0 6 12 50% GDX.Collections.Pooling.SimpleListManagedPool 81 105 186 433 43.5% 0 0 7 14 50% GDX.Collections.SparseSet 1001 59 1060 1838 94.4% 0 0 49 51 96% GDX.Collections.UnsafeSparseSet 558 49 607 1242 91.9% 0 0 32 37 86.4% GDX.Collections.UnsafeSparseSetDebugView 0 12 12 1242 0% 0 0 0 2 0% GDX.Config 24 0 24 187 100% 0 0 1 1 100% GDX.Core 24 3 27 157 88.8% 0 0 3 4 75% GDX.DataTables.CellValues.AnimationCurveCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.BoolCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.BoundsCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.BoundsIntCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.ByteCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.CharCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.ColorCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.DoubleCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.EnumIntCellValue 0 40 40 151 0% 0 0 0 7 0% GDX.DataTables.CellValues.FloatCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.GradientCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.Hash128CellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.IntCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.LayerMaskCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.LongCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.ObjectCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.QuaternionCellValue 0 38 38 148 0% 0 0 0 8 0% GDX.DataTables.CellValues.RectCellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.RectIntCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.SByteCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.ShortCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.StringCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.UIntCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.ULongCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.UShortCellValue 0 32 32 125 0% 0 0 0 6 0% GDX.DataTables.CellValues.Vector2CellValue 0 32 32 126 0% 0 0 0 6 0% GDX.DataTables.CellValues.Vector2IntCellValue 0 32 32 127 0% 0 0 0 6 0% GDX.DataTables.CellValues.Vector3CellValue 0 32 32 127 0% 0 0 0 6 0% GDX.DataTables.CellValues.Vector3IntCellValue 0 32 32 127 0% 0 0 0 6 0% GDX.DataTables.CellValues.Vector4CellValue 0 32 32 127 0% 0 0 0 6 0% GDX.DataTables.ColumnDescription 0 3 3 41 0% 0 0 0 1 0% GDX.DataTables.ColumnSorters.BoolColumnSorter 0 14 14 37 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.ColumnSorterBase 0 22 22 51 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.DoubleColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.EnumIntColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.FloatColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.IntColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.LongColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.RowNameColumnSorter 0 8 8 26 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.StringColumnSorter 0 8 8 26 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.UIntColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.ColumnSorters.ULongColumnSorter 0 11 11 32 0% 0 0 0 2 0% GDX.DataTables.DataBinding.DataBindingProvider 12 63 75 148 16% 0 0 3 10 30% GDX.DataTables.DataBinding.Formats.CommaSeperatedValueFormat 10 136 146 278 6.8% 0 0 3 15 20% GDX.DataTables.DataBinding.Formats.JavaScriptObjectNotationFormat 10 31 41 94 24.3% 0 0 3 11 27.2% GDX.DataTables.DataBinding.SerializableRow 0 5 5 45 0% 0 0 0 1 0% GDX.DataTables.DataBinding.SerializableTable 0 88 88 188 0% 0 0 0 3 0% GDX.DataTables.DataTableBase 4 14 18 791 22.2% 0 0 1 1 100% GDX.DataTables.DataTableExtensions 0 155 155 339 0% 0 0 0 4 0% GDX.DataTables.DataTableMetaData 4 25 29 109 13.7% 0 0 2 5 40% GDX.DataTables.RowDescription 0 3 3 36 0% 0 0 0 1 0% GDX.DataTables.StableDataTable 574 680 1254 2053 45.7% 0 0 112 169 66.2% GDX.Developer.BooleanWatch 0 18 18 56 0% 0 0 0 2 0% GDX.Developer.CommandLineParser 39 0 39 88 100% 0 0 2 2 100% GDX.Developer.Console 47 177 224 359 20.9% 0 0 4 25 16% GDX.Developer.ConsoleAutoCompleteProvider 0 61 61 108 0% 0 0 0 3 0% GDX.Developer.ConsoleCommandBase 1 15 16 69 6.2% 0 0 1 6 16.6% GDX.Developer.ConsoleCommands.BuildVerificationTestConsoleCommand 3 50 53 131 5.6% 0 0 1 5 20% GDX.Developer.ConsoleCommands.ConsoleVariablesConsoleCommand 3 23 26 51 11.5% 0 0 1 3 33.3% GDX.Developer.ConsoleCommands.ExecConsoleCommand 3 55 58 109 5.1% 0 0 1 5 20% GDX.Developer.ConsoleCommands.GarbageCollectionConsoleCommand 3 10 13 36 23% 0 0 1 4 25% GDX.Developer.ConsoleCommands.HelpConsoleCommand 3 31 34 65 8.8% 0 0 1 4 25% GDX.Developer.ConsoleCommands.HideConsoleCommand 3 10 13 40 23% 0 0 1 4 25% GDX.Developer.ConsoleCommands.InputKeyPressConsoleCommand 3 21 24 60 12.5% 0 0 1 6 16.6% GDX.Developer.ConsoleCommands.PlayerLoopConsoleCommand 3 13 16 42 18.7% 0 0 1 4 25% GDX.Developer.ConsoleCommands.QuitConsoleCommand 3 20 23 63 13% 0 0 1 5 20% GDX.Developer.ConsoleCommands.SceneListConsoleCommand 3 17 20 44 15% 0 0 1 3 33.3% GDX.Developer.ConsoleCommands.SceneLoadConsoleCommand 3 77 80 145 3.7% 0 0 1 6 16.6% GDX.Developer.ConsoleCommands.SceneWaitConsoleCommand 3 6 9 29 33.3% 0 0 1 3 33.3% GDX.Developer.ConsoleCommands.ScreenCaptureConsoleCommand 4 27 31 77 12.9% 0 0 2 7 28.5% GDX.Developer.ConsoleCommands.ShowConsoleCommand 3 10 13 40 23% 0 0 1 4 25% GDX.Developer.ConsoleCommands.VersionConsoleCommand 3 10 13 37 23% 0 0 1 4 25% GDX.Developer.ConsoleCommands.WaitConsoleCommand 3 16 19 47 15.7% 0 0 1 5 20% GDX.Developer.ConsoleCommands.WatchConsoleCommand 3 31 34 76 8.8% 0 0 1 5 20% GDX.Developer.ConsoleCommands.WatchListConsoleCommand 4 33 37 70 10.8% 0 0 2 6 33.3% GDX.Developer.ConsoleLog 14 65 79 142 17.7% 0 0 4 21 19% GDX.Developer.ConsoleLogEntry 7 18 25 59 28% 0 0 1 3 33.3% GDX.Developer.ConsoleVariableBase 0 24 24 80 0% 0 0 0 6 0% GDX.Developer.ConsoleVariables.BooleanConsoleVariable 0 40 40 82 0% 0 0 0 8 0% GDX.Developer.ConsoleVariables.FloatConsoleVariable 0 42 42 84 0% 0 0 0 8 0% GDX.Developer.ConsoleVariables.IntegerConsoleVariable 0 42 42 83 0% 0 0 0 8 0% GDX.Developer.ConsoleVariables.StringConsoleVariable 0 28 28 66 0% 0 0 0 8 0% GDX.Developer.ConsoleVariableSettings 10 56 66 108 15.1% 0 0 3 5 60% GDX.Developer.FloatChartWatch 0 80 80 138 0% 0 0 0 3 0% GDX.Developer.FloatRangeWatch 0 27 27 59 0% 0 0 0 2 0% GDX.Developer.InputProxy 0 219 219 723 0% 0 0 0 18 0% GDX.Developer.IntegerChartWatch 0 78 78 134 0% 0 0 0 3 0% GDX.Developer.IntegerRangeWatch 0 27 27 57 0% 0 0 0 2 0% GDX.Developer.ManagedUpdateSystem 0 147 147 294 0% 0 0 0 25 0% GDX.Developer.Profiling 0 50 50 145 0% 0 0 0 3 0% GDX.Developer.Reports.BuildVerification.SimpleTestBehaviour 0 40 40 88 0% 0 0 0 6 0% GDX.Developer.Reports.BuildVerification.TestRunner 0 122 122 188 0% 0 0 0 7 0% GDX.Developer.Reports.BuildVerification.TestScene 0 10 10 32 0% 0 0 0 2 0% GDX.Developer.Reports.BuildVerificationReport 0 35 35 58 0% 0 0 0 6 0% GDX.Developer.Reports.NUnitReport 149 49 198 297 75.2% 0 0 15 17 88.2% GDX.Developer.Reports.Resource.IntegerDiff 23 13 36 81 63.8% 0 0 4 4 100% GDX.Developer.Reports.Resource.LongDiff 34 5 39 89 87.1% 0 0 4 4 100% GDX.Developer.Reports.Resource.Objects.AssetBundleObjectInfo 9 3 12 52 75% 0 0 2 3 66.6% GDX.Developer.Reports.Resource.Objects.MeshObjectInfo 11 3 14 61 78.5% 0 0 2 3 66.6% GDX.Developer.Reports.Resource.Objects.ObjectInfo 42 8 50 168 84% 0 0 4 5 80% GDX.Developer.Reports.Resource.Objects.ObjectInfoFactory 5 25 30 76 16.6% 0 0 1 2 50% GDX.Developer.Reports.Resource.Objects.ShaderObjectInfo 9 3 12 55 75% 0 0 2 3 66.6% GDX.Developer.Reports.Resource.Objects.TextureObjectInfo 20 6 26 77 76.9% 0 0 2 3 66.6% GDX.Developer.Reports.Resource.ResourceReport 49 11 60 152 81.6% 0 0 8 9 88.8% GDX.Developer.Reports.Resource.ResourceReportContext 11 0 11 40 100% 0 0 1 1 100% GDX.Developer.Reports.Resource.Sections.ApplicationSection 13 0 13 57 100% 0 0 3 3 100% GDX.Developer.Reports.Resource.Sections.MemoryDiffSection 22 0 22 61 100% 0 0 3 3 100% GDX.Developer.Reports.Resource.Sections.MemorySection 22 0 22 87 100% 0 0 3 3 100% GDX.Developer.Reports.ResourcesAuditReport 115 27 142 384 80.9% 0 0 8 10 80% GDX.Developer.Reports.ResourcesDiffReport 130 14 144 233 90.2% 0 0 3 3 100% GDX.Developer.RuntimeConsoleController 0 202 202 365 0% 0 0 0 26 0% GDX.Developer.RuntimeWatchController 0 63 63 116 0% 0 0 0 10 0% GDX.Developer.SemanticVersion 86 0 86 243 100% 0 0 11 11 100% GDX.Developer.SimpleWatch 10 9 19 55 52.6% 0 0 1 2 50% GDX.Developer.TextGenerator 59 0 59 163 100% 0 0 10 10 100% GDX.Developer.TransientReference 42 21 63 185 66.6% 0 0 10 12 83.3% GDX.Developer.WatchBase 13 62 75 138 17.3% 0 0 5 13 38.4% GDX.Developer.WatchProvider 23 101 124 192 18.5% 0 0 3 13 23% GDX.Developer.WatchSettings 20 44 64 107 31.2% 0 0 4 5 80% GDX.Display 0 12 12 85 0% 0 0 0 4 0% GDX.EnumExtensions 14 0 14 54 100% 0 0 2 2 100% GDX.Experimental.DebugDraw 15 0 15 96 100% 0 0 4 4 100% GDX.Experimental.DebugDrawBuffer 24 252 276 734 8.6% 0 0 2 33 6% GDX.Experimental.DebugDrawShapes 0 197 197 370 0% 0 0 0 12 0% GDX.GameObjectExtensions 0 18 18 121 0% 0 0 0 2 0% GDX.IO.CoalesceStream 47 79 126 317 37.3% 0 0 11 19 57.8% GDX.IO.Compression.TarFile 0 63 63 133 0% 0 0 0 2 0% GDX.Jobs.ParallelFor.Color32CompareJob 0 13 13 54 0% 0 0 0 1 0% GDX.Jobs.ParallelFor.Color32MatchJob 0 9 9 54 0% 0 0 0 1 0% GDX.Jobs.ParallelFor.ColorCompareJob 0 13 13 51 0% 0 0 0 1 0% GDX.Jobs.ParallelFor.ColorMatchJob 0 9 9 51 0% 0 0 0 1 0% GDX.Jobs.ParallelFor.IntegerBufferCopyJob 0 3 3 39 0% 0 0 0 1 0% GDX.Jobs.ParallelFor.IntegerBufferFillJob 0 3 3 39 0% 0 0 0 1 0% GDX.Jobs.ParallelFor.IntegerBufferSwapJob 0 3 3 43 0% 0 0 0 1 0% GDX.Localization 18 42 60 243 30% 0 0 4 7 57.1% GDX.Mathematics.Byte2 120 140 260 1062 46.1% 0 0 35 78 44.8% GDX.Mathematics.FibonacciHash 0 20 20 69 0% 0 0 0 3 0% GDX.Mathematics.Random.RandomAdaptor 30 0 30 84 100% 0 0 7 7 100% GDX.Mathematics.Random.RandomWrapper 35 0 35 75 100% 0 0 11 11 100% GDX.Mathematics.Random.WELL1024a 118 0 118 330 100% 0 0 19 19 100% GDX.Mathematics.Range 12 0 12 72 100% 0 0 4 4 100% GDX.Mathematics.Rotate 0 7 7 40 0% 0 0 0 1 0% GDX.Mathematics.Smooth 0 10 10 62 0% 0 0 0 2 0% GDX.Memory 0 16 16 67 0% 0 0 0 2 0% GDX.MeshExtensions 0 14 14 46 0% 0 0 0 1 0% GDX.ObjectExtensions 0 9 9 38 0% 0 0 0 1 0% GDX.Platform 54 52 106 285 50.9% 0 0 6 11 54.5% GDX.PlayerLoopSystemExtensions 106 67 173 395 61.2% 0 0 7 10 70% GDX.RectExtensions 0 8 8 27 0% 0 0 0 1 0% GDX.Reflection 120 3 123 333 97.5% 0 0 11 12 91.6% GDX.RigidbodyExtensions 0 4 4 39 0% 0 0 0 1 0% GDX.SceneExtensions 0 11 11 30 0% 0 0 0 1 0% GDX.SegmentedString 128 0 128 276 100% 0 0 11 11 100% GDX.Serializable 67 138 205 432 32.6% 0 0 3 7 42.8% GDX.Space 0 55 55 146 0% 0 0 0 4 0% GDX.StringExtensions 268 0 268 748 100% 0 0 22 22 100% GDX.Threading.TaskBase 81 0 81 305 100% 0 0 16 16 100% GDX.Threading.TaskDirector 213 0 213 469 100% 0 0 15 15 100% GDX.Threading.TaskDirectorSystem 53 0 53 158 100% 0 0 7 7 100% GDX.Threading.TaskExtensions 6 0 6 29 100% 0 0 1 1 100% GDX.Threading.WaitFor 15 0 15 80 100% 0 0 2 2 100% GDX.Threading.WaitWhile 15 0 15 44 100% 0 0 2 2 100% GDX.TransformExtensions 67 7 74 176 90.5% 0 0 4 4 100% GDX.Vector2Extensions 50 0 50 153 100% 0 0 5 5 100% GDX.Vector3Extensions 68 0 68 196 100% 0 0 7 7 100% GDX.VisualElementStyles 6 39 45 96 13.3% 0 0 1 6 16.6%"
  },
  "reports/inspection.html": {
    "href": "reports/inspection.html",
    "title": "Code Inspection Report | GDX",
    "keywords": "Code Inspection Report XML Note A significant portion of the suggestions found by code inspection are based on the exposure of fields that could be marked private or internal. As additional unit tests get implemented, this should start to go down. Warnings Possible 'null' assignment to non-nullable entity File Message BuildProvider.cs:150 Possible null assignment to non-nullable entity Collection is never updated: Non-private accessibility File Message Properties.cs:13 Content of collection Property is never updated TestSuite.cs:15 Content of collection TestSuites is never updated Equality comparison of floating point numbers File Message TestRunner.cs:89 Equality comparison of floating point numbers. Possible loss of precision while rounding values TestRunner.cs:118 Equality comparison of floating point numbers. Possible loss of precision while rounding values TestRunner.cs:147 Equality comparison of floating point numbers. Possible loss of precision while rounding values FloatChartWatch.cs:120 Equality comparison of floating point numbers. Possible loss of precision while rounding values FloatRangeWatch.cs:43 Equality comparison of floating point numbers. Possible loss of precision while rounding values StableTableTests.cs:279 Equality comparison of floating point numbers. Possible loss of precision while rounding values StableTableTests.cs:279 Equality comparison of floating point numbers. Possible loss of precision while rounding values StableTableTests.cs:282 Equality comparison of floating point numbers. Possible loss of precision while rounding values StableTableTests.cs:282 Equality comparison of floating point numbers. Possible loss of precision while rounding values Empty statement is redundant File Message DataTableWindowCells.cs:829 Empty statement is redundant Inconsistent Naming File Message SimpleListManagedPool.cs:71 Name destroyedItem does not match rule non_private_instance_fields_should_be_pascal_case . Suggested name is DestroyedItem . SimpleListManagedPool.cs:106 Name returnedItem does not match rule non_private_instance_fields_should_be_pascal_case . Suggested name is ReturnedItem . SimpleListManagedPool.cs:111 Name spawnedItem does not match rule non_private_instance_fields_should_be_pascal_case . Suggested name is SpawnedItem . SimpleListManagedPool.cs:116 Name tearingDown does not match rule non_private_instance_fields_should_be_pascal_case . Suggested name is TearingDown . UnsafeSparseSet.cs:1219 Name Data does not match rule instance_fields_should_be_camel_case . Suggested name is m_Data . Core.cs:36 Name MainThreadID does not match rule non_private_static_fields_should_be_pascal_case . Suggested name is MainThreadId . InputProxy.cs:713 Name Type does not match rule instance_fields_should_be_camel_case . Suggested name is m_Type . InputProxy.cs:714 Name Data does not match rule instance_fields_should_be_camel_case . Suggested name is m_Data . SimpleTestBehaviour.cs:10 Name m_frameWait does not match rule instance_fields_should_be_camel_case . Suggested name is m_FrameWait . TestRunner.cs:18 Name SafeDelayTime does not match rule constants_should_be_pascal_case . Suggested name is k_SafeDelayTime . TestRunner.cs:20 Name s_lockKnownTests does not match rule private_static_readonly . Suggested name is k_LockKnownTests . DebugDrawShapes.cs:12 Name PI does not match rule constants_should_be_pascal_case . Suggested name is k_Pi . DebugDrawShapes.cs:13 Name Deg2Rad does not match rule constants_should_be_pascal_case . Suggested name is k_Deg2Rad . DebugDrawShapes.cs:14 Name DefaultCircleVertexCount does not match rule constants_should_be_pascal_case . Suggested name is k_DefaultCircleVertexCount . TaskBase.cs:43 Name completed does not match rule non_private_instance_fields_should_be_pascal_case . Suggested name is Completed . TaskBase.cs:52 Name completedMainThread does not match rule non_private_instance_fields_should_be_pascal_case . Suggested name is CompletedMainThread . TaskDirector.cs:22 Name exceptionOccured does not match rule non_private_static_fields_should_be_pascal_case . Suggested name is ExceptionOccured . TaskDirector.cs:27 Name inputBlocked does not match rule non_private_static_fields_should_be_pascal_case . Suggested name is InputBlocked . TaskDirector.cs:32 Name logAdded does not match rule non_private_static_fields_should_be_pascal_case . Suggested name is LogAdded . TaskDirectorSystem.cs:36 Name ticked does not match rule non_private_static_fields_should_be_pascal_case . Suggested name is Ticked . EditorTaskDirectorSystem.cs:27 Name s_ProgressID does not match rule static_fields_should_be_camel_case . Suggested name is s_ProgressId . EditorTaskDirectorSystem.cs:46 Name ticked does not match rule non_private_static_fields_should_be_pascal_case . Suggested name is Ticked . GDXShortcutAttribute.cs:11 Name GDXShortcutAttribute does not match rule members_should_be_pascal_case . Suggested name is GdxShortcutAttribute . DataTableWindow.cs:50 Name CreateGUI does not match rule members_should_be_pascal_case . Suggested name is CreateGui . DataTableWindowProvider.cs:40 Name instanceID does not match rule locals_should_be_camel_case . Suggested name is instanceId . ResourceProvider.cs:13 Name s_UIElements does not match rule static_fields_should_be_camel_case . Suggested name is s_UiElements . ResourceProvider.cs:38 Name GetUIElements does not match rule members_should_be_pascal_case . Suggested name is GetUiElements . ShaderContent.cs:12 Name ColorPropertyID does not match rule non_private_readonly_fields_should_be_pascal_case . Suggested name is ColorPropertyId . UIElementsContent.cs:6 Name UIElementsContent does not match rule members_should_be_pascal_case . Suggested name is UiElementsContent . StableTableTests.cs:51 Name columnID does not match rule locals_should_be_camel_case . Suggested name is columnId . StableTableTests.cs:58 Name columnID does not match rule locals_should_be_camel_case . Suggested name is columnId . StableTableTests.cs:66 Name columnID does not match rule locals_should_be_camel_case . Suggested name is columnId . StableTableTests.cs:90 Name rowID does not match rule locals_should_be_camel_case . Suggested name is rowId . StableTableTests.cs:97 Name rowID does not match rule locals_should_be_camel_case . Suggested name is rowId . StableTableTests.cs:105 Name rowID does not match rule locals_should_be_camel_case . Suggested name is rowId . StableTableTests.cs:353 Name currID does not match rule locals_should_be_camel_case . Suggested name is currId . StableTableTests.cs:380 Name newID does not match rule locals_should_be_camel_case . Suggested name is newId . StableTableTests.cs:429 Name newID does not match rule locals_should_be_camel_case . Suggested name is newId . StableTableTests.cs:495 Name sortedOrderToIDMapString does not match rule locals_should_be_camel_case . Suggested name is sortedOrderToIdMapString . StableTableTests.cs:502 Name columnIDVals does not match rule locals_should_be_camel_case . Suggested name is columnIdVals . Invalid XML documentation comment File Message UnsafeSparseSet.cs:1105 Parameter versionArray has no matching param tag in the XML comment for GDX.Collections.UnsafeSparseSet.Dispose (but other parameters do) UnsafeSparseSet.cs:1148 Parameter versionArray has no matching param tag in the XML comment for GDX.Collections.UnsafeSparseSet.DisposeVersionArray (but other parameters do) Core.cs:96 Cannot resolve symbol RuntimeInitializeOnLoadMethod DebugDrawShapes.cs:103 Parameter rotation has no matching param tag in the XML comment for GDX.Experimental.DebugDrawShapes.GetCubeVertices (but other parameters do) DebugDrawShapes.cs:166 Parameter buffer has no matching param tag in the XML comment for GDX.Experimental.DebugDrawShapes.DrawDottedCube (but other parameters do) DebugDrawShapes.cs:166 Parameter rotation has no matching param tag in the XML comment for GDX.Experimental.DebugDrawShapes.DrawDottedCube (but other parameters do) DebugDrawShapes.cs:325 Parameter buffer has no matching param tag in the XML comment for GDX.Experimental.DebugDrawShapes.DrawWireCube (but other parameters do) DebugDrawShapes.cs:325 Parameter rotation has no matching param tag in the XML comment for GDX.Experimental.DebugDrawShapes.DrawWireCube (but other parameters do) ResourcesProviderTests.cs:11 Cannot resolve symbol ResourcesProvider Local variable hides member File Message StableDataTable.cs:221 Local variable name hides property string UnityEngine.Object.name Member initialized value ignored File Message FloatChartWatch.cs:21 Field initializer value ignored during initialization IntegerChartWatch.cs:20 Field initializer value ignored during initialization Non-accessed field: Private accessibility File Message InputProxy.cs:713 Field Type is assigned but its value is never used InputProxy.cs:714 Field Data is assigned but its value is never used RuntimeWatchController.cs:23 Field m_FontSize is assigned but its value is never used DataTableWindowTests.cs:23 Field m_DataTableWindowController is assigned but its value is never used DataTableWindowViewTests.cs:23 Field m_DataTableWindowView is assigned but its value is never used DataTableWindowViewTests.cs:24 Field m_DataTableWindowController is assigned but its value is never used Mismatch of optional parameter value in overridden method File Message StableDataTable.cs:763 Parameter columnIdentifier in base method void RemoveColumn(SerializableTypes, int) has default value Possible loss of fraction File Message IntegerChartWatch.cs:110 Possible loss of fraction Possible 'System.NullReferenceException' File Message StableDataTable.cs:336 Possible System.NullReferenceException StableDataTable.cs:343 Possible System.NullReferenceException StableDataTable.cs:348 Possible System.NullReferenceException StableDataTable.cs:422 Possible System.NullReferenceException StableDataTable.cs:429 Possible System.NullReferenceException StableDataTable.cs:439 Possible System.NullReferenceException StableDataTable.cs:448 Possible System.NullReferenceException StableDataTable.cs:456 Possible System.NullReferenceException StableDataTable.cs:527 Possible System.NullReferenceException StableDataTable.cs:534 Possible System.NullReferenceException StableDataTable.cs:536 Possible System.NullReferenceException StableDataTable.cs:544 Possible System.NullReferenceException StableDataTable.cs:553 Possible System.NullReferenceException StableDataTable.cs:561 Possible System.NullReferenceException StableDataTable.cs:1715 Possible System.NullReferenceException StableDataTable.cs:1733 Possible System.NullReferenceException StableDataTable.cs:1759 Possible System.NullReferenceException StableDataTable.cs:1803 Possible System.NullReferenceException StableDataTable.cs:1905 Possible System.NullReferenceException StableDataTable.cs:1927 Possible System.NullReferenceException StableDataTable.cs:1981 Possible System.NullReferenceException Private field can be converted to local variable File Message InputProxy.cs:680 The field is always assigned before being used and can be converted to local variable InputProxy.cs:682 The field is always assigned before being used and can be converted to local variable InputProxy.cs:684 The field is always assigned before being used and can be converted to local variable RuntimeConsoleController.cs:42 The field is always assigned before being used and can be converted to local variable BooleanWatch.cs:23 The field is always assigned before being used and can be converted to local variable SimpleWatch.cs:21 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:54 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:59 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:67 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:68 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:75 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:78 The field is always assigned before being used and can be converted to local variable DataTableWindowOverlay.cs:83 The field is always assigned before being used and can be converted to local variable DataTableWindowToolbar.cs:21 The field is always assigned before being used and can be converted to local variable Redundant argument with default value File Message ConsoleVariableSettings.cs:25 The parameter content has the same default value WatchSettings.cs:25 The parameter content has the same default value NUnitReportTests.cs:43 The parameter passed has the same default value NUnitReportTests.cs:43 The parameter failMessage has the same default value NUnitReportTests.cs:43 The parameter testSuite has the same default value NUnitReportTests.cs:81 The parameter failMessage has the same default value NUnitReportTests.cs:81 The parameter testSuite has the same default value NUnitReportTests.cs:100 The parameter testSuite has the same default value Assignment is not used File Message BuildProvider.cs:54 Value assigned is not used in any execution path ResourcesProvider.cs:120 Value assigned is not used in any execution path Redundant cast File Message StableTableTests.cs:164 Type cast is redundant StableTableTests.cs:170 Type cast is redundant StableTableTests.cs:176 Type cast is redundant StableTableTests.cs:179 Type cast is redundant StableTableTests.cs:209 Type cast is redundant StableTableTests.cs:267 Type cast is redundant StableTableTests.cs:267 Type cast is redundant StableTableTests.cs:273 Type cast is redundant StableTableTests.cs:273 Type cast is redundant StableTableTests.cs:279 Type cast is redundant StableTableTests.cs:279 Type cast is redundant StableTableTests.cs:282 Type cast is redundant StableTableTests.cs:282 Type cast is redundant Redundant member initializer File Message Console.cs:40 Initializing field by default value is redundant WatchListConsoleCommand.cs:10 Initializing field by default value is redundant ConsoleLog.cs:14 Initializing field by default value is redundant RuntimeWatchController.cs:26 Initializing field by default value is redundant FloatChartWatch.cs:20 Initializing field by default value is redundant FloatChartWatch.cs:27 Initializing field by default value is redundant IntegerChartWatch.cs:19 Initializing field by default value is redundant Redundant empty switch section File Message StableTableTests.cs:229 Redundant empty switch section StableTableTests.cs:332 Redundant empty switch section Redundant explicit type in array creation File Message ConsoleVariableBase.cs:61 Redundant explicit array type specification Redundant explicit size specification in array creation File Message DebugDrawShapes.cs:52 Redundant explicit array size specification Redundant name qualifier File Message ExecConsoleCommand.cs:79 Qualifier is redundant DebugDrawBuffer.cs:169 Qualifier is redundant DebugDrawBuffer.cs:174 Qualifier is redundant StableTableTests.cs:508 Qualifier is redundant StableTableTests.cs:508 Qualifier is redundant StableTableTests.cs:508 Qualifier is redundant StableTableTests.cs:508 Qualifier is redundant ResourcesAuditReportTests.cs:23 Qualifier is redundant TaskDirectorSystemTests.cs:216 Qualifier is redundant TaskDirectorSystemTests.cs:229 Qualifier is redundant Redundant conditional ternary expression usage File Message StableTableTests.cs:149 Redundant conditional ternary expression usage StableTableTests.cs:252 Redundant conditional ternary expression usage StableTableTests.cs:252 Redundant conditional ternary expression usage Redundant using directive File Message RuntimeConsoleController.cs:6 Using directive is not required by the code and can be safely removed RuntimeConsoleController.cs:9 Using directive is not required by the code and can be safely removed RuntimeConsoleController.cs:13 Using directive is not required by the code and can be safely removed RuntimeWatchController.cs:6 Using directive is not required by the code and can be safely removed VisualElementStyles.cs:5 Using directive is not required by the code and can be safely removed ClearConsoleCommand.cs:9 Using directive is not required by the code and can be safely removed PackageProvider.cs:11 Using directive is not required by the code and can be safely removed CommandPalette.cs:5 Using directive is not required by the code and can be safely removed DataTableWindowTests.cs:9 Using directive is not required by the code and can be safely removed DebugDrawBufferTests.cs:5 Using directive is not required by the code and can be safely removed ResourcesProviderTests.cs:5 Using directive is not required by the code and can be safely removed Specify string culture explicitly File Message FloatRangeWatch.cs:45 Specify string culture explicitly Unassigned field File Message EnvironmentSettings.cs:22 Field m_ToggleManagedLog is never assigned Get-only auto-property is never assigned File Message ScriptingDefinesBuildProcessor.cs:20 Get-only auto-property callbackOrder is never assigned Auto-property accessor is never used: Non-private accessibility File Message CoalesceArray.cs:92 Auto-property accessor Length.get is never used Properties.cs:13 Auto-property accessor Property.set is never used Property.cs:12 Auto-property accessor Name.set is never used Property.cs:13 Auto-property accessor Value.set is never used TestCase.cs:12 Auto-property accessor Id.set is never used TestCase.cs:14 Auto-property accessor FullName.set is never used TestCase.cs:15 Auto-property accessor MethodName.set is never used TestCase.cs:16 Auto-property accessor ClassName.set is never used TestCase.cs:17 Auto-property accessor RunState.set is never used TestCase.cs:18 Auto-property accessor Seed.set is never used TestCase.cs:23 Auto-property accessor Asserts.set is never used TestCase.cs:25 Auto-property accessor Output.set is never used TestCase.cs:26 Auto-property accessor Properties.set is never used TestRun.cs:13 Auto-property accessor Id.set is never used TestRun.cs:25 Auto-property accessor CLRVersion.set is never used TestRun.cs:27 Auto-property accessor StartTime.set is never used TestRun.cs:28 Auto-property accessor EndTime.set is never used TestRun.cs:29 Auto-property accessor Duration.set is never used TestSuite.cs:16 Auto-property accessor Type.set is never used TestSuite.cs:17 Auto-property accessor Id.set is never used TestSuite.cs:21 Auto-property accessor RunState.set is never used TestSuite.cs:23 Auto-property accessor Result.set is never used TestSuite.cs:24 Auto-property accessor Label.set is never used TestSuite.cs:25 Auto-property accessor StartTime.set is never used TestSuite.cs:26 Auto-property accessor EndTime.set is never used TestSuite.cs:27 Auto-property accessor Duration.set is never used TestSuite.cs:33 Auto-property accessor Asserts.set is never used TestSuite.cs:34 Auto-property accessor Properties.set is never used Type member is never used: Private accessibility File Message DataBindingProvider.cs:18 Field k_CommaSeperatedValueFormat is never used Console.cs:46 Field s_BufferCountWatch is never used Console.cs:128 Method FilterContains is never used Console.cs:316 Method Initialize is never used SimpleTestBehaviour.cs:14 Method Start is never used DebugDrawShapes.cs:34 Method GetCircleVertices is never used DebugDrawShapes.cs:50 Method GetCubeSegmentOffset is never used DebugDrawShapes.cs:66 Method GetCubeSegmentOffsetNonAlloc is never used DebugDrawShapes.cs:129 Method GetCubeVerticesNonAlloc is never used TaskDirectorSystem.cs:117 Method Initialize is never used ClearConsoleCommand.cs:47 Method RegisterCommand is never used EditorCaptureConsoleCommand.cs:58 Method RegisterCommand is never used PlayConsoleCommand.cs:39 Method RegisterCommand is never used EditorConsoleSystem.cs:37 Method Initialize is never used EditorTaskDirectorSystem.cs:83 Method Initialize is never used MenuItems.cs:19 Method ManagedMemoryReport is never used MenuItems.cs:31 Method ForceReserializeAssets is never used MenuItems.cs:44 Method FindReferencesInProject is never used MenuItems.cs:71 Method FindReferencesInProjectValidate is never used DataTableWindow.cs:30 Method OnDestroy is never used DataTableWindow.cs:50 Method CreateGUI is never used StableTableTests.cs:344 Method StableTable_STUFF is never used Method return value is never used: Private accessibility File Message DebugDrawBuffer.cs:588 Method AddLineDrawCommand return value is never used Unused local variable File Message StableDataTable.cs:445 Local variable emptyString is never used StableDataTable.cs:1083 Local variable denseIndex is never used InputProxyTests.cs:81 Local variable count is never used Suggestions Auto-property can be made get-only: Private accessibility File Message RuntimeConsoleController.cs:50 Auto-property can be made get-only RuntimeConsoleController.cs:51 Auto-property can be made get-only RuntimeWatchController.cs:20 Auto-property can be made get-only RuntimeWatchController.cs:21 Auto-property can be made get-only WatchBase.cs:26 Auto-property can be made get-only Class is never instantiated: Non-private accessibility File Message ManagedPoolBuilder.cs:17 Class ManagedPoolBuilder is never instantiated DataTableMetaData.cs:19 Class DataTableMetaData is never instantiated Properties.cs:11 Class Properties is never instantiated Property.cs:10 Class Property is never instantiated BuildConfiguration.cs:11 Class BuildConfiguration is never instantiated BuildDefinition.cs:9 Class BuildDefinition is never instantiated GDXShortcutAttribute.cs:11 Class GDXShortcutAttribute is never instantiated StableDataTableInspector.cs:15 Class StableDataTableInspector is never instantiated FontContent.cs:5 Class FontContent is never instantiated ShaderContent.cs:10 Class ShaderContent is never instantiated StyleSheetContent.cs:6 Class StyleSheetContent is never instantiated UIElementsContent.cs:6 Class UIElementsContent is never instantiated Class is never instantiated: Private accessibility File Message GameObjectPoolTests.cs:279 Class GameObjectPoolItemTest is never instantiated 'if' statement can be re-written as '?:' expression File Message DataTableMetaData.cs:65 Convert to ?: expression BuildVerificationReport.cs:27 Convert to method call with ?: expression inside ResourcesProvider.cs:121 Convert to method call with ?: expression inside Field can be made readonly: Non-private accessibility File Message BitArray128.cs:35 Field can be made readonly BitArray128.cs:41 Field can be made readonly BitArray128.cs:47 Field can be made readonly BitArray256.cs:35 Field can be made readonly BitArray256.cs:41 Field can be made readonly BitArray256.cs:47 Field can be made readonly BitArray256.cs:53 Field can be made readonly BitArray256.cs:59 Field can be made readonly BitArray256.cs:65 Field can be made readonly BitArray256.cs:71 Field can be made readonly BitArray512.cs:35 Field can be made readonly BitArray512.cs:41 Field can be made readonly BitArray512.cs:47 Field can be made readonly BitArray512.cs:53 Field can be made readonly BitArray512.cs:59 Field can be made readonly BitArray512.cs:65 Field can be made readonly BitArray512.cs:71 Field can be made readonly BitArray512.cs:77 Field can be made readonly BitArray512.cs:83 Field can be made readonly BitArray512.cs:89 Field can be made readonly BitArray512.cs:95 Field can be made readonly BitArray512.cs:101 Field can be made readonly BitArray512.cs:107 Field can be made readonly BitArray512.cs:113 Field can be made readonly BitArray512.cs:119 Field can be made readonly ArrayPool.cs:15 Field can be made readonly ArrayPool.cs:16 Field can be made readonly ConsoleLogEntry.cs:13 Field can be made readonly ConsoleLogEntry.cs:14 Field can be made readonly ConsoleLogEntry.cs:15 Field can be made readonly ConsoleLogEntry.cs:16 Field can be made readonly ConsoleLogEntry.cs:17 Field can be made readonly WatchProvider.cs:177 Field can be made readonly WatchProvider.cs:178 Field can be made readonly WatchProvider.cs:179 Field can be made readonly WatchProvider.cs:180 Field can be made readonly BuildDefinition.cs:18 Field can be made readonly EditorWindowExtensions.cs:105 Field can be made readonly EditorWindowExtensions.cs:110 Field can be made readonly EditorWindowExtensions.cs:118 Field can be made readonly EditorWindowExtensions.cs:123 Field can be made readonly EditorWindowExtensions.cs:131 Field can be made readonly EditorWindowExtensions.cs:139 Field can be made readonly EditorWindowExtensions.cs:141 Field can be made readonly EditorWindowExtensions.cs:142 Field can be made readonly EditorWindowExtensions.cs:143 Field can be made readonly Field can be made readonly: Private accessibility File Message FloatChartWatch.cs:19 Field can be made readonly FloatChartWatch.cs:20 Field can be made readonly FloatChartWatch.cs:21 Field can be made readonly FloatChartWatch.cs:22 Field can be made readonly FloatChartWatch.cs:26 Field can be made readonly FloatChartWatch.cs:27 Field can be made readonly IntegerChartWatch.cs:18 Field can be made readonly IntegerChartWatch.cs:19 Field can be made readonly IntegerChartWatch.cs:20 Field can be made readonly IntegerChartWatch.cs:21 Field can be made readonly IntegerChartWatch.cs:25 Field can be made readonly Member can be made private: Non-private accessibility File Message AddressablesExtensions.cs:93 Method HasRuntimeKey can be made private AddressablesExtensions.cs:108 Method IsEmpty can be made private CameraExtensions.cs:28 Method RenderToTexture can be made private BitArray128.cs:29 Field Bits0 can be made private BitArray128.cs:35 Field Bits1 can be made private BitArray128.cs:41 Field Bits2 can be made private BitArray128.cs:47 Field Bits3 can be made private BitArray256.cs:29 Field Bits0 can be made private BitArray256.cs:35 Field Bits1 can be made private BitArray256.cs:41 Field Bits2 can be made private BitArray256.cs:47 Field Bits3 can be made private BitArray256.cs:53 Field Bits4 can be made private BitArray256.cs:59 Field Bits5 can be made private BitArray256.cs:65 Field Bits6 can be made private BitArray256.cs:71 Field Bits7 can be made private BitArray512.cs:29 Field Bits0 can be made private BitArray512.cs:35 Field Bits1 can be made private BitArray512.cs:41 Field Bits2 can be made private BitArray512.cs:47 Field Bits3 can be made private BitArray512.cs:53 Field Bits4 can be made private BitArray512.cs:59 Field Bits5 can be made private BitArray512.cs:65 Field Bits6 can be made private BitArray512.cs:71 Field Bits7 can be made private BitArray512.cs:77 Field Bits8 can be made private BitArray512.cs:83 Field Bits9 can be made private BitArray512.cs:89 Field Bits10 can be made private BitArray512.cs:95 Field Bits11 can be made private BitArray512.cs:101 Field Bits12 can be made private BitArray512.cs:107 Field Bits13 can be made private BitArray512.cs:113 Field Bits14 can be made private BitArray512.cs:119 Field Bits15 can be made private Array3D.cs:30 Field DepthLength can be made private CircularBuffer.cs:25 Field Capacity can be made private CoalesceArray.cs:92 Property Length can be made private CoalesceArray.cs:105 Method GetBucketLocation can be made private ConcurrentCircularBuffer.cs:25 Field Array can be made private ConcurrentCircularBuffer.cs:30 Field Capacity can be made private ConcurrentCircularBuffer.cs:42 Field EndIndex can be made private ConcurrentCircularBuffer.cs:48 Field StartIndex can be made private ConcurrentCircularBuffer.cs:240 Method PushBack can be made private DictionaryPrimes.cs:92 Method SetDefaultPrimes can be made private DictionaryPrimes.cs:109 Method SetPrimes can be made private NativeArray2D.cs:21 Field Array can be made private NativeArray2D.cs:27 Field ColumnCount can be made private NativeArray2D.cs:33 Field RowCount can be made private NativeArray3D.cs:31 Field DepthLength can be made private NativeUniformArray3D.cs:36 Field StrideSquared can be made private UniformArray3D.cs:35 Field StrideSquared can be made private NativeArraySparseSet.cs:38 Field FreeIndex can be made private ArrayPool.cs:16 Field MaxPoolCapacities can be made private GameObjectPool.cs:38 Method CreatePool can be made private ManagedPoolBuilder.cs:26 Field InstantiatesPerFrame can be made private ManagedPoolBuilder.cs:31 Field DestroyBuilderOnFinish can be made private SparseSet.cs:37 Field FreeIndex can be made private UnsafeSparseSet.cs:27 Constant MinimumCapacity can be made private UnsafeSparseSet.cs:60 Field FreeIndex can be made private UnsafeSparseSet.cs:67 Field Allocator can be made private Core.cs:36 Field MainThreadID can be made private Core.cs:47 Field StartTicks can be made private Console.cs:43 Property CommandBufferCount can be made private Console.cs:78 Method UnregisterVariable can be made private Console.cs:100 Method UnregisterCommand can be made private HideConsoleCommand.cs:12 Field HideConsole can be made private ShowConsoleCommand.cs:12 Field ShowConsole can be made private ConsoleLogEntry.cs:13 Field Frame can be made private FloatConsoleVariable.cs:13 Field OnValueChanged can be made private IntegerConsoleVariable.cs:12 Field OnValueChanged can be made private StringConsoleVariable.cs:12 Field OnValueChanged can be made private InputProxy.cs:358 Method IsExtendedKey can be made private InputProxy.cs:443 Method Synthesize can be made private InputProxy.cs:466 Method Synthesize can be made private InputProxy.cs:489 Method Synthesize can be made private InputProxy.cs:545 Field Key can be made private InputProxy.cs:546 Field ScanCode can be made private InputProxy.cs:547 Field Flags can be made private InputProxy.cs:553 Field Timestamp can be made private InputProxy.cs:555 Field ExtraInfo can be made private InputProxy.cs:600 Field Message can be made private InputProxy.cs:605 Field ParamL can be made private InputProxy.cs:610 Field ParamH can be made private InputProxy.cs:632 Field X can be made private InputProxy.cs:637 Field Y can be made private InputProxy.cs:639 Field Data can be made private InputProxy.cs:640 Field Flags can be made private InputProxy.cs:646 Field Timestamp can be made private InputProxy.cs:648 Field ExtraInfo can be made private TestRunner.cs:47 Method Execute can be made private TestRun.cs:14 Accessor TestCaseCount.set can be made private TestRun.cs:22 Accessor EngineVersion.set can be made private TestSuite.cs:22 Accessor TestCaseCount.set can be made private TestSuite.cs:29 Accessor Passed.set can be made private TestSuite.cs:30 Accessor Failed.set can be made private TestSuite.cs:31 Accessor Inconclusive.set can be made private TestSuite.cs:32 Accessor Skipped.set can be made private TestSuite.cs:77 Method GetPassCount can be made private IntegerDiff.cs:14 Field Percentage can be made private IntegerDiff.cs:15 Field Change can be made private IntegerDiff.cs:16 Field LeftHandSide can be made private IntegerDiff.cs:17 Field RightHandSide can be made private LongDiff.cs:14 Field Percentage can be made private LongDiff.cs:15 Field Change can be made private LongDiff.cs:16 Field LeftHandSide can be made private LongDiff.cs:17 Field RightHandSide can be made private AssetBundleObjectInfo.cs:15 Field AssetCount can be made private AssetBundleObjectInfo.cs:17 Field IsStreamedSceneAssetBundle can be made private MeshObjectInfo.cs:15 Field IsReadable can be made private MeshObjectInfo.cs:16 Field SubMeshCount can be made private MeshObjectInfo.cs:17 Field Triangles can be made private MeshObjectInfo.cs:19 Field VertexCount can be made private ShaderObjectInfo.cs:15 Field IsSupported can be made private ShaderObjectInfo.cs:16 Field PassCount can be made private TextureObjectInfo.cs:16 Field Format can be made private TextureObjectInfo.cs:17 Field Height can be made private TextureObjectInfo.cs:19 Field IsReadable can be made private TextureObjectInfo.cs:20 Field Width can be made private ApplicationSection.cs:21 Field ActiveScene can be made private ApplicationSection.cs:26 Field Created can be made private ApplicationSection.cs:31 Field Platform can be made private ApplicationSection.cs:33 Constructor ApplicationSection can be made private MemoryDiffSection.cs:14 Field MonoHeapSize can be made private MemoryDiffSection.cs:15 Field MonoUsedSize can be made private MemoryDiffSection.cs:16 Field UnityGraphicsDriverAllocated can be made private MemoryDiffSection.cs:17 Field UnityTotalAllocatedMemory can be made private MemoryDiffSection.cs:18 Field UnityTotalReservedMemory can be made private MemoryDiffSection.cs:19 Field UnityTotalUnusedReservedMemory can be made private MemoryDiffSection.cs:21 Constructor MemoryDiffSection can be made private MemorySection.cs:47 Constructor MemorySection can be made private ResourcesAuditReport.cs:30 Field ApplicationContext can be made private ResourcesAuditReport.cs:48 Field LastTouched can be made private ResourcesAuditReport.cs:129 Method Query can be made private ResourcesDiffReport.cs:19 Field AddedObjects can be made private ResourcesDiffReport.cs:22 Field CommonObjects can be made private ResourcesDiffReport.cs:25 Field KnownUsage can be made private ResourcesDiffReport.cs:28 Field MemoryContext can be made private ResourcesDiffReport.cs:30 Field ObjectCount can be made private ResourcesDiffReport.cs:32 Field RemovedObjects can be made private RuntimeConsoleController.cs:50 Property Document can be made private RuntimeConsoleController.cs:51 Property ConsoleGameObject can be made private RuntimeConsoleController.cs:98 Method UpdateFontSize can be made private RuntimeConsoleController.cs:211 Method OnInputAutocomplete can be made private RuntimeConsoleController.cs:324 Method Tick can be made private RuntimeWatchController.cs:20 Property Document can be made private RuntimeWatchController.cs:21 Property WatchesGameObject can be made private RuntimeWatchController.cs:52 Method UpdateFontSize can be made private RuntimeWatchController.cs:57 Method UpdatePosition can be made private RuntimeWatchController.cs:62 Method UpdateShow can be made private DebugDrawBuffer.cs:187 Property Finalized can be made private DebugDrawBuffer.cs:197 Method Converge can be made private DebugDrawBuffer.cs:288 Method DrawDottedLines can be made private DebugDrawBuffer.cs:339 Method DrawLines can be made private DebugDrawBuffer.cs:358 Method DrawLines can be made private DebugDrawBuffer.cs:439 Method DrawMesh can be made private DebugDrawBuffer.cs:532 Method NextLineBatch can be made private DebugDrawShapes.cs:22 Field CubeSegmentIndices can be made private TarFile.cs:68 Method ExtractStream can be made private Color32MatchJob.cs:23 Field A can be made private Color32MatchJob.cs:28 Field B can be made private Color32MatchJob.cs:33 Field Match can be made private ColorCompareJob.cs:18 Field A can be made private ColorCompareJob.cs:23 Field B can be made private ColorCompareJob.cs:28 Field Percentage can be made private ColorMatchJob.cs:23 Field A can be made private ColorMatchJob.cs:28 Field B can be made private ColorMatchJob.cs:33 Field Match can be made private IntegerBufferCopyJob.cs:22 Field Destination can be made private IntegerBufferCopyJob.cs:28 Field Source can be made private IntegerBufferFillJob.cs:22 Field Buffer can be made private IntegerBufferFillJob.cs:28 Field FillValue can be made private IntegerBufferSwapJob.cs:27 Field A can be made private IntegerBufferSwapJob.cs:32 Field B can be made private Localization.cs:147 Method GetSystemLanguage can be made private Byte2.cs:1048 Field X can be made private Byte2.cs:1053 Field Y can be made private Smooth.cs:51 Method HalfLifeToSmoothingFactor can be made private OriginalValueAttribute.cs:26 Method As can be made private Platform.cs:185 Method GetRandomSafeCharacter can be made private PlayerLoopSystemExtensions.cs:21 Method AddSubSystem can be made private PlayerLoopSystemExtensions.cs:171 Method RemoveSubSystemsOfType can be made private PlayerLoopSystemExtensions.cs:311 Method TryGetFirstSubSystemOfType can be made private PlayerLoopSystemExtensions.cs:359 Method TryGetFirstSystemWithSubSystemOfType can be made private Reflection.cs:20 Constant PrivateFieldFlags can be made private Reflection.cs:30 Constant PublicStaticFlags can be made private Serializable.cs:259 Method GetTypeFromHashCode can be made private StringExtensions.cs:41 Constant AsciiNumberSign can be made private StringExtensions.cs:46 Constant AsciiNumberDecimal can be made private TaskBase.cs:76 Field m_Exception can be made private VisualElementStyles.cs:13 Constant AlignmentTopLeftClass can be made private VisualElementStyles.cs:14 Constant AlignmentTopRightClass can be made private VisualElementStyles.cs:15 Constant AlignmentBottomLeftClass can be made private VisualElementStyles.cs:16 Constant AlignmentBottomRightClass can be made private VisualElementStyles.cs:18 Field PositionAbsolute can be made private VisualElementStyles.cs:22 Field LengthOneHundredPercent can be made private VisualElementStyles.cs:23 Field LengthZeroPixel can be made private AssemblyProvider.cs:25 Field RuntimeAssembly can be made private AssetDatabaseReference.cs:15 Field Guid can be made private AssetDatabaseReference.cs:16 Field Type can be made private AssetDatabaseReference.cs:41 Method GetFileExtension can be made private AssetDatabaseReference.cs:51 Method GetFileName can be made private AssetDatabaseReference.cs:103 Method GetAssetPath can be made private Automation.cs:31 Method CaptureAllWindows can be made private Automation.cs:167 Method CaptureEditorWindowToPNG can be made private Automation.cs:365 Method GetEditorBounds can be made private BuildConfiguration.cs:288 Field Dependencies can be made private BuildConfiguration.cs:290 Field OutputFolder can be made private BuildConfiguration.cs:292 Field ExecutableName can be made private BuildConfiguration.cs:294 Field Scenes can be made private BuildConfiguration.cs:296 Field SceneFolders can be made private BuildConfiguration.cs:299 Field IgnoreSubsceneFolders can be made private BuildConfiguration.cs:301 Field AdditionalDefines can be made private BuildConfiguration.cs:304 Field OverlayFolders can be made private BuildEnvironment.cs:25 Method GetBuildConfigFolder can be made private BuildProvider.cs:15 Field OnExecute can be made private BuildProvider.cs:17 Field OnException can be made private BuildProvider.cs:18 Field OnReport can be made private EditorTaskDirectorSystem.cs:46 Field ticked can be made private EditorWindowExtensions.cs:20 Method ForceRepaint can be made private PackageProvider.cs:88 Constant DevDocumentationUri can be made private PackageProvider.cs:93 Constant MainDocumentationUri can be made private PackageProvider.cs:118 Field PackageManagerInfo can be made private ResourcesProvider.cs:169 Method GetStylesheet can be made private ResourcesProvider.cs:186 Method GetSharedStylesheet can be made private ResourcesProvider.cs:204 Method GetStyleSheetOverride can be made private UpdateProvider.cs:309 Method GetLastNotifiedVersion can be made private VersionControl.cs:40 Method GetAssetListFromFolder can be made private TypePicker.cs:163 Method Show can be made private DataTableWindow.cs:251 Method RebindTable can be made private DataTableWindowToolbar.cs:138 Method HasRowSelected can be made private DataTableWindowToolbar.cs:145 Method CanCommitOrder can be made private AutomaticUpdatesSettings.cs:17 Constant SectionKey can be made private BuildInfoSettings.cs:19 Constant SectionKey can be made private CommandLineProcessorSettings.cs:15 Constant SectionKey can be made private ConfigSettings.cs:15 Constant SectionKey can be made private EnvironmentSettings.cs:15 Constant SectionKey can be made private LocaleSettings.cs:18 Constant SectionKey can be made private PlatformSettings.cs:15 Constant SectionKey can be made private TaskDirectorSettings.cs:16 Constant SectionKey can be made private VisualScriptingSettings.cs:26 Constant SectionKey can be made private TransformExtensionsTests.cs:25 Method Setup can be made private Member can be made protected: Non-private accessibility File Message ObjectInfo.cs:38 Field Name can be made protected ObjectInfo.cs:43 Field Reference can be made protected ObjectInfo.cs:53 Field Type can be made protected ObjectInfo.cs:96 Method GetDetailedInformation can be made protected WatchBase.cs:106 Method AddSentimentToElement can be made protected TaskBase.cs:43 Field completed can be made protected TaskBase.cs:121 Method DoWork can be made protected Merge conditional ?: expression into conditional access File Message StableDataTable.cs:351 Merge conditional expression StableDataTable.cs:450 Merge conditional expression StableDataTable.cs:555 Merge conditional expression StableDataTable.cs:1779 Merge conditional expression Non-accessed field: Non-private accessibility File Message UnsafeSparseSet.cs:1213 Field SparseIndex is assigned but its value is never used UnsafeSparseSet.cs:1214 Field DenseIndex is assigned but its value is never used Core.cs:36 Field MainThreadID is assigned but its value is never used ColumnDescription.cs:30 Field SortOrder is assigned but its value is never used DataTableMetaData.cs:40 Field BindingDataVersion is assigned but its value is never used RowDescription.cs:25 Field SortOrder is assigned but its value is never used InputProxy.cs:547 Field Flags is assigned but its value is never used InputProxy.cs:553 Field Timestamp is assigned but its value is never used InputProxy.cs:555 Field ExtraInfo is assigned but its value is never used InputProxy.cs:600 Field Message is assigned but its value is never used InputProxy.cs:605 Field ParamL is assigned but its value is never used InputProxy.cs:610 Field ParamH is assigned but its value is never used InputProxy.cs:632 Field X is assigned but its value is never used InputProxy.cs:637 Field Y is assigned but its value is never used InputProxy.cs:639 Field Data is assigned but its value is never used InputProxy.cs:640 Field Flags is assigned but its value is never used InputProxy.cs:646 Field Timestamp is assigned but its value is never used InputProxy.cs:648 Field ExtraInfo is assigned but its value is never used Byte2.cs:1048 Field X is assigned but its value is never used Byte2.cs:1053 Field Y is assigned but its value is never used Parameter output value is always discarded: Non-private accessibility File Message SparseSet.cs:866 Parameter lookupIndex output value is always discarded SparseSet.cs:915 Parameter lookupIndex output value is always discarded SparseSet.cs:972 Parameter lookupIndex output value is always discarded SparseSet.cs:1032 Parameter lookupIndex output value is always discarded SparseSet.cs:1097 Parameter lookupIndex output value is always discarded SparseSet.cs:1170 Parameter lookupIndex output value is always discarded SparseSet.cs:1247 Parameter lookupIndex output value is always discarded SparseSet.cs:1329 Parameter lookupIndex output value is always discarded Redundant string interpolation File Message BuildProvider.cs:136 Redundant string interpolation Local variable has too wide declaration scope File Message BuildProvider.cs:54 Local variable buildReport can be declared in inner scope Unassigned field: Non-private accessibility File Message HideConsoleCommand.cs:12 Field HideConsole is never assigned ShowConsoleCommand.cs:12 Field ShowConsole is never assigned FloatConsoleVariable.cs:13 Field OnValueChanged is never assigned IntegerConsoleVariable.cs:12 Field OnValueChanged is never assigned StringConsoleVariable.cs:12 Field OnValueChanged is never assigned IntegerBufferFillJob.cs:28 Field FillValue is never assigned BuildConfiguration.cs:16 Field ProjectRelativePath is never assigned BuildConfiguration.cs:17 Field BuildRelativePath is never assigned BuildConfiguration.cs:288 Field Dependencies is never assigned BuildConfiguration.cs:290 Field OutputFolder is never assigned BuildConfiguration.cs:292 Field ExecutableName is never assigned BuildConfiguration.cs:294 Field Scenes is never assigned BuildConfiguration.cs:296 Field SceneFolders is never assigned BuildConfiguration.cs:301 Field AdditionalDefines is never assigned BuildConfiguration.cs:304 Field OverlayFolders is never assigned BuildDefinition.cs:13 Field Backend is never assigned BuildProvider.cs:15 Field OnExecute is never assigned BuildProvider.cs:17 Field OnException is never assigned BuildProvider.cs:18 Field OnReport is never assigned EditorTaskDirectorSystem.cs:46 Field ticked is never assigned ManifestEntry.cs:71 Field version is never assigned PackageProvider.cs:498 Field version is never assigned PackageProvider.cs:499 Field unity is never assigned ShaderContent.cs:14 Field DottedLine is never assigned ShaderContent.cs:15 Field UnlitColor is never assigned UIElementsContent.cs:8 Field RuntimeConsole is never assigned UIElementsContent.cs:9 Field Watches is never assigned Type member is never used: Non-private accessibility File Message AddressablesExtensions.cs:37 Method CanInstantiate is never used AddressablesExtensions.cs:53 Method CanRelease is never used ArrayExtensions.cs:109 Method FirstIndexOf is never used ArrayExtensions.cs:174 Method LastIndexOf is never used BoxColliderExtensions.cs:24 Method ContainsPosition is never used CameraExtensions.cs:67 Method RenderToPNG is never used CapsuleColliderExtensions.cs:25 Method Direction is never used CapsuleColliderExtensions.cs:43 Method OutSphereCenters is never used BitArray128.cs:53 Indexer this is never used BitArray256.cs:77 Indexer this is never used BitArray32.cs:44 Indexer this is never used (except inside its declaration) BitArray512.cs:125 Indexer this is never used BitArray64.cs:44 Indexer this is never used (except inside its declaration) Array2D.cs:53 Constructor Array2D is never used Array2DExtensions.cs:21 Method Scale is never used Array3D.cs:114 Method GetFromIndex is never used CircularBuffer.cs:76 Constructor CircularBuffer is never used CoalesceArray.cs:72 Indexer this is never used CoalesceArray.cs:94 Method GetBucket is never used CoalesceArray.cs:99 Method GetBucketCount is never used CoalesceArray.cs:113 Method Resize is never used ConcurrentCircularBuffer.cs:85 Constructor ConcurrentCircularBuffer is never used ConcurrentCircularBuffer.cs:124 Accessor Item.set is never used ConcurrentCircularBuffer.cs:166 Method GetBack is never used ConcurrentCircularBuffer.cs:175 Method GetFront is never used ConcurrentCircularBuffer.cs:186 Method IsEmpty is never used ConcurrentCircularBuffer.cs:196 Method IsFull is never used ConcurrentCircularBuffer.cs:204 Method PopBack is never used ConcurrentCircularBuffer.cs:222 Method PopFront is never used ConcurrentCircularBuffer.cs:271 Method PushFront is never used ConcurrentCircularBuffer.cs:304 Method ToArray is never used DictionaryPrimes.cs:57 Method GetPrimesLength is never used ExpandingArray.cs:23 Method Add is never used ExpandingArray.cs:30 Method AddRange is never used ExpandingArray.cs:38 Method AddRangeUnchecked is never used ExpandingArray.cs:44 Method AddUnchecked is never used ExpandingArray.cs:50 Method Clear is never used ExpandingArray.cs:71 Method GetSpan is never used ExpandingArray.cs:76 Method GetSpan is never used ExpandingArray.cs:81 Method GetReadOnlySpan is never used ExpandingArray.cs:86 Method GetReadOnlySpan is never used ExpandingArray.cs:91 Method HasData is never used ExpandingArray.cs:96 Method Reset is never used IListExtensions.cs:85 Method ContainsReference is never used NativeArray2D.cs:55 Indexer this is never used NativeArray2D.cs:69 Method AddRows is never used NativeArray2D.cs:86 Method AddColumns is never used NativeArray2D.cs:118 Method ReverseColumns is never used NativeArray2D.cs:147 Method ReverseRows is never used NativeArray2D.cs:176 Method ToMultiDimensionalArray is never used NativeArray3D.cs:125 Method GetFromIndex is never used NativeUniformArray3D.cs:66 Accessor Item.set is never used NativeUniformArray3D.cs:74 Indexer this is never used NativeUniformArray3D.cs:103 Method GetFromIndex is never used SimpleListExtensions.cs:141 Method Contains is never used SimpleListExtensions.cs:273 Method FirstIndexOfItem is never used SimpleListExtensions.cs:297 Method FirstIndexOfValue is never used SimpleListExtensions.cs:323 Method LastIndexOf is never used SimpleListExtensions.cs:347 Method LastIndexOfItem is never used SimpleListExtensions.cs:371 Method LastIndexOfValue is never used UniformArray3D.cs:64 Accessor Item.set is never used UniformArray3D.cs:72 Indexer this is never used UniformArray3D.cs:94 Method GetFromIndex is never used UniformArray3D.cs:109 Method GetFromIndex is never used IGameObjectPoolItem.cs:28 Method GetParentPool is never used IGameObjectPoolItem.cs:59 Method ReturnToPool is never used IManagedPool.cs:22 Method ForceRemove is never used IManagedPool.cs:59 Method IsManaged is never used IManagedPool.cs:66 Method IsPooled is never used ManagedPools.cs:50 Method GetPool is never used ManagedPools.cs:61 Method GetPool is never used ManagedPools.cs:72 Method GetPoolWithContainsCheck is never used ManagedPools.cs:84 Method GetPoolWithContainsCheck is never used ManagedPools.cs:108 Method ReturnAll is never used ManagedPools.cs:146 Method TearDown is never used SparseSet.cs:134 Method AddWithExpandCheck is never used SparseSet.cs:831 Method Reserve is never used UnsafeSparseSet.cs:1105 Method Dispose is never used UnsafeSparseSet.cs:1148 Method DisposeVersionArray is never used UnsafeSparseSet.cs:1226 Property Items is never used Core.cs:122 Method InitializeAtRuntime is never used Console.cs:23 Enum member Superuser is never used Console.cs:73 Method UnregisterVariable is never used Console.cs:95 Method UnregisterCommand is never used Console.cs:198 Method GetCommandKeywordsEnumerator is never used Console.cs:282 Method SetAccessLevel is never used ConsoleVariableBase.cs:25 Enum member Cheat is never used ConsoleVariableBase.cs:42 Method GetConsoleVariableType is never used ConsoleVariableBase.cs:43 Method GetBoxedValue is never used BooleanConsoleVariable.cs:70 Method GetValue is never used BooleanConsoleVariable.cs:75 Method SetValue is never used FloatConsoleVariable.cs:72 Method GetValue is never used FloatConsoleVariable.cs:77 Method SetValue is never used IntegerConsoleVariable.cs:71 Method GetValue is never used IntegerConsoleVariable.cs:76 Method SetValue is never used StringConsoleVariable.cs:54 Method GetValue is never used StringConsoleVariable.cs:59 Method SetValue is never used ConsoleVariableSettings.cs:18 Method SaveToFile is never used InputProxy.cs:24 Enum member InputSystem is never used InputProxy.cs:45 Enum member Unicode is never used InputProxy.cs:46 Enum member ScanCode is never used InputProxy.cs:389 Enum member RightDown is never used InputProxy.cs:390 Enum member RightUp is never used InputProxy.cs:391 Enum member MiddleDown is never used InputProxy.cs:392 Enum member MiddleUp is never used InputProxy.cs:393 Enum member VerticalWheel is never used InputProxy.cs:394 Enum member HorizontalWheel is never used InputProxy.cs:438 Method Synthesize is never used InputProxy.cs:461 Method Synthesize is never used InputProxy.cs:484 Method Synthesize is never used InputProxy.cs:516 Method MouseClick is never used InputProxy.cs:612 Constructor HardwareInput is never used ManagedUpdateSystem.cs:37 Method RegisterManagedInitialization is never used ManagedUpdateSystem.cs:42 Method RemoveManagedInitialization is never used ManagedUpdateSystem.cs:47 Method RegisterManagedUpdate is never used ManagedUpdateSystem.cs:53 Method UnregisterManagedUpdate is never used ManagedUpdateSystem.cs:59 Method RegisterManagedPreUpdate is never used ManagedUpdateSystem.cs:65 Method UnregisterManagedPreUpdate is never used ManagedUpdateSystem.cs:101 Method RegisterManagedFixedUpdate is never used ManagedUpdateSystem.cs:107 Method UnregisterManagedFixedUpdate is never used ManagedUpdateSystem.cs:123 Method RegisterManagedEarlyUpdate is never used ManagedUpdateSystem.cs:129 Method UnregisterManagedEarlyUpdate is never used ManagedUpdateSystem.cs:145 Method RegisterManagedPreLateUpdate is never used ManagedUpdateSystem.cs:151 Method UnregisterManagedPreLateUpdate is never used ManagedUpdateSystem.cs:167 Method RegisterManagedPostLateUpdate is never used ManagedUpdateSystem.cs:173 Method UnregisterManagedPostLateUpdate is never used ManagedUpdateSystem.cs:190 Method AddToPlayerLoop is never used ManagedUpdateSystem.cs:224 Method RemoveFromPlayerLoop is never used ManagedUpdateSystem.cs:255 Method IsRunning is never used Profiling.cs:60 Method TakeMemorySnapshot is never used Profiling.cs:97 Method StartProfiling is never used Profiling.cs:137 Method StopProfiling is never used BuildVerificationReport.cs:45 Method Skip is never used TestCase.cs:30 Method GetCategory is never used TestSuite.cs:96 Method GetFailCount is never used AssetBundleObjectInfo.cs:14 Constant TypeDefinition is never used MeshObjectInfo.cs:14 Constant TypeDefinition is never used ObjectInfo.cs:23 Constant TypeDefinition is never used ObjectInfoFactory.cs:15 Method GetObjectInfo is never used ShaderObjectInfo.cs:14 Constant TypeDefinition is never used ResourceReport.cs:134 Method CreateYesNo is never used ResourcesAuditReport.cs:241 Method Remove is never used RuntimeConsoleController.cs:114 Method OnInputVerticalScroll is never used RuntimeConsoleController.cs:123 Method OnInputUp is never used RuntimeConsoleController.cs:146 Method OnInputDown is never used RuntimeConsoleController.cs:172 Method OnInputLeft is never used RuntimeConsoleController.cs:176 Method OnInputRight is never used RuntimeConsoleController.cs:181 Method OnInputSubmit is never used RuntimeConsoleController.cs:199 Method OnInputBackspace is never used RuntimeConsoleController.cs:232 Method OnInputPageUp is never used RuntimeConsoleController.cs:242 Method OnInputPageDown is never used RuntimeConsoleController.cs:317 Method ClearInput is never used RuntimeConsoleController.cs:334 Method Show is never used RuntimeConsoleController.cs:347 Method OnTextInput is never used RuntimeWatchController.cs:76 Method Tick is never used TransientReference.cs:45 Constructor TransientReference is never used WatchBase.cs:73 Method SentimentRange is never used WatchBase.cs:81 Method SentimentRange is never used WatchBase.cs:89 Method SentimentRangeReversed is never used WatchBase.cs:97 Method SentimentRangeReversed is never used WatchSettings.cs:18 Method SaveToFile is never used Display.cs:24 Method GetScreenHeight is never used Display.cs:36 Method GetScreenWidth is never used Display.cs:49 Method IsHDRSupported is never used Display.cs:68 Method IsHDREnabled is never used DebugDrawBuffer.cs:256 Method DrawDottedLine is never used DebugDrawBuffer.cs:307 Method DrawLine is never used DebugDrawBuffer.cs:433 Method DrawRenderer is never used DebugDrawBuffer.cs:455 Method Execute is never used DebugDrawBuffer.cs:469 Method GetBuffer is never used DebugDrawBuffer.cs:479 Method HasToken is never used DebugDrawBuffer.cs:484 Method Unlock is never used DebugDrawBuffer.cs:493 Method Invalidate is never used DebugDrawBuffer.cs:504 Method InvalidateAll is never used DebugDrawBuffer.cs:514 Method NextDottedLineBatch is never used DebugDrawBuffer.cs:523 Method NextLineBatch is never used DebugDrawBuffer.cs:562 Method Reset is never used DebugDrawShapes.cs:166 Method DrawDottedCube is never used DebugDrawShapes.cs:174 Method DrawWireCapsule is never used DebugDrawShapes.cs:255 Method DrawWireArc is never used DebugDrawShapes.cs:287 Method DrawWireCircle is never used DebugDrawShapes.cs:325 Method DrawWireCube is never used DebugDrawShapes.cs:332 Method DrawWireSphere is never used GameObjectExtensions.cs:31 Method DestroyChildren is never used GameObjectExtensions.cs:102 Method GetOrAddComponent is never used GameObjectExtensions.cs:115 Method GetScenePath is never used InspectorMessageBoxAttribute.cs:22 Enum member None is never used CoalesceStream.cs:67 Constructor CoalesceStream is never used CoalesceStream.cs:85 Constructor CoalesceStream is never used Localization.cs:86 Method GetISO639_1 is never used FibonacciHash.cs:22 Method GetRightShiftFromPow2Length is never used FibonacciHash.cs:41 Method GetIndexFromHash is never used FibonacciHash.cs:55 Method GetIndexFromHash is never used Rotate.cs:29 Method Towards is never used Smooth.cs:35 Method Exponential is never used Memory.cs:49 Method CleanUpAsync is never used MeshExtensions.cs:27 Method CalculateVolume is never used MonoBehaviourExtensions.cs:51 Method GetFirstComponentInChildrenComplex is never used ObjectExtensions.cs:22 Method SafeDestroy is never used OriginalValueAttribute.cs:56 Method GetValue is never used Platform.cs:26 Constant CharacterPoolLength is never used Platform.cs:33 Constant TimestampFormat is never used Platform.cs:65 Method EnsureFileWritable is never used Platform.cs:102 Method GetHardwareGeneration is never used Platform.cs:239 Method IsFocused is never used Platform.cs:256 Method IsFileWritable is never used PlayerLoopSystemExtensions.cs:247 Method ReplaceFirstSubSystemOfType is never used PlayerLoopSystemExtensions.cs:274 Method ReplaceSubSystemsOfType is never used RigidbodyExtensions.cs:26 Method MomentOfInertia is never used Serializable.cs:111 Method GetHashCode is never used Serializable.cs:414 Method GetTypeFromLabel is never used Space.cs:71 Method GetDirection is never used Space.cs:130 Method ToRotation is never used StringExtensions.cs:51 Constant AsciiNumberSeparator is never used WaitFor.cs:29 Constant FiveSeconds is never used WaitFor.cs:34 Constant TenSeconds is never used WaitFor.cs:39 Constant ThirtySeconds is never used WaitFor.cs:44 Constant OneMinute is never used WaitFor.cs:49 Constant TenMinutes is never used VisualElementStyles.cs:19 Field PositionRelative is never used VisualElementStyles.cs:81 Method Fullscreen is never used VisualScriptingCompatibleAttribute.cs:41 Constructor VisualScriptingCompatibleAttribute is never used VisualScriptingCompatibleAttribute.cs:58 Constructor VisualScriptingCompatibleAttribute is never used AssetDatabaseReference.cs:61 Method GetFileNameWithoutExtension is never used AssetDatabaseReference.cs:71 Method GetDiskPath is never used AssetDatabaseReference.cs:113 Method GetTypeString is never used Automation.cs:275 Method FinishProfile is never used Automation.cs:301 Method GenerateProjectFiles is never used Automation.cs:452 Method ResetEditor is never used BuildDefinition.cs:20 Constructor BuildDefinition is never used BuildDefinition.cs:44 Constructor BuildDefinition is never used BuildEnvironment.cs:37 Method GetBuildConfiguration is never used BuildProvider.cs:20 Method Execute is never used EditorPrefsCache.cs:67 Method GetColor is never used EditorPrefsCache.cs:93 Method GetFloat is never used EditorPrefsCache.cs:109 Method GetInteger is never used EditorPrefsCache.cs:125 Method GetString is never used EditorPrefsCache.cs:164 Method SetColor is never used EditorPrefsCache.cs:188 Method SetFloat is never used EditorPrefsCache.cs:212 Method SetInteger is never used EditorPrefsCache.cs:236 Method SetString is never used StableDataTableInspector.cs:21 Method CreateStableTableExample is never used ManifestEntry.cs:72 Field depth is never used ManifestEntry.cs:73 Field source is never used ManifestEntry.cs:74 Field dependencies is never used ManifestEntry.cs:75 Field hash is never used SerializedStopwatch.cs:19 Property ElapsedTicks is never used (except inside its declaration) TestFramework.cs:19 Method Initialize is never used VisualElementsProvider.cs:12 Method ActionableHelpBox is never used CommandPalette.cs:45 Method Open is never used DataTableWindowProvider.cs:40 Method OnOpenAssetTable is never used DataTableWindowShortcuts.cs:15 Method AddRow is never used DataTableWindowShortcuts.cs:26 Method AddRowDefault is never used DataTableWindowShortcuts.cs:37 Method AddColumn is never used DataTableWindowShortcuts.cs:47 Method RemoveSelectedRow is never used DataTableWindowShortcuts.cs:57 Method RemoveSelectedRowQuick is never used DataTableWindowToolbar.cs:152 Method HasSortedColumns is never used DataTableWindowView.cs:455 Method Show is never used VisualScriptingSettings.cs:274 Method GetPriority is never used IConfigSection.cs:12 Method GetSectionIndex is never used IConfigSection.cs:24 Method GetSearchKeywords is never used ProjectSettingsProvider.cs:213 Method Get is never used ProjectSettingsProvider.cs:465 Method Reset is never used ProjectSettingsProvider.cs:662 Method SetMaskChangeCheck is never used DomainReloadTests.cs:67 Method Setup is never used DomainReloadTests.cs:110 Method TearDown is never used EditorTaskDirectorTests.cs:24 Method Setup is never used EditorTaskDirectorTests.cs:41 Method TearDown is never used DataTableWindowControllerTests.cs:24 Method Setup is never used DataTableWindowControllerTests.cs:35 Method TearDown is never used DataTableWindowTests.cs:26 Method Setup is never used DataTableWindowTests.cs:39 Method TearDown is never used DataTableWindowViewTests.cs:27 Method Setup is never used DataTableWindowViewTests.cs:40 Method TearDown is never used FontContent.cs:7 Field FontAwesome is never used ResourceProvider.cs:17 Method GetFonts is never used ResourceProvider.cs:28 Method GetStyleSheets is never used StyleSheetContent.cs:8 Field Base is never used StyleSheetContent.cs:9 Field RuntimeConsole is never used StyleSheetContent.cs:10 Field Watches is never used TaskDirectorSystemTests.cs:34 Method Setup is never used TaskDirectorSystemTests.cs:62 Method TearDown is never used TransformExtensionsTests.cs:51 Method TearDown is never used Type member is never accessed via base type: Non-private accessibility File Message IManagedPool.cs:28 Only implementations of method Get are used DataTableBase.cs:165 Only overrides of method GetRowDescription are used DataTableBase.cs:206 Only overrides of method SetRowOrder are used DataTableBase.cs:232 Only overrides of method SetAllColumnOrders are used DataTableBase.cs:654 Only overrides of method SetVector2 are used DataTableBase.cs:663 Only overrides of method SetVector3 are used DataTableBase.cs:672 Only overrides of method SetVector4 are used DataTableBase.cs:681 Only overrides of method SetVector2Int are used DataTableBase.cs:690 Only overrides of method SetVector3Int are used DataTableBase.cs:699 Only overrides of method SetQuaternion are used DataTableBase.cs:708 Only overrides of method SetRect are used DataTableBase.cs:717 Only overrides of method SetRectInt are used DataTableBase.cs:726 Only overrides of method SetColor are used DataTableBase.cs:735 Only overrides of method SetLayerMask are used DataTableBase.cs:744 Only overrides of method SetBounds are used DataTableBase.cs:753 Only overrides of method SetBoundsInt are used DataTableBase.cs:762 Only overrides of method SetHash128 are used DataTableBase.cs:771 Only overrides of method SetGradient are used DataTableBase.cs:780 Only overrides of method SetAnimationCurve are used DataTableBase.cs:789 Only overrides of method SetObject are used ITestBehaviour.cs:14 Only implementations of method Check are used ITestBehaviour.cs:27 Only implementations of method Setup are used ITestBehaviour.cs:32 Only implementations of method TearDown are used IRandomProvider.cs:16 Only implementations of method NextBoolean are used IRandomProvider.cs:65 Only implementations of method NextIntegerExclusive are used IRandomProvider.cs:78 Only implementations of method NextSingle are used IRandomProvider.cs:92 Only implementations of method NextUnsignedInteger are used IRandomProvider.cs:105 Only implementations of method NextUnsignedIntegerExclusive are used Method return value is never used: Non-private accessibility File Message IListExtensions.cs:138 Method RemoveItems return value is never used SimpleListExtensions.cs:454 Method RemoveItems return value is never used SimpleListExtensions.cs:487 Method RemoveReferences return value is never used InputProxy.cs:506 Method KeyPress return value is never used ResourceReport.cs:44 Method Output return value is never used PlayerLoopSystemExtensions.cs:64 Method AddSubSystemToFirstSubSystemOfType return value is never used PlayerLoopSystemExtensions.cs:100 Method AddSubSystemToFirstSubSystemOfType return value is never used PlayerLoopSystemExtensions.cs:226 Method RemoveSubSystemsOfTypeFromFirstSubSystemOfType return value is never used Reflection.cs:121 Method InvokeMethod return value is never used DataTableWindowController.cs:123 Method MoveColumnRight return value is never used DataTableWindowController.cs:144 Method MoveColumnLeft return value is never used Unused parameter: Non-private accessibility File Message FormatBase.cs:69 Parameter currentDataVersion is not used in any of the implementations FormatBase.cs:69 Parameter currentStructuralVersion is not used in any of the implementations ConsoleCommandBase.cs:43 Parameter existingSet is used neither in this nor in overriding methods ConsoleVariableBase.cs:57 Parameter existingSet is never used InputProxy.cs:443 Parameter method is never used InputProxy.cs:466 Parameter method is never used InputProxy.cs:489 Parameter method is never used InputProxy.cs:516 Parameter virtualMode is never used DataTableTracker.cs:717 Parameter columnIdentifier is not used in any of the implementations DataTableTracker.cs:723 Parameter rowIdentifier is not used in any of the implementations DataTableWindowProvider.cs:27 Parameter dataTable is never used DataTableWindowProvider.cs:40 Parameter line is never used DataTableWindowToolbar.cs:152 Parameter action is never used Type is never used: Non-private accessibility File Message AddressablesExtensions.cs:23 Class AddressablesExtensions is never used BoxColliderExtensions.cs:16 Class BoxColliderExtensions is never used CameraExtensions.cs:17 Class CameraExtensions is never used CapsuleColliderExtensions.cs:17 Class CapsuleColliderExtensions is never used BitArray128.cs:23 Struct BitArray128 is never used (except inside its declaration) BitArray256.cs:23 Struct BitArray256 is never used (except inside its declaration) BitArray512.cs:23 Struct BitArray512 is never used (except inside its declaration) Array2DExtensions.cs:13 Class Array2DExtensions is never used CoalesceArray.cs:16 Struct CoalesceArray is never used ExpandingArray.cs:10 Struct ExpandingArray is never used NativeArray2D.cs:16 Struct NativeArray2D is never used FloatConsoleVariable.cs:11 Class FloatConsoleVariable is never used IntegerConsoleVariable.cs:10 Class IntegerConsoleVariable is never used StringConsoleVariable.cs:10 Class StringConsoleVariable is never used ManagedUpdateSystem.cs:12 Class ManagedUpdateSystem is never used (except inside its declaration) Profiling.cs:24 Class Profiling is never used RuntimeConsoleController.cs:21 Class RuntimeConsoleController is never used RuntimeWatchController.cs:16 Class RuntimeWatchController is never used BooleanWatch.cs:15 Class BooleanWatch is never used FloatChartWatch.cs:15 Class FloatChartWatch is never used FloatRangeWatch.cs:13 Class FloatRangeWatch is never used IntegerChartWatch.cs:14 Class IntegerChartWatch is never used IntegerRangeWatch.cs:12 Class IntegerRangeWatch is never used Display.cs:14 Class Display is never used DebugDrawShapes.cs:10 Class DebugDrawShapes is never used Color32MatchJob.cs:18 Struct Color32MatchJob is never used ColorCompareJob.cs:13 Struct ColorCompareJob is never used ColorMatchJob.cs:18 Struct ColorMatchJob is never used IntegerBufferCopyJob.cs:16 Struct IntegerBufferCopyJob is never used IntegerBufferFillJob.cs:16 Struct IntegerBufferFillJob is never used IntegerBufferSwapJob.cs:22 Struct IntegerBufferSwapJob is never used FibonacciHash.cs:9 Class FibonacciHash is never used Rotate.cs:15 Class Rotate is never used Smooth.cs:14 Class Smooth is never used MeshExtensions.cs:17 Class MeshExtensions is never used MonoBehaviourExtensions.cs:18 Class MonoBehaviourExtensions is never used ObjectExtensions.cs:14 Class ObjectExtensions is never used RigidbodyExtensions.cs:15 Class RigidbodyExtensions is never used UnsupportedRuntimeException.cs:10 Class UnsupportedRuntimeException is never used BuildInfoBuildProcessor.cs:67 Class BuildInfoBuildProcessor is never used BuildProvider.cs:10 Class BuildProvider is never used ScriptingDefinesBuildProcessor.cs:14 Class ScriptingDefinesBuildProcessor is never used ClearConsoleCommand.cs:14 Class ClearConsoleCommand is never used (except inside its declaration) EditorCaptureConsoleCommand.cs:16 Class EditorCaptureConsoleCommand is never used (except inside its declaration) PlayConsoleCommand.cs:11 Class PlayConsoleCommand is never used (except inside its declaration) InspectorMessageBoxAttributeDecoratorDrawer.cs:15 Class InspectorMessageBoxAttributeDecoratorDrawer is never used EditorConsoleSystem.cs:12 Class EditorConsoleSystem is never used MenuItems.cs:14 Class MenuItems is never used AnimationCurveCellValueDrawer.cs:14 Class AnimationCurveCellValueDrawer is never used BoolCellValueDrawer.cs:13 Class BoolCellValueDrawer is never used BoundsCellValueDrawer.cs:13 Class BoundsCellValueDrawer is never used BoundsIntCellValueDrawer.cs:13 Class BoundsIntCellValueDrawer is never used ByteCellValueDrawer.cs:13 Class ByteCellValueDrawer is never used CharCellValueDrawer.cs:13 Class CharCellValueDrawer is never used ColorCellValueDrawer.cs:14 Class ColorCellValueDrawer is never used DoubleCellValueDrawer.cs:13 Class DoubleCellValueDrawer is never used EnumIntCellValueDrawer.cs:13 Class EnumIntCellValueDrawer is never used FloatCellValueDrawer.cs:13 Class FloatCellValueDrawer is never used GradientCellValueDrawer.cs:14 Class GradientCellValueDrawer is never used Hash128CellValueDrawer.cs:13 Class Hash128CellValueDrawer is never used IntCellValueDrawer.cs:13 Class IntCellValueDrawer is never used LayerMaskCellValueDrawer.cs:14 Class LayerMaskCellValueDrawer is never used LongCellValueDrawer.cs:13 Class LongCellValueDrawer is never used ObjectCellValueDrawer.cs:16 Class ObjectCellValueDrawer is never used QuaternionCellValueDrawer.cs:14 Class QuaternionCellValueDrawer is never used RectCellValueDrawer.cs:13 Class RectCellValueDrawer is never used RectIntCellValueDrawer.cs:13 Class RectIntCellValueDrawer is never used SByteCellValueDrawer.cs:13 Class SByteCellValueDrawer is never used ShortCellValueDrawer.cs:13 Class ShortCellValueDrawer is never used StringCellValueDrawer.cs:13 Class StringCellValueDrawer is never used UIntCellValueDrawer.cs:13 Class UIntCellValueDrawer is never used ULongCellValueDrawer.cs:13 Class ULongCellValueDrawer is never used UShortCellValueDrawer.cs:13 Class UShortCellValueDrawer is never used Vector2CellValueDrawer.cs:13 Class Vector2CellValueDrawer is never used Vector2IntCellValueDrawer.cs:13 Class Vector2IntCellValueDrawer is never used Vector3CellValueDrawer.cs:13 Class Vector3CellValueDrawer is never used Vector3IntCellValueDrawer.cs:13 Class Vector3IntCellValueDrawer is never used Vector4CellValueDrawer.cs:13 Class Vector4CellValueDrawer is never used DisableInInspectorAttributePropertyDrawer.cs:20 Class DisableInInspectorAttributePropertyDrawer is never used SerializableDictionaryPropertyDrawer.cs:30 Class SerializableDictionaryPropertyDrawer is never used VisualElementsProvider.cs:10 Class VisualElementsProvider is never used CommandPalette.cs:17 Class CommandPalette is never used (except inside its declaration) DataTableWindowShortcuts.cs:12 Class DataTableWindowShortcuts is never used DataTableWindowTests.cs:18 Class DataTableWindowTests is never used DataTableWindowViewTests.cs:18 Class DataTableWindowViewTests is never used DebugDrawBufferTests.cs:13 Class DebugDrawBufferTests is never used Use object or collection initializer when possible File Message DataBindingProvider.cs:86 Use collection initializer Virtual (overridable) member is never overridden: Non-private accessibility File Message ConsoleVariableBase.cs:37 Virtual method GetAccessLevel is never overridden ConsoleVariableBase.cs:57 Virtual method GetArgumentAutoCompleteSuggestions is never overridden Hints Use explicit or implicit modifier definition for types File Message UnsafeSparseSet.cs:1167 Inconsistent modifiers style: redundant internal modifier UnsafeSparseSet.cs:1181 Inconsistent modifiers style: redundant internal modifier UnsafeSparseSet.cs:1195 Inconsistent modifiers style: redundant internal modifier UnsafeSparseSet.cs:1217 Inconsistent modifiers style: redundant internal modifier Use preferred 'var' style: For built-in types File Message UnsafeSparseSet.cs:1232 Use explicit type (built-in types) Use preferred 'var' style: Elsewhere File Message StableTableTests.cs:391 Use explicit type (elsewhere) StableTableTests.cs:440 Use explicit type (elsewhere) StableTableTests.cs:479 Use explicit type (elsewhere) Use preferred 'var' style: When type is simple File Message UnsafeSparseSet.cs:1078 Use explicit type (simple types) UnsafeSparseSet.cs:1109 Use explicit type (simple types) UnsafeSparseSet.cs:1152 Use explicit type (simple types)"
  }
}